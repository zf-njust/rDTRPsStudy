==================
412272f5;Rodolfo Carvalho;2022-03-11 23:16:31 -0500;Added support for pg8000 as the PostgreSQL driver (#3142)
* Added support for pg8000

* Conditionally importing the library based on environment variables

* Removing all pyscopg-specific code from error handling

* Better handling of error codes

* Added pg8000 as a test dependency

* Simplified some of the code and fixed flake8 issues

* Implemented the missing reset() method in pg8000

Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/contrib/postgres.py
tox.ini
==================
07f4d7d8;Nehal J Wani;2022-03-11 23:07:46 -0500;Improve speed of get_task_family() (#3129)
* Use f-string instead of str.format()
* Save duplicate call to get_task_namespace()

Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/task_register.py
==================
d9450d44;Sam Phinizy;2022-03-11 22:56:03 -0500;Allow for a custom MetricsCollector class to be loaded at runtime (#3146)
* Change metrics.get to allow for custom imports

* Flake8 & Docs Fixes

Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

doc/configuration.rst
luigi/metrics.py
luigi/scheduler.py
test/scheduler_test.py
==================
096fb989;Moritz Bauer;2022-03-12 04:41:42 +0100;Add EnumListParameter to __init__ (#3144)
Co-authored-by: Moritz Bauer <moritz.bauer@desy.de>
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/__init__.py
==================
3c4f0fd2;hirosassa;2022-03-12 12:29:08 +0900;upgrade tenacity version (#3147)
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

setup.py
==================
300b1ad6;alecgarza96;2022-03-09 21:18:56 -0600;Fixes #3148: Python 3.10 Deprecation Warnings (#3150)
* refactored pid and time into variables for seed

* changed 1e10 on lines 287 & 331 to 10000000000 int
==

luigi/target.py
luigi/worker.py
==================
56b2e4f9;hirosassa;2022-01-17 00:01:41 +0900;fix ci in dirty way (#3113)

==

.github/workflows/pythonbuild.yml
test/contrib/hadoop_test.py
==================
42df63f1;gunsoo;2022-01-11 11:45:55 +0900;Add pickle protocol option support for Spark (#3001)
* Add pickle protocol option support for Spark

* Pull from spark config section

Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/contrib/spark.py
==================
800f53f3;Buster Styren;2022-01-11 03:36:51 +0100;rdbms contrib: send conn to _add_metadata_columns (#3011)
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/contrib/rdbms.py
==================
a4a5a9db;Joel Barmettler;2022-01-11 03:28:56 +0100;Import "Nop" from formates to make LocalTarget format clear (#3047)
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

doc/tasks.rst
==================
fa40e2c9;Martin Andersson;2022-01-11 03:21:04 +0100;Destructor of LocalTarget sometimes fails with AttributeError: 'LocalTarget' object has no attribute 'is_tmp' (#3085)
* Add failing test for destructor in LocalTarget

* Added check for uninitialised attribute in destructor of LocalTarget

Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/local_target.py
test/local_target_test.py
==================
b6134e67;joooeey;2022-01-11 03:14:08 +0100;add possiblity of input in seconds to TimeDeltaParameter (#3125)
* add possiblity of input in seconds to TimeDeltaParameter

* moved unit tests to parameter_test.py and removed unit test that should fail.

* `email_interval` to `email_interval_minutes`

Co-authored-by: Lukas Schreiber <lukas.schreiber@edeo-gmbh.de>
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

doc/configuration.rst
luigi/batch_notifier.py
luigi/parameter.py
test/parameter_test.py
==================
569b00f8;Jason Greenlaw;2022-01-10 20:20:39 -0500;Extend luigi.contrib.ecs module to support feeding additional kwargs to ecs run_task (#3083)
* Add support for arbitrary ecs run_task kwargs

* Use a clearer approach for combining overrides and commands, and add better tests

* Remove extra whitespace

Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/contrib/ecs.py
test/contrib/ecs_test.py
==================
c3b66f4a;Wataru Hirota;2022-01-03 10:34:07 +0900;Enable updating the default parser even after loading luigi (#3135)
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/configuration/core.py
test/config_env_test.py
==================
5a7e876c;Adrien Berchet;2022-01-03 00:54:01 +0100;Add PathParameter and OptionalPathParameter (#3126)

==

luigi/__init__.py
luigi/parameter.py
test/optional_parameter_test.py
test/parameter_test.py
==================
d844c832;Kento Nozawa;2021-12-28 11:22:14 +0900;Fix Azkaban link (#3133)
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

README.rst
==================
4896c883;oinegue;2021-12-28 03:07:41 +0100;OptionalParameter in ExternalPythonProgramTask (#3130)
Updated ExternalPythonProgramTask parameters type to OptionalParameter
==

luigi/contrib/external_program.py
==================
f712c49b;Arash Rouhani;2021-11-27 17:59:30 +0100;Remove @Tarrasch from CODEOWNERS (#3127)
This is so that I don't get one new notification per Pull Request.
==

.github/CODEOWNERS
==================
e28ad2b0;joooeey;2021-11-25 17:01:28 +0100;group tasks by task class in SVG visualizer (#3122)
* added task class grouping

* Add tests for task grouping in visualizer

* add random offset to rows so edges don't overlap

* remove console.log calls
==

luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/test/graph_test.js
==================
857deff3;Leif Denby;2021-11-07 16:06:47 +0000;Add rerun command snippet in "show error" modal (#3117)
* add re-run command snippet to show error modal

To facilitate quick re-run of failed tasks this commit adds a text
snippet to the "Show error" modal in the task visualiser. The scheduler
api call was modified to include the extra information needed to create
call command.

* use JSON.stringify and remove `=` in cmd string

* ensure all underscores are replaced with hyphens
==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
df5afd72;Adrien Berchet;2021-10-26 23:03:30 +0200;Improve optional parameters (#3079)
* Improve optional parameters to allow any parameter type to be optional

* Flake8

* Suggesions from review
==

luigi/__init__.py
luigi/parameter.py
test/optional_parameter_test.py
test/parameter_test.py
==================
211811cc;Adrien Berchet;2021-10-23 17:19:06 +0200;Improve message when an exception is raised during default value parsing (#3115)
* Improve message when exception is raised during default value parsing

* Fix tests
==

luigi/task.py
test/parameter_test.py
test/task_test.py
==================
ad5ddc98;James McMurray;2021-10-13 03:30:26 +0200;Patch BigQueryClient to retry on network error (#3088)
* Patch BQClient to retry on network error

At the moment sometimes long jobs can cause the BigQueryClient to
timeout since the connection is created at initialisation of the target.

This patch retries by re-creating the client object if it fails (up to a
retry limit), so that the client will not be timed out when calling
`complete()` on the BigQueryTarget after a long job.

* Switch BQ retry to use tenacity decorator

Note the use of the after lambda function to re-create the client if the
connection fails

* Fix indentation

Co-authored-by: James McMurray <jmcmurray@spotify.com>
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

luigi/contrib/bigquery.py
==================
0c5c53bf;Bang Xiao;2021-10-01 10:01:38 +0800;fix can not find  /tmp/xxx/yyy.tar.gz (#3111)
when spark use cluster deploy-mode,  the run_path will be created on the submitting host instead of the host where the driver is located
==

luigi/contrib/spark.py
==================
ef9dd775;Babis Kiosidis;2021-09-28 18:01:39 +0300;Merge pull request #3108 from masguit42/patch-1
Update LICENSE
==
==================
6132522a;Dillon Stadther;2021-09-28 07:29:14 -0400;Merge branch 'master' into patch-1

==
==================
0aa94d1b;Matt Maciejewski;2021-09-25 17:13:02 -0400;Update sqla.py (#3110)
Fixing a typo: SQLAlchemy was misspelt in one of the very first lines.
==

luigi/contrib/sqla.py
==================
c33725ac;Lars Albertsson;2021-09-21 00:52:49 +0200; Document cause of Unfulfilled dependencies error. (#3105)
* Document cause of `Unfulfilled dependencies` error.
==

doc/tasks.rst
==================
2a4207f1;Anton Kostin;2021-09-16 20:21:55 +0300;Update LICENSE

==

LICENSE
==================
ff7b5762;Dori Runyon;2021-09-16 06:07:34 -0700;Truncate traceback for failure email (#3086)
Co-authored-by: Dillon Stadther <dlstadther+github@gmail.com>
==

doc/configuration.rst
luigi/notifications.py
test/worker_test.py
==================
00aa83a3;Ian Calvert;2021-08-28 16:26:54 +0100;Add support for naming tasks in @requires (#3077)
* Add support for naming tasks in @requires

When using @requires the requires method is auto-generated. However, as
it just takes a list the tasks run method needs to identify which input
is which.

This adds support for named requirements using luigis existing support
for returning a dictionary from the requires function.

Usage:

    class Parent1(luigi.Task):
        ...
    class Parent2(luigi.Task):
        ...

    @requires(first_parent=Parent1, second_parent=Parent2)
    class Child(luigi.Task):
        def run(self):
           first_parent_target = self.input()["first_parent"]
           second_parent_target = self.input()["second_parent"]

* util_test flake8 fixes
==

luigi/util.py
test/util_test.py
==================
5845d81f;Avihay Bar;2021-08-26 03:15:27 +0300;Add Parquet support to Luigi's big query SourceFormat (#3099)

==

luigi/contrib/bigquery.py
==================
6b424261;Mārtiņš Kalvāns;2021-08-23 23:34:57 +0200;Add configure_job method to BigQuery job tasks (#3098)
This allows to configure job with any parameters, not only the ones exposed via properties.
==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
62c12d1f;James Cooke;2021-08-22 15:13:20 +0100;Make task.disable_window be default source of window int (#3081)
* Make task.disable_window be default source of window int

* Add test on disable_window_seconds
==

luigi/task.py
test/task_test.py
==================
cf4b6fbc;tnsetting;2021-07-07 12:18:00 +0200;Update pythonbuild.yml (#3091)

==

.github/workflows/pythonbuild.yml
==================
45f51bbe;sonjaer;2021-04-16 09:52:49 +0200;Update release process (#3074)

==

RELEASE-PROCESS.rst
==================
f2f631b3;sonjaer;2021-04-15 13:11:11 +0200;Version 3.0.3 (#3073)

==

luigi/__meta__.py
==================
4d0576c7;tnsetting;2021-04-13 15:12:47 +0200;Merge pull request #3071 from itdevsamurai/master
Added DevSamurai as Luigi user
==
==================
739f540e;Tam Nguyen;2021-04-13 18:09:49 +0900;Added DevSamurai as Luigi user

==

README.rst
==================
6adecd9a;Babis Kiosidis;2021-04-09 17:50:36 +0200;Merge pull request #3052 from mmihaltz/add-meltwater-to-users
Added Meltwater to list of Luigi users in README.rst
==
==================
add18c38;Babis Kiosidis;2021-04-09 17:42:24 +0200;Merge branch 'master' into add-meltwater-to-users

==
==================
9fd49f36;Babis Kiosidis;2021-04-09 17:39:19 +0200;Merge pull request #3069 from ckiosidis/codecov-ga
Codecov ga
==
==================
4a165534;Babis Kiosidis;2021-04-09 17:13:07 +0200;add codecov section

==

.coveragerc
.github/workflows/pythonbuild.yml
codecov.yml
==================
d928714c;Babis Kiosidis;2021-04-09 15:59:53 +0200;wait for build to finish before reporting

==

codecov.yml
==================
e3871238;Babis Kiosidis;2021-04-09 12:04:57 +0200;add codecov step

==

.github/workflows/pythonbuild.yml
codecov.yml
tox.ini
==================
f1585f97;Babis Kiosidis;2021-04-09 11:59:03 +0200;Merge pull request #3065 from ckiosidis/refactor-based-on-steps
Remove TravisCI and group similar steps 
==
==================
5d9239f9;Babis Kiosidis;2021-04-09 11:29:08 +0200;upgrade to latest lts ubuntu

==

.github/workflows/pythonbuild.yml
==================
6d09ef6e;Babis Kiosidis;2021-04-09 11:20:40 +0200;remove postgres -core combinations

==

.github/workflows/pythonbuild.yml
==================
8837f4c4;Babis Kiosidis;2021-04-09 11:00:00 +0200;add flake8 and docs

==

.github/workflows/pythonbuild.yml
==================
d1ca92fd;Babis Kiosidis;2021-04-09 10:44:09 +0200;remove travis ci steps

==

.travis.yml
==================
b83a18b7;Babis Kiosidis;2021-04-09 10:23:40 +0200;group similar steps

==

.github/workflows/pythonbuild.yml
==================
62922a0e;Babis Kiosidis;2021-04-09 10:23:06 +0200;Merge pull request #3064 from ckiosidis/add-azure-github-action
add azure build
==
==================
688374e3;Babis Kiosidis;2021-04-09 09:56:56 +0200;add azure build

==

.github/workflows/pythonbuild.yml
==================
41bae26f;Babis Kiosidis;2021-04-09 09:49:04 +0200;Merge pull request #3063 from ckiosidis/add-aws-github-action
add separate aws job
==
==================
071c3a92;Babis Kiosidis;2021-04-08 18:22:28 +0200;add separate aws job

==

.github/workflows/pythonbuild.yml
==================
f61b33dc;Babis Kiosidis;2021-04-08 18:13:42 +0200;Merge pull request #3062 from ckiosidis/add-postgres-build-github-actions
add postgres service and build matrix
==
==================
7d27ce0f;Babis Kiosidis;2021-04-08 17:46:23 +0200;rename db step

==

.github/workflows/pythonbuild.yml
==================
675d73b9;Babis Kiosidis;2021-04-08 17:11:24 +0200;add postgres service and build matrix

==

.github/workflows/pythonbuild.yml
==================
517c5ab4;Babis Kiosidis;2021-04-08 17:09:39 +0200;Merge pull request #3061 from ckiosidis/add-apache-builds-github-actions
build apache tests
==
==================
6cad5784;Babis Kiosidis;2021-04-08 16:25:53 +0200;build apache tests

==

.github/workflows/pythonbuild.yml
==================
2441aaf6;Babis Kiosidis;2021-04-08 16:33:46 +0200;Merge pull request #3060 from ckiosidis/add-unix-socket-builds
add py36-39 builds in github actions
==
==================
ac29749d;Babis Kiosidis;2021-04-08 10:04:02 +0200;add py36-39 builds in github actions

==

.github/workflows/pythonbuild.yml
test/helpers.py
tox.ini
==================
6ede6625;Nelson Arapé;2021-04-08 09:09:10 +0200;Merge pull request #3056 from spotify/add-gh-actions
Add GH actions for py{36,37,39.39}-core
==
==================
75b7ee33;hirosassa;2021-04-08 10:58:53 +0900;add python 3.8, 3.9 on setup.py (#3059)

==

setup.py
==================
5216fd3d;Nelson Arapé;2021-04-07 19:04:42 +0200;Skip ResourceTestTask.test_tasks_parallel on GH actions
This is a temporary fix so we are able to migrate all
modules and then come back to this problem

==

test/helpers.py
test/task_running_resources_test.py
==================
c8857bbc;Nelson Arapé;2021-04-01 10:53:37 +0200;Skip same tests as travis

==

test/contrib/batch_test.py
test/contrib/s3_test.py
test/contrib/sqla_test.py
test/helpers.py
test/server_test.py
test/target_test.py
test/worker_test.py
tox.ini
==================
a1c974dd;Nelson Arapé;2021-03-29 20:16:13 +0200;Add Setup DB step

==

.github/workflows/pythonbuild.yml
==================
d6d8e761;Nelson Arapé;2021-03-29 17:26:39 +0200;Add GH actions for py{36,37,38,39}-core

==

.github/workflows/pythonbuild.yml
==================
7fe53ed0;Nelson Arapé;2021-04-06 18:34:49 +0200;Merge pull request #3048 from hirosassa/add-python-version
add python 3.8, 3.9 support and migration to pytest
==
==================
f7053d92;hirosassa;2021-04-03 06:33:13 +0900;add python versions on README

==

README.rst
==================
9f1c44f7;Nelson Arapé;2021-03-31 15:10:54 +0200;Merge pull request #3057 from spotify/fix-not-bound-to-session
Keep orm session open during unit test
==
==================
6a18a50c;Nelson Arapé;2021-03-31 13:54:04 +0200;Keep orm session open during unit test

==

test/db_task_history_test.py
==================
013b75ff;hirosassa;2021-03-30 21:13:40 +0900;remove filter

==

tox.ini
==================
a542dee0;hirosassa;2021-03-30 21:09:57 +0900;add comment

==

test/customized_run_test.py
==================
d4de5fed;hirosassa;2021-03-30 20:36:24 +0900;use importorskip

==

test/contrib/hdfs/webhdfs_client_test.py
==================
26e33373;hirosassa;2021-03-28 10:59:18 +0900;trigger ci

==
==================
dba82cc2;Justin Sousa;2021-03-27 21:13:43 -0400;Update central_scheduler.rst (#3054)
* Update central_scheduler.rst

mention the --address flag for the central scheduler

* Update central_scheduler.rst

change the wording for the --address flag mentioned in the docs
==

doc/central_scheduler.rst
==================
93b47413;hirosassa;2021-02-25 07:14:17 +0900;migrate to pytest and add py38 and py39 environment

==

.travis.yml
test/conftest.py
test/contrib/_webhdfs_test.py
test/contrib/azureblob_test.py
test/contrib/batch_test.py
test/contrib/bigquery_gcloud_test.py
test/contrib/bigquery_test.py
test/contrib/cascading_test.py
test/contrib/dataproc_test.py
test/contrib/docker_runner_test.py
test/contrib/dropbox_test.py
test/contrib/ecs_test.py
test/contrib/esindex_test.py
test/contrib/external_program_test.py
test/contrib/gcs_test.py
test/contrib/hadoop_jar_test.py
test/contrib/hadoop_test.py
test/contrib/hdfs/webhdfs_client_test.py
test/contrib/hive_test.py
test/contrib/kubernetes_test.py
test/contrib/lsf_test.py
test/contrib/mongo_test.py
test/contrib/mysqldb_test.py
test/contrib/opener_test.py
test/contrib/pig_test.py
test/contrib/postgres_test.py
test/contrib/postgres_with_server_test.py
test/contrib/prometheus_metric_test.py
test/contrib/rdbms_test.py
test/contrib/redis_test.py
test/contrib/redshift_test.py
test/contrib/s3_test.py
test/contrib/salesforce_test.py
test/contrib/scalding_test.py
test/contrib/sge_test.py
test/contrib/spark_test.py
test/contrib/sqla_test.py
test/contrib/streaming_test.py
test/contrib/test_ssh.py
test/customized_run_test.py
test/decorator_test.py
test/event_callbacks_test.py
test/instance_test.py
test/runtests.py
test/scheduler_api_test.py
test/server_test.py
test/task_serialize_test.py
test/task_test.py
test/wrap_test.py
tox.ini
==================
a39c7f92;Honnix;2021-03-23 11:57:15 +0100;Add spotify data team as code owner (#3055)

==

.github/CODEOWNERS
==================
25d2218f;Márton Miháltz;2021-03-19 12:58:43 +0100;Added Meltwater to list of Luigi users in README.rst

==

README.rst
==================
7508cdf8;hirosassa;2021-02-24 02:07:44 +0900;replace naive retry with tenacity (#3026)
* replace naive retry with tenacity

* fix test

* speed up test

* import in one line

* simplify _get_retry_decorator

* avoid inner function

* avoid inner function and more simpler

* avoid using deprecated method on tenacity

* use str(e)

* add wait log

* change retry counting and fix test

* Update luigi/rpc.py

format: review comment by honnix (thanks!)

Co-authored-by: Honnix <honnix@users.noreply.github.com>

* fix for test

Co-authored-by: Honnix <honnix@users.noreply.github.com>
==

luigi/rpc.py
test/rpc_test.py
test/worker_test.py
==================
31d98156;Honnix;2021-02-17 14:49:55 +0100;Update maintainer status (#3045)

==

README.rst
==================
005d2883;Vincent Barbaresi;2021-02-10 21:03:45 +0100;fix azureblob tests: use json instead of numpy (#3032)
Numpy is not installed in the current setup

It fixes these errors:

```
  File "/home/travis/build/spotify/luigi/test/contrib/azureblob_test.py", line 138, in run

    import numpy

ModuleNotFoundError: No module named 'numpy'
```
https://travis-ci.org/github/spotify/luigi/jobs/754449469

The test silently failed, asserts weren't covered
Added an assert checking the output of FinalTask
==

test/contrib/azureblob_test.py
==================
92096a9e;hirosassa;2021-02-11 04:51:58 +0900;remove landscape.io badge (#3040)

==

README.rst
==================
f0a63284;Honnix;2021-02-02 11:15:28 +0100;Login to docker hub (#3030)
* Login to docker hub

Anonymous access has been rate limited and that is impacting Luigi CI. This PR follows https://blog.travis-ci.com/docker-rate-limits to get it fixed.

==

scripts/ci/install_start_azurite.sh
tox.ini
==================
7b7ff901;Simone Aiello;2021-01-14 13:33:44 +0100;add AssistDigital as company (#3031)

==

README.rst
==================
3d9fa416;jarno-r;2021-01-14 01:12:16 +0200;Flush stream_for_searching_tracking_url (#3000)
Co-authored-by: Jarno Rajala <jarno.rajala@schibsted.com>
==

luigi/contrib/external_program.py
==================
de411653;hirosassa;2021-01-13 23:05:51 +0900;Adding retry on _obj_exists (#3022)
* add retry on _obj_exists using tenacity
==

luigi/contrib/gcs.py
setup.py
test/contrib/gcs_test.py
==================
42d9b738;Tashrif Billah;2020-12-29 07:23:53 -0500;make all indents 4 chars (#3024)

==

luigi/tools/deps_tree.py
==================
2c87dad8;Honnix;2020-12-10 20:36:46 +0100;Merge pull request #2977 from tashrifbillah/fix-history-uri
Fix history uri
==
==================
f0ac13e6;Tashrif Billah;2020-11-27 10:16:49 -0500;use { } instead of : for denoting a field in the URL

==

doc/central_scheduler.rst
==================
edd868bd;Ludwig Auer;2020-11-18 23:03:13 +0100;Add Tracktics to company list (#3017)

==

README.rst
==================
cf2abbdb;David Przybilla;2020-10-12 08:58:26 +0900;kubernetes contrib: labels are applied to pod (#3007)

==

luigi/contrib/kubernetes.py
test/contrib/kubernetes_test.py
==================
d4eb8a68;Honnix;2020-09-24 23:24:34 +0200;Merge pull request #2785 from timkpaine/reverse-proxy
don't use absolute path in redirect for visualizer
==
==================
92fe69e0;Hongxin Liang;2020-09-23 13:52:39 +0200;Version 3.0.2

==

luigi/__meta__.py
==================
3556ec27;Jack Dingilian;2020-09-18 14:35:48 -0400;Use updated uri for gcs batch reqs (#2998)
* Use correct batch uri for GCS client requests

* bump google-api-python-client version lower bound

Co-authored-by: Jack Dingilian <jackd@spotify.com>
==

luigi/contrib/gcs.py
tox.ini
==================
7d16f291;Steve Pletcher;2020-08-31 21:54:35 -0400;Garbage collect task result queue when worker context exits (#2973)
* Close our link to the task result queue when a worker exits

* Don't exit worker context until worker has run in test
==

luigi/worker.py
test/worker_external_task_test.py
==================
5156828d;Honnix;2020-08-10 16:35:37 +0200;Drop Python 3.3 and 3.4 support (#2978)
* Drop Python 3.3 and 3.4 support

Also allows more recent tornado version (>=6,<7).

* Stop testing 33 and 34 as part of CI

Close #2949 
==

setup.py
tox.ini
==================
5964047d;Tashrif Billah;2020-08-06 15:04:24 -0400;enclose keywords of uri in backticks

==

doc/central_scheduler.rst
==================
0240584a;Tashrif Billah;2020-08-06 15:01:29 -0400;provide a json blob in by_params history uri

==

doc/central_scheduler.rst
==================
cd54431d;Tashrif Billah;2020-08-06 15:00:09 -0400;remove colon from history uris

==

doc/central_scheduler.rst
==================
4dfb1421;Nelson Arapé;2020-08-06 12:07:55 +0200;Merge pull request #2970 from gabrielgonzaga/master
Fixing problem with ListParameter and Dynamic Dependencies
==
==================
56bdc3a5;Babis Kiosidis;2020-07-23 11:52:51 +0300;Merge pull request #2974 from ckiosidis/luigi-3.0.1
Version 3.0.1
==
==================
100c4212;Babis Kiosidis;2020-07-23 10:56:40 +0300;Version 3.0.1

==

luigi/__meta__.py
==================
138ab136;Gabriel Magalhaes;2020-07-10 20:18:58 -0300;Adding test

==

test/parameter_test.py
==================
fda97753;Gabriel Magalhaes;2020-07-09 12:59:56 -0300;Fixing problem with ListParameter

==

luigi/parameter.py
==================
15608e88;adaitche;2020-07-02 14:58:06 +0200;Make worker_timeout=0 override the default timeout (#2968)
Sometimes it is useful to exclude certain tasks from the default worker
timeout (set in the Luigi config). This was possible before commit
af6cf07 by setting `worker_timeout = 0` for a task. Since this commit
there is no distinction between `0` and `None` anymore and this approach
doesn't work anymore. The present commit introduces this distinction
again.
==

luigi/worker.py
test/worker_task_test.py
==================
95028ca4;Stas Glubokiy;2020-06-22 12:33:19 +0300;Add `-n namespace` to kubectl hints (#2964)

==

luigi/contrib/kubernetes.py
==================
badd3c04;Steve Pletcher;2020-06-15 10:04:03 -0400;Add documentation for check_complete_on_run (#2961)

==

doc/configuration.rst
==================
fa60af69;Nelson Arapé;2020-06-11 14:59:09 +0200;Merge pull request #2951 from Obus/fix-task-level-disable-window
Fix task level disable_window
==
==================
13aa64bf;obus;2020-06-09 19:26:30 +0300;Merge branch 'master' into fix-task-level-disable-window
# Conflicts:
#	luigi/scheduler.py

==
==================
3bccee31;Tomas Aschan;2020-06-08 21:05:00 +0200;Return bq job id from biquery.run_job() (#2957)
* Expose the BQ job ID when running a job

This enables client code to do further things with the job id, e.g. look
up logs, status or other information.

* Expose job_id also on error

* Fix formatting

* Improve docstrings

* Use Python3 syntax for super constructor

* Add bq client tests
==

luigi/contrib/bigquery.py
test/contrib/bigquery_gcloud_test.py
==================
bfca3bcc;Marcel R;2020-06-08 14:22:07 +0200;Fix package descriptions for pypi. (#2958)

==

setup.py
==================
284730b6;Honnix;2020-06-06 15:26:33 +0200;delete temporary travis enabled branch (#2956)
This branch was added during Python2 deprecation work and is no longer needed.
==

.travis.yml
==================
c35d3f73;Alexander Senov;2020-06-05 02:12:24 +0300;updated documented names of some of the scheduler parameters in accordance with the code: `disable_persist_seconds` => `disable_persist` & `disable_window_seconds` => `disable_window` (#2950)

==

doc/configuration.rst
==================
ba5ff73a;Tim Paine;2020-06-04 15:50:16 -0400;add test

==

test/server_test.py
==================
44aed8d8;Tim Paine;2020-06-04 15:33:39 -0400;Merge branch 'master' into reverse-proxy

==
==================
ba201928;Honnix;2020-06-02 10:24:29 +0200;Merge pull request #2953 from spotify/luigi-3.0.0
prepare 3.0.0 release
==
==================
ea0b8b7d;Honnix;2020-06-01 22:20:24 +0200;prepare 3.0.0 release

==

luigi/__meta__.py
==================
91ff2f02;Honnix;2020-06-01 22:15:13 +0200;Merge pull request #2876 from spotify/py2-deprecation
Py2 deprecation
==
==================
3b5562de;Honnix;2020-06-01 14:52:06 +0200;use metaclass directly (#2952)

==

luigi/contrib/presto.py
==================
3fabb438;Hongxin Liang;2020-02-10 17:23:43 +0100;Version 3.0.0b2

==

luigi/__meta__.py
==================
26c54f89;Honnix;2019-12-28 15:37:46 +0100;tox cleanup (#2877)

==

tox.ini
==================
2c19face;Honnix;2019-12-27 14:58:39 +0100;prepare 3.0.0. beta1 release

==

luigi/__meta__.py
==================
ee3618ce;drowoseque;2019-12-27 17:47:13 +0400;luigi.six removed (#2871)

==

.coveragerc
doc/api/luigi.six.rst
luigi/six.py
test/contrib/hadoop_test.py
test/contrib/salesforce_test.py
tox.ini
==================
fdd39c21;m.slavoshevski@cian.ru;2019-12-14 21:55:16 +0300;blank line to force ci

==

CONTRIBUTING.rst
==================
481202f6;m.slavoshevski@cian.ru;2019-12-14 20:36:14 +0300;class Xyz(object) -> class Xyz

==

doc/running_luigi.rst
luigi/batch_notifier.py
luigi/cmdline_parser.py
luigi/contrib/azureblob.py
luigi/contrib/batch.py
luigi/contrib/beam_dataflow.py
luigi/contrib/bigquery.py
luigi/contrib/dropbox.py
luigi/contrib/external_program.py
luigi/contrib/hadoop.py
luigi/contrib/hive.py
luigi/contrib/mrrunner.py
luigi/contrib/opener.py
luigi/contrib/pai.py
luigi/contrib/pig.py
luigi/contrib/postgres.py
luigi/contrib/rdbms.py
luigi/contrib/s3.py
luigi/contrib/salesforce.py
luigi/contrib/ssh.py
luigi/contrib/target.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/event.py
luigi/execution_summary.py
luigi/format.py
luigi/interface.py
luigi/parameter.py
luigi/rpc.py
luigi/scheduler.py
luigi/setup_logging.py
luigi/six.py
luigi/task.py
luigi/task_history.py
luigi/tools/luigi_grep.py
luigi/util.py
luigi/worker.py
test/contrib/batch_test.py
test/contrib/hadoop_test.py
test/contrib/hdfs_test.py
test/contrib/hive_test.py
test/contrib/pig_test.py
test/customized_run_test.py
test/event_callbacks_test.py
test/helpers.py
test/notifications_test.py
test/retcodes_test.py
test/server_test.py
test/target_test.py
test/task_test.py
test/worker_task_process_test.py
test/worker_test.py
==================
828bf396;drowoseque;2019-12-14 23:16:16 +0300;[luigi.six.getargspec] removed (#2856)

==

luigi/scheduler.py
luigi/six.py
==================
04393b85;Honnix;2019-12-06 14:28:22 +0100;remove unused six (#2859)

==

test/contrib/external_program_test.py
test/contrib/spark_test.py
==================
966d9ee3;drowoseque;2019-12-06 13:07:54 +0300;six.BytesIO removed (#2854)

==

luigi/contrib/gcs.py
luigi/six.py
test/contrib/external_program_test.py
test/contrib/spark_test.py
==================
13eb4444;drowoseque;2019-12-06 13:07:26 +0300;no six create_bound_method (#2855)

==

luigi/contrib/target.py
luigi/six.py
==================
0bb926fc;drowoseque;2019-12-06 13:06:30 +0300;no six text_type (#2857)

==

luigi/contrib/postgres.py
luigi/format.py
luigi/six.py
test/contrib/external_program_test.py
test/contrib/spark_test.py
==================
cbf92033;drowoseque;2019-12-03 19:19:33 +0300;No `luigi.six.{u,b}` (#2848)
* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no six.{u,b}

* joined

* Update .travis.yml

* "except ImportError" removed (#2845)

* py2/py3 import error eliminated

*  E402 module level import not at top of file

* E303 too many blank lines (3)

* snakebite removed (#2833)

* snamebite removed

* no minicluster

* no minicluster

* flake8

* branches - master

* no snakebite in tox.ini

* [luigi.six.itervalues] usage removed (#2835)

* no itervalues

* no exception

* [luigi.six.assertCountEqual] removed (#2841)

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* six.assertCountEqual -> self.assertCountEqual

* no ununsed import

* E128 continuation line under-indented for visual indent

* [luigi.six.next] removed (#2842)

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no six.next

* yield from instead of loop

* too-many-blank-lines

* `luigi.six.add_metaclass` removed (#2843)

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* six.add_metaclass -> metaclass=

* six.add_metaclass -> metaclass=

* no `from __future__ import ...` (#2846)

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no from __future__ import

* [luigi.six.string_types] and [luigi.six.binary_type]  removed (#2838)

* no string_types

* no-binary_type

* Update .travis.yml

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* original

* no ununsed import

* Update .travis.yml

* Fix params hashing (#2540)

* move params freezing to separated module

* freeze dict for toml parser

* FIX FrozenOrderedDict name

* Freeze only params of config, not all config

* +docstring

* [luigi.mock.MockFile] removed (#2839)

* no-mock-file

* MockFile removed

* unused import

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* new string_types

* no string_types

* no-binary_type

* original

* no ununsed import

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* new string_types

* snakebite

* no-unused-import

* utf-8 in auth

* no unused imports

* py27 -> py37 in CONTRIBUTING.rst

* E231 missing whitespace after ','

* [luigi.six.moves] removed (#2844)

* Update .travis.yml

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no-six-moves

* del attr removed

* del attr removed

* exec_ removed

* py 2.7 mentions removed from README and setup.py (#2852)

* 2.7 mentions removed from README and setup.py

* py27 -> py37 in CONTRIBUTING.rst

* abstractproperty -> property + abstractmethod (#2847)

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* abstractproperty -> property + abstractmethod

* Update beam_dataflow.py

* Update beam_dataflow.py

* no-if-six.py* (#2840)

* no-if-six.py*

* no unused imports

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* postgres toxenv for py3

* postgres toxenv for py3

* postgres toxenv for py3

* \n

* no-unused-import

* test_multiple_workers back

* F401 'luigi.six' imported but unused

* test_url_without_basic_auth fix

* [luigi.six.iteritems] usage removed (#2834)

* iteritems usage removed

* no unused imports

* bmo

* bmo

* iteritems removed

* no doc for iteritems

* most_common from collections.Counter

* returning tuple

* postgres toxenv for py3

* original

* no-unused-import

* F401 'luigi.six' imported but unused

* blank line

*  F401 'luigi.six' imported but unused

* six.b('...') -> b'...'

* blank line

==

luigi/batch_notifier.py
luigi/rpc.py
luigi/six.py
test/batch_notifier_test.py
test/contrib/hive_test.py
test/notifications_test.py
test/rpc_test.py
==================
732c1373;drowoseque;2019-12-03 15:18:18 +0300;[luigi.six.iteritems] usage removed (#2834)
* iteritems usage removed

* no unused imports

* bmo

* bmo

* iteritems removed

* no doc for iteritems

* most_common from collections.Counter

* returning tuple

* postgres toxenv for py3

* original

* no-unused-import

* F401 'luigi.six' imported but unused

* blank line

==

examples/ssh_remote_execution.py
examples/top_artists.py
examples/wordcount.py
luigi/batch_notifier.py
luigi/contrib/hadoop.py
luigi/contrib/hive.py
luigi/contrib/pig.py
luigi/contrib/s3.py
luigi/contrib/salesforce.py
luigi/contrib/scalding.py
luigi/db_task_history.py
luigi/parameter.py
luigi/scheduler.py
luigi/six.py
luigi/task.py
luigi/task_register.py
luigi/tools/luigi_grep.py
luigi/tools/range.py
luigi/worker.py
test/contrib/hive_test.py
test/db_task_history_test.py
test/helpers.py
==================
f85df4ef;drowoseque;2019-12-03 13:52:50 +0300;no-if-six.py* (#2840)
* no-if-six.py*

* no unused imports

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* postgres toxenv for py3

* postgres toxenv for py3

* postgres toxenv for py3

* \n

* no-unused-import

* test_multiple_workers back

==

luigi/contrib/bigquery_avro.py
luigi/contrib/external_daily_snapshot.py
luigi/contrib/hadoop.py
luigi/contrib/hive.py
luigi/date_interval.py
luigi/rpc.py
luigi/task.py
luigi/util.py
test/contrib/bigquery_avro_test.py
test/contrib/opener_test.py
test/contrib/sqla_test.py
test/date_parameter_test.py
test/parameter_test.py
test/task_test.py
test/worker_test.py
==================
3e925781;drowoseque;2019-12-03 13:51:19 +0300;abstractproperty -> property + abstractmethod (#2847)
* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* abstractproperty -> property + abstractmethod

* Update beam_dataflow.py

* Update beam_dataflow.py

==

luigi/contrib/beam_dataflow.py
luigi/contrib/esindex.py
luigi/contrib/pai.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/contrib/salesforce.py
luigi/contrib/sqla.py
luigi/parameter.py
luigi/target.py
test/subtask_test.py
==================
6e8ba14d;drowoseque;2019-12-03 13:50:51 +0300;py 2.7 mentions removed from README and setup.py (#2852)
* 2.7 mentions removed from README and setup.py

* py27 -> py37 in CONTRIBUTING.rst

==

CONTRIBUTING.rst
README.rst
setup.py
==================
50b8e6f4;drowoseque;2019-12-03 13:50:11 +0300;[luigi.six.moves] removed (#2844)
* Update .travis.yml

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no-six-moves

* del attr removed

* del attr removed

* exec_ removed

==

luigi/contrib/gcs.py
luigi/contrib/hdfs/target.py
luigi/contrib/opener.py
luigi/rpc.py
luigi/scheduler.py
luigi/six.py
luigi/tools/luigi_grep.py
test/server_test.py
==================
fe283c3c;drowoseque;2019-12-02 16:33:43 +0300;[luigi.six.string_types] and [luigi.six.binary_type]  removed (#2838)
* no string_types

* no-binary_type

* Update .travis.yml

* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* original

* no ununsed import

* Update .travis.yml

* Fix params hashing (#2540)

* move params freezing to separated module

* freeze dict for toml parser

* FIX FrozenOrderedDict name

* Freeze only params of config, not all config

* +docstring

* [luigi.mock.MockFile] removed (#2839)

* no-mock-file

* MockFile removed

* unused import

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* new string_types

* no string_types

* no-binary_type

* original

* no ununsed import

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* new string_types

* snakebite

* no-unused-import

==

luigi/contrib/docker_runner.py
luigi/contrib/esindex.py
luigi/contrib/gcs.py
luigi/contrib/postgres.py
luigi/contrib/spark.py
luigi/mock.py
luigi/parameter.py
luigi/six.py
luigi/task.py
luigi/tools/range.py
test/contrib/hdfs_test.py
==================
64db340b;drowoseque;2019-12-02 13:12:40 +0300;no `from __future__ import ...` (#2846)
* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no from __future__ import

==

examples/execution_summary_example.py
examples/foo.py
examples/foo_complex.py
examples/ftp_experiment_outputs.py
examples/ssh_remote_execution.py
luigi/contrib/dropbox.py
luigi/contrib/hadoop.py
luigi/contrib/lsf_runner.py
luigi/contrib/mrrunner.py
luigi/contrib/s3.py
luigi/contrib/sparkey.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/lock.py
luigi/process.py
luigi/six.py
luigi/tools/deps.py
test/cmdline_test.py
test/contrib/s3_test.py
test/contrib/test_ssh.py
test/create_packages_archive_root/package/submodule_with_absolute_import.py
test/decorator_test.py
test/local_target_test.py
test/mock_test.py
test/recursion_test.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/target_test.py
test/task_serialize_test.py
test/visualiser/visualiser_test.py
test/worker_keep_alive_test.py
test/worker_scheduler_com_test.py
test/worker_test.py
test/wrap_test.py
==================
2b46464a;drowoseque;2019-12-02 12:37:44 +0300;`luigi.six.add_metaclass` removed (#2843)
* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* six.add_metaclass -> metaclass=

* six.add_metaclass -> metaclass=

==

luigi/contrib/beam_dataflow.py
luigi/contrib/hdfs/abstract_client.py
luigi/contrib/hive.py
luigi/metrics.py
luigi/six.py
luigi/target.py
luigi/task.py
luigi/task_history.py
==================
a2917170;drowoseque;2019-12-02 12:37:14 +0300;[luigi.six.next] removed (#2842)
* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* no six.next

* yield from instead of loop

* too-many-blank-lines

==

luigi/contrib/webhdfs.py
luigi/six.py
luigi/worker.py
test/db_task_history_test.py
test/worker_test.py
==================
f45128d8;drowoseque;2019-12-02 12:36:49 +0300;[luigi.six.assertCountEqual] removed (#2841)
* Update .travis.yml

* no py27 in travis (#2836)

* no py27 in travis

* py37

* flake8 and docs back

* py36 py37 postgres

* py36-apache

* MixedUnicodeBytes removed

* unused imports removed

* no-if-py3

* space

* space

* MixedUnicodeBytesFormat returned

* six.assertCountEqual -> self.assertCountEqual

* no ununsed import

* E128 continuation line under-indented for visual indent

==

.travis.yml
luigi/configuration/cfg_parser.py
luigi/format.py
luigi/lock.py
luigi/mock.py
luigi/six.py
test/notifications_test.py
test/scheduler_visualisation_test.py
tox.ini
==================
0b32ae8f;drowoseque;2019-12-02 12:34:54 +0300;[luigi.six.itervalues] usage removed (#2835)
* no itervalues

* no exception

==

luigi/batch_notifier.py
luigi/scheduler.py
luigi/six.py
==================
2254d10f;drowoseque;2019-12-02 12:33:20 +0300;snakebite removed (#2833)
* snamebite removed

* no minicluster

* no minicluster

* flake8

* branches - master

* no snakebite in tox.ini

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hdfs/config.py
luigi/contrib/hdfs/error.py
luigi/contrib/hdfs/hadoopcli_clients.py
luigi/contrib/hdfs/snakebite_client.py
luigi/contrib/hdfs/webhdfs_client.py
test/contrib/hadoop_test.py
test/contrib/hdfs/webhdfs_client_test.py
test/contrib/hdfs_test.py
test/minicluster.py
test/snakebite_test.py
test/webhdfs_minicluster.py
tox.ini
==================
4d902294;drowoseque;2019-12-02 11:56:22 +0300;"except ImportError" removed (#2845)
* py2/py3 import error eliminated

*  E402 module level import not at top of file

* E303 too many blank lines (3)

==

luigi/contrib/gcs.py
luigi/contrib/hadoop.py
luigi/contrib/hdfs/config.py
luigi/contrib/mrrunner.py
luigi/contrib/pai.py
luigi/contrib/pyspark_runner.py
luigi/contrib/s3.py
luigi/contrib/salesforce.py
luigi/contrib/sge.py
luigi/contrib/sge_runner.py
luigi/contrib/spark.py
luigi/parameter.py
luigi/scheduler.py
luigi/setup_logging.py
luigi/task.py
luigi/worker.py
test/_test_ftp.py
==================
b6079b2f;Honnix;2019-11-25 19:45:59 +0100;Update .travis.yml

==

.travis.yml
==================
723e5ba6;obus;2020-05-31 16:17:58 +0300;add a comment on worker.run

==

test/worker_test.py
==================
50f97a36;obus;2020-05-31 16:14:28 +0300;remove leftover

==

luigi/scheduler.py
==================
89f197d3;obus;2020-05-31 12:42:31 +0300;remove scheduler.Failures class, moving its logic to the scheduler.Task, added a test on task-level disable_window

==

luigi/scheduler.py
test/scheduler_api_test.py
test/worker_test.py
==================
65bb5dd2;obus;2020-05-30 19:54:36 +0300;rename Task's disable_window_seconds => disable_window

==

luigi/task.py
luigi/worker.py
==================
7999bf17;Karthikeyan Singaravelan;2020-05-30 22:01:23 +0530;Use is_alive in favour of isAlive for Python 3.9 compatibility. (#2940)

==

test/worker_test.py
==================
8ef2573d;Marcel R;2020-05-19 22:40:02 +0200;Show task progress in visualizer workers tab. (#2932)
* Show task progress in visualizer worker tab.

* Fix typo.
==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
548337c0;Babis Kiosidis;2020-05-19 12:07:24 +0200;Fix build (#2948)
* use proper formatting argument

* use descriptive variable names

* set azure-storage upper bound
==

luigi/contrib/azureblob.py
luigi/contrib/kubernetes.py
luigi/contrib/scalding.py
tox.ini
==================
c61400f9;James Davidheiser;2020-05-19 02:58:04 -0700;Remove Asana from Luigi users (#2945)
Asana is no longer using Luigi, so for the sake of accuracy, it was suggested that we should be removed from the list of users.  The blog post that describes our use of Luigi did not include any implementation details or tips that would be useful to the broader community of Luigi users.
==

README.rst
==================
54a34736;sonjaer;2020-04-29 15:20:21 +0200;Version 2.8.13

==

luigi/__meta__.py
==================
b8cc750e;charlesoblack;2020-04-22 22:18:26 -0400;Fix docs explaining write modes for Luigi Targets. Closes #2783 (#2931)

==

doc/tasks.rst
luigi/target.py
==================
da392e6c;Vincent Barbaresi;2020-04-12 21:50:42 +0200;remove StreamingBodyAdaptor that didn't allow choosing the chunk size (#2929)
This StreamingBodyAdaptor caused performance issues:
Calling `__iter__()` on a StreamingBodyAdaptor object defaulted to chunks of 1 byte, which was really slowing
down reads. I wasn't able to pass the `size` parameter to change the chunk size

botocore StreamingBody implementation performs better:
https://github.com/boto/botocore/blob/master/botocore/response.py#L90

It defaults to chunks of 1024 bytes, and can be adjusted.
It also offers iter_lines() and iter_chunks() methods
==

luigi/contrib/s3.py
==================
3c2712b1;drowoseque;2020-04-12 22:47:22 +0300;Presto support in Luigi (#2885)
Co-authored-by: m.slavoshevski@cian.ru <m.slavoshevski@cian.ru>
==

luigi/contrib/presto.py
test/contrib/presto_test.py
tox.ini
==================
c6551a53;Maor Kleinberger;2020-04-08 00:13:37 +0300;removed wrong type of Target.__init__ path arg from doc

==

luigi/target.py
==================
df39edbd;jbw;2020-04-02 17:19:31 +0100;update documentation to prefer pykube-ng

==

examples/kubernetes.py
luigi/contrib/kubernetes.py
test/contrib/kubernetes_test.py
==================
fbb7e4a0;Alexander Artemenko;2020-03-04 11:19:42 +0300;All configuration parameters in docs now use underscore in their names for consistency. (#2890)
Previosly it was hard to search some parameters on page because in some places a minus sign
was used and in others is underscore.

This commit fixes this issue.

Also, it fixes few places where one backquote was used to denote a parameter name or value.
RestructuredText format uses two backquotes to denote an inline code block:

https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#inline-markup
==

doc/configuration.rst
==================
9287118b;hirolau;2020-02-20 11:51:51 +0100;Allowed wider popovers in grapth. (#2903)
Changing in luigi.css and not bootstrap to allow for bootstrap upgrades.

Testes and looks fine in Chrome, Firefox and Edge.
==

luigi/static/visualiser/css/luigi.css
==================
13368ecf;Hongxin Liang;2020-02-19 10:49:54 +0100;version 2.8.12

==

luigi/__meta__.py
==================
57324166;Karthikeyan Singaravelan;2020-02-13 14:13:45 +0530;Import ABC from collections.abc instead of collections for Python 3.9 compatibility. (#2895)

==

luigi/freezing.py
luigi/tools/deps.py
==================
2d5fbc84;drowoseque;2020-01-29 00:37:26 +0400;[luigi.contrib.pyspark_runner] SparkSession support in PySparkTask (#2862)
* spark-session entrypoint support

* W292 no newline at end of file

* contact_point -> entry_point

* _use_spark_session as separate function

* SparkEntryPoint -> _SparkEntryPoint

* * _SparkEntryPoint abstract
* kwarg reference in _entry_point_class

==

luigi/contrib/pyspark_runner.py
test/contrib/spark_test.py
==================
a0bedf66;drowoseque;2020-01-29 00:32:05 +0400;[luigi.contrib.hive] HiveTableTarget inherits HivePartitionTarget (#2872)
* HiveTableTarget inherited from HivePartitionTarget

* docstrings improved

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
57c32de2;Ezekiel Victor;2020-01-16 11:07:46 -0800;EnumListParameter (#2801)
See docs for usage.
==

luigi/parameter.py
test/parameter_test.py
==================
8b3205c0;Hongxin Liang;2020-01-02 15:52:46 +0100;version 2.8.11

==

luigi/__meta__.py
==================
ad70ab87;Honnix;2020-01-02 13:46:51 +0100;autoload_range doc fix (#2878)
To reflect https://github.com/spotify/luigi/pull/2823
==

doc/configuration.rst
==================
b9a1bbd1;Tim Gates;2019-12-15 07:20:23 +1100;Fix simple typo: throug -> through (#2869)
Closes #2868
==

doc/configuration.rst
==================
12e9afb1;6syun9;2019-12-11 14:51:27 +0900;add m3

==

README.rst
==================
63bb8671;drowoseque;2019-12-03 16:55:06 +0300;[luigi.contrib.external_program.ExternalProgramTask] logs_output_pattern_to_url provided (#2822)
* logs_output_pattern_to_url provided

* no odd line

* build_tracking_url

* 2.7 mentions removed from README and setup.py

==

luigi/contrib/external_program.py
test/contrib/external_program_test.py
==================
3f2da3bc;Jens Gåsemyr Magnus;2019-12-02 11:30:11 +0100;Check for `autoload_range` istead of `autoload-range` (#2823)
Using the cfg parser would either cause a deprecation warning without specifying

```
[core]
autoload-range=false
```

or shout at you for using a dash instead of an underscore.

This fix let's you specify autoload_range.
==

luigi/__init__.py
luigi/configuration/cfg_parser.py
==================
eb97c409;Brian Wignall;2019-12-02 03:55:13 -0500;Fix some spelling typos (#2850)

==

doc/running_luigi.rst
luigi/cmdline_parser.py
luigi/contrib/esindex.py
luigi/contrib/hadoop.py
luigi/contrib/pai.py
luigi/contrib/redshift.py
luigi/contrib/s3.py
luigi/contrib/scalding.py
luigi/contrib/simulate.py
luigi/scheduler.py
luigi/tools/deps.py
test/worker_test.py
==================
ee6264bc;drowoseque;2019-11-30 22:31:34 +0300;cian.ru in users list (#2851)

==

README.rst
==================
57a0fc65;drowoseque;2019-11-28 11:19:55 +0300;[luigi.mock.MockFile] removed (#2839)
* no-mock-file

* MockFile removed

* unused import

==

luigi/mock.py
test/mock_test.py
==================
2f41f267;Gram;2019-11-27 00:03:45 +0100;Fix params hashing (#2540)
* move params freezing to separated module

* freeze dict for toml parser

* FIX FrozenOrderedDict name

* Freeze only params of config, not all config

* +docstring

==

luigi/configuration/toml_parser.py
luigi/freezing.py
luigi/parameter.py
test/testconfig/luigi.toml
==================
ff9342db;Marcel R;2019-11-26 23:53:57 +1030;Make URLLibFetcher aware of basic auth info in scheduler URL. (#2791)
* Make URLLibFetcher aware of basic auth.

* Fix setting request body in URLLibFetcher.

* Fix URLLibFetcherTest.test_body_encoding test.

==

luigi/rpc.py
test/rpc_test.py
==================
229a659f;Marcel R;2019-11-26 23:48:59 +1030;Add internal version info (#2760)
* Add __meta__ module to store package data.

* Add --version to luigid, add test.

* Fix test.

* Change version description in RELEASE-PROCESS.rst.

* Remove version parameter from luigid.

* use latest version

==

RELEASE-PROCESS.rst
luigi/__init__.py
luigi/__meta__.py
setup.py
==================
d81efa2a;Peter M. Landwehr;2019-11-26 05:00:27 -0800;Allow python-daemon >= 2.2.0 if not on windows (#2796)
* Allow python-daemon >= 2.2.0 if not on windows

It looks like the `python-daemon<2.2.0` dependency was created to specifically address an issue with windows. (See [#2525](https://github.com/spotify/luigi/issues/2525)) This patch loosens the requirement so that only windows requires `python-daemon<2.2.0` and all other platforms can use any `python-daemon`

* fix bad loop, bad var

* fix bad listcomp

==

setup.py
==================
37a80778;drowoseque;2019-11-25 21:29:28 +0300;[luigi.file] removed (#2832)
* luigi.file removed

* master branch in travis

==

luigi/contrib/ftp.py
luigi/contrib/opener.py
luigi/file.py
luigi/target.py
test/contrib/opener_test.py
==================
cbf50a20;drowoseque;2019-11-23 14:26:14 +0300;[luigi.contrib.spark] pyspark python options added (#2818)
* some env settings added

* no get_environment

* tests created

* space

* no typing comments

* default-hadoop-username-is-none

* pyspark.python as properties in spark.conf

* test fixed

* coverage increased

* r349612160

==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
e3ba1ddb;Hongxin Liang;2019-11-22 15:28:59 +0100;Version 2.8.10

==

setup.py
==================
dc2e57f3;drowoseque;2019-11-22 02:02:22 +0300;add tracking_url_pattern as a property (#2820)

==

luigi/contrib/spark.py
==================
c95fc00d;drowoseque;2019-11-22 02:01:18 +0300;[luigi.contrib.hive] WarehouseHiveClient (#2826)
* WarehouseHiveClient added

* tests for ExternalHiveTask added

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
69cb1c3a;Ruslan Altynnikov;2019-11-21 11:32:22 -0500;Add Python version-agnostic get_writer_schema. (#2827)
* Add Python version-agnostic get_writer_schema.

* Add a unit-test.

* Right copyright copy

* Add tox-related harness.

* Address PR comments.

* Change how avro dependency is defined.

* Fix flake8 warnings.

==

luigi/contrib/bigquery_avro.py
test/contrib/bigquery_avro_test.py
tox.ini
==================
262f2bdd;plizmol;2019-11-20 15:49:10 +0200;Add pod_creation_wait_interal (#2813)
* Add pod_creation_wait_interal

* Resolve code review comments

* Fix string formatting

==

luigi/contrib/kubernetes.py
==================
eb2acbc3;Alberto Bonsanto;2019-11-01 15:47:03 -0600;Added optional argument 'aws_session_token' to S3Client (#2798)
* Added optional argument 'aws_session_token' to S3Client

* Added tests for S3Client with provided session

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
c08ba03a;Honnix;2019-10-31 08:56:13 +0100;Merge pull request #2817 from pythonjokeun/master
Update README.rst
==
==================
667f8109;Ichsan Hariadi;2019-10-29 14:50:54 +0700;Update README.rst

==

README.rst
==================
db8ff63f;Valleo4;2019-10-24 23:26:55 +0200;Add HEAD endpoint to scheduler server for status/health checks (#2789)
* Add HEAD endpoint to scheduler server for status/health checks

* Add unit test

* Add comment doc

==

luigi/server.py
test/server_test.py
==================
f7e89636;Tim Paine;2019-10-01 14:47:17 -0400;add comment

==

luigi/server.py
==================
865cc4e9;Honnix;2019-09-20 14:39:30 +0200;Merge pull request #2779 from mrk-its/master
PySparkTask: handle special characters in name (#2778)

Close #2778
==
==================
cc396dfa;Tim Paine;2019-09-13 22:51:42 -0400;don't use absolute path in redirect for visualizer

==

luigi/server.py
==================
962c12c3;Mariusz Kryński;2019-09-10 20:53:12 +0200;rename name variable (address reviewer comment)

==

luigi/contrib/spark.py
==================
ea979089;Mariusz Kryński;2019-09-10 14:40:11 +0200;PySparkTask: special characters in name (#2778)

==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
1e99e6b6;Hongxin Liang;2019-08-27 10:20:06 +0200;Version 2.8.9

==

setup.py
==================
63007974;Honnix;2019-08-26 14:36:26 +0200;Merge pull request #2761 from daritter/bump_tornado
Update tornado requirement for new enough python versions
==
==================
b4e44336;GoodDok;2019-08-23 16:22:19 +0300;Issue 2644: Tasks can be run several times under certain conditions (#2645)
* New option with tracking url in output logs for Spark applications

* PR 2661: Provide automatic URL tracking for Spark applications
- changed `track_url_in_stderr` to `stream_for_searching_tracking_url` according to the latest changes in external_program.py
- added tests for spark url tracking in cluster and client modes

* Issue 2644: Tasks can be run several times
- introduced parameter `stable_done_cooldown_secs` with description
- added an acceptance test

==

luigi/scheduler.py
test/scheduler_api_test.py
test/scheduler_test.py
test/task_running_resources_test.py
test/worker_test.py
==================
7f67fbc2;Marcel R;2019-08-20 13:04:17 +0200;Show task history link in visualizer when recording. (#2759)
* Show task history link in visualizer when recording.

* Fix test.

==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_test.py
==================
9e0061d0;Jethro Nederhof;2019-08-19 22:32:59 +1000;contrib/ftp: Clean up temporary files (#2755)
* contrib/ftp: Clean up temporary files

* contrib/ftp: generate temporary filenames once

* contrib/ftp: slightly cleaner temporary directory names

* contrib/ftp: add testcase for tempfile cleanup

Also let test work in Python 3.
Also make the mtime offset larger because it fails in my timezone.

==

luigi/contrib/ftp.py
test/_test_ftp.py
==================
269cfe06;Emanuele Fabbiani;2019-08-19 12:52:18 +0200;Add blog post from xtream (#2768)
* Add blog post from xtream

Add reference to a new Medium post by xtream

* Update README to prevent warnings

* Update README 

Prevent warnings also on xtream name

==

README.rst
==================
ad11ed32;Lars Albertsson;2019-08-15 12:54:11 +0200;Replace documentation reference to outdated test environment py27-nonhdfs (#2762)
* Replace reference to outdated test environment py27-nonhdfs.

==

CONTRIBUTING.rst
==================
53d4361c;Lena Sundin;2019-08-13 13:48:44 +0200;Ensure ignored tests are picked up by tox (#2758)
* Enable erroneously skipped range tests

Tox has not been running range_test.py due to the file being executable. This commit sets the file permissions to read/write only and remediates the problems that arose when the tests ran again:

* Some tests for RangeMonthly were not accurately capturing the correct logic
* Some tests were not compatible with Python 3 in some map operations
* RangeByMinutesBase performed arithmetics that yield different results on Python 2 and 3, this was changed to be more resilient on both. May have impact on those relying on the erroneous behavior right now.

* Enable erroneously skipped SGE tests

Tox has not been running contrib/sge_test.py due to the file being executable. This commit sets the file permissions to read/write only and remediates the problems that arose when the tests ran again:

* pickle.dump() behaves differently in Python 2 and 3, ensure that it works for both
* Get rid of warnings about unclosed files, handling file lifecycles properly
* Minor docstring syntax

==

luigi/contrib/sge.py
luigi/tools/range.py
test/contrib/sge_test.py
test/range_test.py
==================
2aca67d3;Martin Ritter;2019-08-12 11:32:29 +0200;Update tornado requirement for new enough python versions

==

setup.py
==================
23a64f2f;brandon;2019-08-12 06:56:47 -0400;Adds "Force Commit" button in UI to set tasks to DONE (#2751)
* add force commit button

* bugfix

* remove temp

* added a couple unit tests

* consistency

* clarity

==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_api_test.py
==================
8d486804;Natasha Lazarova;2019-08-12 10:44:51 +0200;Version 2.8.8

==

setup.py
==================
4bc7c567;Ross Lote;2019-08-08 01:15:01 +0100;Code example correction (#2754)

==

doc/example_top_artists.rst
==================
f6b057a2;charlesoblack;2019-07-19 13:04:06 +0200;Fix SendGrid email API documentation. (#2745)

==

doc/configuration.rst
==================
2f0ca961;Ahsan Virani;2019-07-19 16:03:52 +0500;Add Jodel in list of companies (#2747)

==

README.rst
==================
38443c29;peter-volkov;2019-06-27 12:45:12 +0300;Change GET request to POST requests
Get request should not have http body according to RFC.
Works well with POST here, and fails with GET for some cases:
2019-03-22 20:51:24,589 tornado.application[19] ERROR: Uncaught exception GET /api/add_task ...

Traceback (most recent call last):
  File "contrib/python/tornado/tornado/web.py", line 1510, in _execute
    result = method(*self.path_args, **self.path_kwargs)
  File "contrib/python/luigi/luigi/server.py", line 120, in get
    result = getattr(self._scheduler, method)(**arguments)
  File "contrib/python/luigi/luigi/scheduler.py", line 819, in add_task
    assert worker is not None
AssertionError


By the way: urllib fetcher uses POST here (urlopen(full_url, body, timeout).)
==

luigi/rpc.py
==================
94c5df18;richardatphilo;2019-06-26 03:53:31 -0700;Enable overriding how often Luigi polls kubernetes for job completion. (#2724)

==

luigi/contrib/kubernetes.py
==================
a666c1c5;Artur Zylinski;2019-06-26 12:53:02 +0200;Update README.rst (#2730)
At Skyscanner, we use luigi a lot for most of the tracking events post-processing (transformations, filtering, ...).
==

README.rst
==================
1ed319b4;Samuel Tuson;2019-06-11 09:15:15 +0100;Update README visualiser image

==

doc/visualiser_front_page.png
==================
22d08d83;Samuel Tuson;2019-05-28 14:38:26 +0100;Expand the folder of the currently selected item on load

==

luigi/static/visualiser/js/visualiserApp.js
==================
75e6d7bc;Samuel Tuson;2019-05-28 12:35:36 +0100;Make "Others" section expanded by default

==

luigi/static/visualiser/js/visualiserApp.js
==================
7a9c59d1;Samuel Tuson;2019-05-28 11:03:14 +0100;Create folders for sidebar items

==

luigi/static/visualiser/css/luigi.css
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
4972ceda;Samuel Tuson;2019-05-28 10:53:12 +0100;Add clear selection button to sidebar

==

luigi/static/visualiser/css/luigi.css
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
4367d219;Honnix;2019-06-15 00:16:39 +0200;Merge pull request #2727 from spotify/honnix-patch-1
sdist upload has been deprecated for a while
==
==================
1e180bfd;Honnix;2019-06-14 14:33:58 +0200;Update RELEASE-PROCESS.rst

==

RELEASE-PROCESS.rst
==================
fd4e151a;Honnix;2019-06-14 14:32:26 +0200;sdist upload has been deprecated for a while

==

RELEASE-PROCESS.rst
==================
fbd977df;Nelson Arapé;2019-06-14 12:17:50 +0200;Merge pull request #2726 from spotify/release-2.8.7
Version 2.8.7
==
==================
d602f79b;Nelson Arapé;2019-06-13 17:10:08 +0200;Version 2.8.7

==

setup.py
==================
e385a00b;KenyaDonDraper;2019-06-07 14:16:47 +0300;Cast datetime to str before setting 'date' key in RedisTarget - see #2721 (#2722)

==

luigi/contrib/redis_store.py
==================
650456ba;Patryk Gałczyński;2019-06-07 13:14:49 +0200;Update LICENSE (#2723)

==

LICENSE
==================
5f6b21fa;Tomas Fiers;2019-06-07 13:14:01 +0200;Documentation: Running Luigi on Windows (#2720)
* Doc: add section "Running Luigi on Windows"

* Fix rst syntax. Test docs

==

doc/running_luigi.rst
==================
9a740abd;Jose Ignacio Riano;2019-06-02 01:13:59 +0200;DropboxTarget for luigi (#2696)
* setup(dropbox): initial config travis/tox files

* setup(dropbox): DropboxTarget and DropboxClient with tests

* DropboxTarget for luigi (squashed commit)

* Improved documentation/comments

* Changes requested by dlstadther in github.com/spotify/luigi/pull/2696

* user_agent is now a parameter
* Dropbox-related tests are only run if the DROPBOX_APP_TOKEN env is defined
* Removed the seek() method from ReadableDroboxFile (it was not needed)
* token is now a required parameter for DropboxTarget
* Small clean-up (trailing commas, variables names with reserved words)

* Small code and .travis.yml clean up

* Improvement in the test_remove()

* Improvement in the test_remove()

* Removed develop from .travis.yml

* Changes requested by dlstadther in github.com/spotify/luigi/pull/2696

* user_agent is now a parameter
* Dropbox-related tests are only run if the DROPBOX_APP_TOKEN env is defined
* Removed the seek() method from ReadableDroboxFile (it was not needed)
* token is now a required parameter for DropboxTarget
* Small clean-up:
  - trailing commas
  - variables names with reserved words
  - non-evident tests...

* Changes requested by dlstadther in github.com/spotify/luigi/pull/2696

* Added support for trailing slashes in paths:
  - for mkdir
  - for paths refering to already existing directories

* Added version information for dropbox requirement in tox.ini

* Only zero or one trailing slashes are allowed in the paths
(see https://github.com/spotify/luigi/pull/2696#discussion_r285956974)

==

.travis.yml
luigi/contrib/dropbox.py
luigi/static/visualiser/js/visualiserApp.js
luigi/templates/history.html
test/contrib/dropbox_test.py
tox.ini
==================
2de1b686;charlesoblack;2019-05-28 13:10:42 +0200;Adapt SendGrid integration to use the updated libraries. (#2715)
* Adapt SendGrid integration to use the updated libraries.

* DRY Mail() generation, no retrieval of sendgrid response

* pep 8 fixes

* fix sendgrid notifications test

* pep 8 fix

* fix notification test to not use raise_errors = True since that is not a kwarg for SendGridAPIClient anymore

==

luigi/notifications.py
test/notifications_test.py
==================
e2228418;Dillon Stadther;2019-05-28 07:09:59 -0400;create date from ms (#2711)

==
==================
41e40fca;Steve Pletcher;2019-05-28 07:09:24 -0400;Mark tasks as failed if complete() is false when run finishes (#2710)
* Mark tasks as failed if complete() is false when run finishes

* linting

* properly reference child task

* Add check_complete_on_run setting to gate new feature

* lint roller

* fix use of misleading call signature

* last param fix

* remove config_path param

==

luigi/worker.py
test/helpers.py
test/worker_task_test.py
==================
f0df21a2;Techgrok;2019-05-22 22:32:42 -0400;Update README.rst (#2713)
Added GIPHY and its corresponding blog post
==

README.rst
==================
89751cca;Hongxin Liang;2019-05-22 14:37:25 +0200;Version 2.8.6

==

setup.py
==================
54e17cd5;David Malinge;2019-05-17 01:50:34 +0200;create date from ms

==

luigi/templates/history.html
==================
9572d16d;Honnix;2019-05-16 09:15:30 +0200;Merge pull request #2709 from spotify/fix-prometheus
fix calling method on wrong object
==
==================
aec5dc2e;Hongxin Liang;2019-05-15 19:24:00 +0200;fix calling method on wrong object

==

luigi/server.py
test/server_test.py
==================
1164eb6b;Hongxin Liang;2019-05-09 13:33:45 +0200;Version 2.8.5

==

setup.py
==================
24e85945;Honnix;2019-05-09 13:23:23 +0200;Merge pull request #2705 from spotify/claire/fix_dataflow_bq_return_type
Fix BigQueryTarget parsing in beam_dataflow module
==
==================
baa54c9f;Hongxin Liang;2019-05-08 14:48:54 +0200;import mock in a better way

==

test/contrib/prometheus_metric_test.py
test/server_test.py
==================
4a9769f7;Hongxin Liang;2019-05-08 13:53:07 +0200;add unit tests to cover the change

==

test/server_test.py
==================
6980c090;Hongxin Liang;2019-05-08 11:56:58 +0200;add callback to metric collector
So that they can configure http handler. This is to fix #2628.

==

luigi/contrib/prometheus_metric.py
luigi/metrics.py
luigi/server.py
test/contrib/prometheus_metric_test.py
==================
5d9d38df;Claire McGinty;2019-05-08 14:49:59 -0400;Ensure BeamDataflowJobTask is init

==

luigi/contrib/beam_dataflow.py
==================
25b000e7;Claire McGinty;2019-05-08 13:11:40 -0400;Fix BigQueryTarget parsing in beam_dataflow module

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
8ea3ddd7;Tomas Fiers;2019-05-08 12:20:37 +0200;Fix __init__ error when using TOML config (#2702)
* Fix __init__ error when using TOML config

* Test LuigiTomlParser.has_option()

==

luigi/configuration/toml_parser.py
test/config_toml_test.py
==================
994500f7;David Przybilla;2019-05-07 20:08:49 +0900;aws batch : job queue as parameter (#2689)
* aws batch task: job queue as parameter

* aws batch queue docs + tests

* fixing flake8

==

luigi/contrib/batch.py
test/contrib/batch_test.py
==================
2181f19d;Alexander Koryagin;2019-05-07 14:07:25 +0300;Fix example of "summary_length" (#2700)
Fix example of "summary_length" from "execution_summary" section.
==

doc/configuration.rst
==================
2e4c3737;Mikaela Grundin;2019-05-06 16:44:50 +0200;Merge pull request #2701 from spotify/version-2.8.4
Version 2.8.4
==
==================
99cbec1c;Mikaela Grundin;2019-05-06 16:32:13 +0200;Release 2.8.4

==

setup.py
==================
c5eca1c3;Emanuele Fabbiani;2019-04-28 23:09:35 +0200;Update README to include xtream among users (#2697)

==

README.rst
==================
aee28642;Stefaan Lippens;2019-04-23 20:29:52 +0200;Reconcile underscore/dash config style handling (#2688) (#2691)
Reconciles handling of underscore-style (recommended)
and dash-style (deprecated but allowed) in both
`luigi.task.Config` and and `luigi.configuration.get_config().get()`.
==

luigi/configuration/cfg_parser.py
luigi/parameter.py
test/config_env_test.py
test/parameter_test.py
==================
53ff9999;GoodDok;2019-04-18 23:57:40 +0300;Fix flake errors after moving to python 3 (#2695)

==

luigi/contrib/docker_runner.py
luigi/contrib/ftp.py
luigi/contrib/mssqldb.py
luigi/contrib/mysqldb.py
luigi/lock.py
tox.ini
==================
9e607847;Victoria;2019-04-18 05:58:34 -0500;Add Prometheus contrib for monitoring purpose (#2628)
* Add Prometheus contrib for monitoring purpose

* remove unused import causing build failures with 2.7

* update tox docs dep with prometheus_client

==

doc/configuration.rst
luigi/contrib/prometheus_metric.py
luigi/metrics.py
luigi/scheduler.py
luigi/server.py
setup.py
test/contrib/prometheus_metric_test.py
test/metrics_test.py
test/scheduler_test.py
tox.ini
==================
6aa16dc4;Claire McGinty;2019-04-15 09:08:03 -0400;Merge pull request #2675 from ClaireMcGinty/claire/add_beam_dataflow_task
add beam_dataflow_task to luigi/contrib
==
==================
9b186630;Claire McGinty;2019-04-14 21:51:47 -0400;remove output_uris

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
a1f20237;Claire McGinty;2019-04-12 23:48:14 -0400;address comments with input/output arg parsing

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
329c1360;Stefaan Lippens;2019-04-13 02:43:55 +0200;Configuration documentation: remove deprecated/wrong [core]max_reschedules entry (#2692)
The configration doc contains entry on `[core]max_reschedules`,
which is not only deprecated (in favor of `[worker]max_reschedules`)
but also wrong: the correct (but deprecated) config key is
`[core]worker-max-reschedules`.
Better get rid of this all together and just keep `[worker]max_reschedules`
==

doc/configuration.rst
==================
c0316de3;Ben Sully;2019-04-09 20:57:12 +0100;Import ABCs from collections.abc, not collections (#2683)
This fixes a DeprecationWarning which would have broken in Python 3.8.
==

luigi/parameter.py
luigi/scheduler.py
==================
3d5df7ed;Claire McGinty;2019-04-08 13:50:12 -0400;remove redundant test case

==

test/contrib/beam_dataflow_test.py
==================
9d4efc6e;Claire McGinty;2019-04-08 13:32:00 -0400;Support tuple and list input types; update output formatting error message

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
a655af96;Subhash Chandra;2019-04-02 22:29:21 +0530;Added worker-id commandline parameter (#2655)

==

luigi/worker.py
==================
295ed985;Lars Albertsson;2019-04-02 18:57:45 +0200;RangeMonthly should deal with whole months, i.e. months_forward=0 should require only complete months. (#2666)

==

luigi/tools/range.py
test/range_test.py
==================
f0d8d425;Armon Avrahamy;2019-03-31 15:59:30 +0300;Add Whizar to company list (#2682)

==

README.rst
==================
e1e6b399;Claire McGinty;2019-03-29 10:26:35 -0400;address more comments

==

luigi/contrib/beam_dataflow.py
==================
2142db6a;Claire McGinty;2019-03-29 10:05:53 -0400;address some comments

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
62fbaf20;GoodDok;2019-03-28 21:11:29 +0300;Provide automatic URL tracking for Spark applications (#2669)
- changed `track_url_in_stderr` to `stream_for_searching_tracking_url` according to the latest changes in external_program.py
- added tests for spark url tracking in cluster and client modes
==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
44f89a2b;Stefaan Lippens;2019-03-22 14:39:55 +0100;Require at least python-dateutil version 2.7.5 instead of only 2.7.5 (#2662) (#2679)

==

setup.py
==================
9bc3d3b8;Claire McGinty;2019-03-20 09:07:44 -0400;fix init formatting

==

luigi/contrib/beam_dataflow.py
==================
f0938a64;Claire McGinty;2019-03-20 09:03:47 -0400;simplify unit test setup

==

test/contrib/beam_dataflow_test.py
==================
eb8286f5;Claire McGinty;2019-03-19 11:53:19 -0400;Make output_uris a dict

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
7df9ac31;Claire McGinty;2019-03-19 10:56:37 -0400;add before_run hook

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
3126905a;Claire McGinty;2019-03-19 09:49:36 -0400;use json.dumps for Label data

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
8fa364d8;Claire McGinty;2019-03-18 11:38:46 -0400;fix some style issues

==

luigi/contrib/beam_dataflow.py
==================
7566165f;Claire McGinty;2019-03-13 16:40:33 -0400;add beam_dataflow Task to contrib

==

luigi/contrib/beam_dataflow.py
test/contrib/beam_dataflow_test.py
==================
31a6e0fa;Michael Grupp;2019-03-13 13:13:10 +0100;Fix durations in D3 graph (fixes #2620) (#2624)
* Fix durations in D3 graph (fixes #2620)

Fixes the duration calculation. Both date objects `startTime` and
`finishTime` are in milliseconds, so the additional multiplication with
1000 was wrong.

Also, the duration is now calculated with:
   duration = last_updated - time_running
as it is done in datadog_metric.py:83

I decided to not display the time if the duration is longer than a day,
because then it gets messy with the Date objects (would require a
conversion to day of year, not day of month).

* Remove code duplication.

==

luigi/static/visualiser/js/visualiserApp.js
==================
af6cf07e;Pete Weissbrod;2019-03-11 16:41:52 -0400;Minor improvements to single-worker-timeout support (#2667)
- Update documentation to clarify that worker-timeout
  configuration is supported for single workers
- Add test to ensure/prove timeout feature works without
  setting the num-workers setting
- Currently, for single-worker setups, the error message
  related to timeout is missing the actual timeout seconds
  in the error message. These changes improve the error
  message such that the logs properly display the timeout

==

doc/configuration.rst
luigi/task.py
luigi/worker.py
test/worker_test.py
==================
a3ea4359;Lars Albertsson;2019-03-11 21:39:52 +0100;Replace Python MapReduce example with Spark example. (#2668)

==

doc/example_top_artists.rst
examples/top_artists.py
examples/top_artists_spark.py
==================
3701c68d;GoodDok;2019-03-05 23:13:54 +0300;Provide automatic URL tracking for Spark applications (#2661)

==

luigi/contrib/external_program.py
luigi/contrib/spark.py
test/contrib/external_program_test.py
==================
6f325703;Liu Dongqing;2019-02-26 19:59:18 +0800;Add a Task wrapper for MicroSoft OpenPAI (#2531)
* Add pai task to support open pai

* Support read config to get token and check job status

* Correct the open pai url

* Using mock response to test pai task; make required property abstract

* fixed the code format; make it works with python3

* Add __slots__ back for json dump

* Modified according to the comments;

1) correct/add more doc strings.
2) raise exception when 404
3) use global logger directly.
4) change expiration to integer

* Cleanup according to comments; refine unittest

* Limit reqeust to 2.20 for requests lib issue 4830

* Remove duplicated test job class

==

luigi/contrib/pai.py
test/contrib/pai_test.py
tox.ini
==================
2e55872f;Gram;2019-02-21 22:30:46 +0300;Accept pathlib based path as argument for LocalTarget (#2548)
See docs for usage.
==

luigi/target.py
test/local_target_test.py
==================
93786a06;Arash Rouhani;2019-02-19 22:18:10 +0100;Add worker option 'max_keep_alive_idle_duration (#2654)
See docs for usage.
==
==================
9afc222c;Subhash Chandra;2019-02-20 02:26:22 +0530;Prevent range-tasks from autoloading (#2656)
Users will now see a big warning, see the docs update for how to resolve it.
==

doc/configuration.rst
luigi/__init__.py
==================
f296281e;Subhash Chandra;2019-02-15 04:09:15 +0530;PR Changes

==

doc/configuration.rst
luigi/worker.py
==================
74027e8c;Arash Rouhani;2019-02-14 21:19:37 +0100;Simplify implementation of temporary_path() (#2652)
The context manager FileSystemTarget.temporary_path() rolled its own
manager, it was overcomplicated so i rewrote using contextlib.
==

luigi/target.py
test/target_test.py
==================
07007c77;Dillon Stadther;2019-02-14 14:53:53 -0500;Fix broken aws tests (#2658)
* Require minimum botocore version with s3transfer>=0.2.0 compatibility

* Replace min botocore version with locked s3transfer version

==

tox.ini
==================
281649f2;Ezekiel Victor;2019-02-13 16:51:58 -0800;add Textpert to companies using Luigi (#2659)

==

README.rst
==================
03aa001e;Subhash Chandra;2018-11-12 14:07:27 +0530;Added TTL to keep_alive

==

luigi/worker.py
==================
ff2be7ee;Brian Martin;2019-02-07 09:40:45 -0500;setup.py: Support older setuptools (<=20.1.1) (#2623)
The `python_version` conditional was added fairly recently (<2 years).
We've run into a few cases where it would be very convenient for luigi
to support older setuptools (e.g. managed environments where it may be
difficult or not possible to upgrade).
==

setup.py
==================
ed8706a0;jsteigs642;2019-02-04 14:54:38 -0600;Add support for specifying kubernetes namespace (#2629)
* Add support for specifying kubernetes namespace

This change will allow users to submit jobs to a specific namespace in a k8s cluster rather than having them all run in the default namespace.

* Updated optional parameter to OptionalParameter type

==

luigi/contrib/kubernetes.py
==================
0819a5fe;Dhruv Batheja;2019-01-31 21:45:24 +0100;Add support for a detailed LuigiRunResult instead of a plain Boolean (#2630)
luigi.build and luigi.run now can return an object containing detailed information of how the pipeline execution went.

See the documentation in this commit for usage.

==

doc/running_luigi.rst
luigi/__init__.py
luigi/execution_summary.py
luigi/interface.py
luigi/retcodes.py
test/interface_test.py
==================
74f0ec29;aminevg;2019-01-25 21:05:04 +0900;Add VOYAGE GROUP/Zucks to the company list (#2635)

==

README.rst
==================
55ca81d7;Natasha;2019-01-21 18:46:11 +0100;Add port field for PostgresQuery (fixes #2625) (#2627)
Add port to rdbms.Query

==

luigi/contrib/postgres.py
luigi/contrib/rdbms.py
test/contrib/postgres_test.py
==================
c165ead2;zwotzie;2019-01-21 16:52:56 +0100;fixes #2223 HdfsTarget is not workging with snakebite (#2572)
* introduce rpc-attempt retry count and wait time in configuration

* fix misspelling and flake8

* fix Exceptionhandling for snakebite

==

luigi/contrib/hdfs/format.py
==================
bf9521f5;Mateusz Klimaszewski;2019-01-18 17:25:40 +0100;Add autodetect parameter to BigQueryLoadTask (#2363) (#2575)

==

luigi/contrib/bigquery.py
==================
3a0bfbff;Jon Duckworth;2019-01-17 13:16:24 -0700;Fix parsing for TupleParameter (#2619)
This in turn fixes an error with dynamic dependencies and fixes #2609.
==

luigi/parameter.py
test/parameter_test.py
==================
a0f1db01;Honnix;2019-01-17 09:23:49 +0100;Merge pull request #2626 from spotify/honnix-patch-1
update owner list
==
==================
abf89a78;Honnix;2019-01-17 08:47:13 +0100;update owner list

==

.github/CODEOWNERS
==================
eadf7ab8;Dillon Stadther;2019-01-16 10:22:51 -0500;Add version cap to hypothesis[datetime] (#2622)

==

tox.ini
==================
42f51ac9;Michael Grupp;2019-01-16 16:01:44 +0100;Fix a typo in the documentation (#2621)

==

doc/execution_model.rst
==================
8a485cd6;Natasha Lazarova;2019-01-16 14:50:27 +0100;Upgrade to version 2.8.3

==

setup.py
==================
6b1a0853;Manish Sinha;2019-01-12 10:59:47 -0500;Support for Azure Blob Storage Target (#2585)
* Added support for authentication with Azure Blob

* Added ReadableAzureBlobFile and AtomicAzureBlobFile to read and write files

* Created AzureBlobTarget with docstring

* azureblob: Fix flake8 warnings except __init__

* azureblob: Remove flake8 related warning for __init__ overloads

* Finish docstring for luigi.contrib.azureblob

* Added "azure-storage" dep to tox

* Finish documenting AzureBlobClient and AzureBlobTarget

* AzureBlobTarget: Implement fs property

* azureblob: Fix logic of splitting a filepath into container,blob

* azureblob: before uploading a blob, create the container

* contrib.AzureBlobClient.delete_container: no need to release lease

* contrib.AzureBlobClient.upload: put the acquiring release outside try

* contrib.AzureBlobClient.delete_container: acquire lease before deleting

* contrib.AzureBlobClient.copy: return copy status

* contrib.AzureBlobClient.exists: no need to handle exception

* contrib.AzureBlobClient: Fix method invocation name to splitfilepath

* contrib.AzureBlobClient.upload: acquire lease only if blob is present

* contrib.AzureBlobClient: if uploading check for blob path

* contrib.AzureBlobClient.copy: check for string inequality using != instead of is

* contrib.AzureBlobClient.copy: only get dest lease if exists

* contrib.AzureBlobClient.copy: Use make_blob_url for source blob

* contrib.AzureBlobClient.remove: returns True or False as base operation returns nothing

* contrib.AzureBlobClient.move: return status

* Added tests for azureblob.AzureBlocClient

* contrin.azureblob.AzureBlobClient: allow reading specific bytes

* contrib.azureblob.ReadableAzureBlobFile: Implement seek because numpy calls it

* contrib.azureblob: download_as_bytes should end at n-1 as it would be n bytes

* contrib.ReadableAzureBlobFile: download file before reading

* contrib.Azure: added end to end tests to use all features

* contrib.azureblob: Handle the scenario when we don't want to download but stream

* contrib.azureblob: Updated test to read text via streaming

* contrib.azureblob: Added some basic logging

* contrib.azureblob: added docstring for 'download_when_reading' arg

* contrib.azureblob: fix docstring generation for progress_callback

* contrib.azureblob: fix flake8 warning on azureblob_test

* contrib.azureblob: fix flake8 tests for azureblob.py

* contrib.azureblob: AzureBlobClient.upload: remove self.tmp_path

* contrib.azureblob: Rename variable "n" to more readable "bytes_to_read"

* contrib.azureblob: Mark splitfilepath as static method

* contrib.azureblob: AzureBlobClient.copy should handle scenario when delete of src fails

* contrib.azureblob: Use datetime.utcnow() for creating folder prefix in download_file_location

* contrib.azureblob: Fix test failures

* contrib.azureblob: Remove print in tests

* azureblob: add ability to run tests via emulation

* azureblob_test: Fix scenario when copying is delayed

* Add "azureblob" tox environment

* azureblob: Add nose attr "azureblob" to azure blob test cases

* azureblob: Handle scenario with ResourceWarning

* scripts: Add script to install+start and stop azurite

* azureblob: add another tox environment to run azureblob tests

* Add a single matrix entry to run azureblob tests on py37

* azureblob: under core tox env, don't run azureblob

* azureblob: Fix flake8 issues

* azureblob: Fix import failure

* azureblob: remove import of "warnings"

==

.travis.yml
luigi/contrib/azureblob.py
scripts/ci/install_start_azurite.sh
scripts/ci/stop_azurite.sh
test/contrib/azureblob_test.py
tox.ini
==================
0d1c4617;bardb;2019-01-10 11:35:58 -0500;fix-bigquery-create-dataset (#2618)

==

luigi/contrib/bigquery.py
==================
eecec104;Jimmy Mårdell;2019-01-09 22:41:49 +0100;Buffered reads from GCSTarget (#2588)

==

luigi/contrib/gcs.py
==================
f9095d30;Konrad Burnik;2019-01-09 21:42:28 +0100;Fix call to message from TypeError not working with Python 3.6 (#2616) (#2617)

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
52390290;Daniel Huckins;2019-01-05 09:17:54 -0500;Update postgres.py (#2615)
* Update postgres.py

added port to `PostgresTarget`

* Update postgres_test.py

==

luigi/contrib/postgres.py
test/contrib/postgres_test.py
==================
0f31f07e;Jesaja Everling;2019-01-04 17:30:13 +0100;Check type of column before migrating - fixes #2563 (#2564)

==

luigi/db_task_history.py
==================
ffe58e31;Yuchen;2018-12-27 15:13:42 -0500;Add Hopper to the company list (#2614)

==

README.rst
==================
f5df578d;Shopetan;2018-12-21 00:41:01 +0900;Docs: Fixed a mistake with grammar (#2613)

==

luigi/util.py
==================
e17a224a;Honnix;2018-12-19 16:38:59 +0100;Merge pull request #2612 from spotify/default-opts
give a few default values to opts when setting up logging
==
==================
acfae807;Hongxin Liang;2018-12-19 15:08:44 +0100;give default values to opts

==

luigi/setup_logging.py
==================
eb1a2f3a;Damien Garaud;2018-12-18 16:15:06 +0100;Fix the table name when reflect is True in sqla.CopyToTable (#2604) (#2605)
When the schema is specified, MetaData is already parametrized with the right
name. No need to call "meta.reflect" with the name of the schema in this case.
==

luigi/contrib/sqla.py
==================
b2a57591;Charles-André Bouffard;2018-12-17 15:33:21 -0500;Add Datadog contrib for monitoring purpose (#2434)
* Add Datadog contrib for monitoring purpose

Datadog is a tool that allows you to send metrics that you create
dashboard and add alerting on specific behaviors.

Adding this contrib will allow for users of this tool to log their pipeline
information to Datadog.

Based on the status change of a task, we log that information to Datadog
with the parameters that were used to run that specific task.

This allow us to easily create dashboard to visualize the health. For
example, we can be notified via Datadog if a task has failed, or we can
graph the execution time of a specific task over a period of time.

The implementation idea was strongly based on the stale PR
https://github.com/spotify/luigi/pull/2044.

* Refactor MetricsCollectors in Scheduler

I've also added a few test to ensure that the implementation was working
well.

* Add polish + tests around metrics on task state

This takes care of ensuring that the proper metrics collection calls are
being done when they are expected to be happening.

We've also removed a few `@RPC_METHOD` that weren't actually being used
and that wasn't required.

* Add tests related to the Datadog contrib

This makes sure that we're properly dispatching API and STATSD call with
the proper parameter values to Datadog.

This doesn't test all the different possible parameters configuration.

* Improve configuration documentation with new Datadog contrib

This adds a few extra documentation line for the configuration to allow
user to find all the settings they can tweak for each individual
contribs instead of having to go through each individual contrib files.

* Update DataDog dep. to the most recent release

The original implementation was made when 0.16.0 was the latest version.
Since there there have been a few improvements and bug fixes made to the
library that we should be using.

Reading through the release log there shouldn't be any feature-breaking
changes so we should be good to update it!

* Change metrics collection getter to class method

Previously, the getter wasn't a class method and wouldn't work as
expected. In order to ensure that the output is what we expect, we've
added more tests.

* Fix spec issues related to new tests

There was multiple problems that needed to be solved in order to get the
specs green again. Each individual specs were passing when ran
individually, but when ran into tox as a group, some of them would pass
and other would fail depending the tox environment.

It came to my attention that the time function of this file, was
creating an issue with other specs because we were not tearDowning it as
expected. Also, using setTime within the setUp group had side effects
with unexpected behaviors.

Then, the way way that the task_id and task_family was named was also
causing problems with the same spec that were failing prior.  I'm unsure
why this would be the case, but changing either fail, but changing both
makes the spec to green.

Finally, the last spec would always fail because the setTime was set
AFTER the task was actually being run, which would always cause the
execution time to be greater than 0.

My understanding of all of this is still a bit fuzzy, but hey, now the
spec suite passes.

* Refactor the datadog_metric tests

* Abstract MetricsCollector class

This will force people to implement this methods of this class when they
refer to it.

* Kwargs on the _send_event call

This allows for less-strict function calls.

* Fix metrics collector

* Change DataDog scheduler_api_tests

* Change default_tags of DatadogMetricsCollector to a property

The underlying configuration of the Datadog metrics collector is a
property, so it makes more sense that it's also a property when used
within the class itself.

==

doc/configuration.rst
luigi/contrib/datadog_metric.py
luigi/metrics.py
luigi/scheduler.py
test/contrib/datadog_metric_test.py
test/metrics_test.py
test/scheduler_api_test.py
test/scheduler_test.py
tox.ini
==================
a1fcfe7f;Arnau Villoro;2018-12-16 14:22:33 +0100;Add BaseTIS as part of the companies that use Luigi (#2607)

==

README.rst
==================
ca0aa9af;Lars Albertsson;2018-12-13 21:17:18 +0100;Add range functionality for monthly cadence. (#2601)

==

luigi/tools/range.py
setup.py
test/range_test.py
==================
217561ac;Dillon Stadther;2018-12-12 12:04:06 -0500;Release 2.8.2 hotfix (#2606)

==

setup.py
==================
97e3be75;Gram;2018-12-12 19:56:30 +0300;Fix logging via toml (#2593)
* test to reproduce bug

==

luigi/setup_logging.py
test/setup_logging_test.py
==================
5193f84b;Natasha;2018-12-11 17:10:35 +0100;Merge pull request #2602 from spotify/release-2.8.1
Version 2.8.1
==
==================
d24bd118;Natasha Lazarova;2018-12-11 17:03:48 +0100;Version 2.8.1

==

setup.py
==================
cfd403e9;Josh;2018-12-11 09:11:12 -0500;Fix inspect.getargspec() DeprecationWarning in PY3 (#2578) (#2579)
* Fix inspect.getargspec() DeprecationWarning in PY3 (#2578)

* Add note about getargspec for case when PY2 support is dropped

==

luigi/scheduler.py
luigi/six.py
==================
4b2b3d33;Brian Martin;2018-12-06 13:37:43 -0500;contrib: Add ExternalDailySnapshot (#2591)
It is common to depend on the latest version of an ExternalTask, but not be concerned with
when that external task was generated.
==

luigi/contrib/external_daily_snapshot.py
test/contrib/external_daily_snapshot_test.py
==================
88b34384;MarvinJWendt;2018-12-06 13:08:22 +0100;Docs: Fixed "Github" to fit to the rest of the doc (#2596)

==

README.rst
==================
cdd63df7;Saubhik Mukherjee;2018-12-03 01:37:09 +0530;Update task.py (#2589)
docstring change for `requires(self)`
==

luigi/task.py
==================
a6813d84;Jelmer Kuperus;2018-11-29 14:54:21 +0100;Allow direct import of HdfsFlagTarget from luigi.contrib.hdfs (#2594)

==

luigi/contrib/hdfs/__init__.py
==================
0a098f6f;Gram;2018-11-25 14:13:33 +0300;Configure logging via TOML config (#2483)
See the added docs for how to use it.
==

doc/configuration.rst
doc/index.rst
doc/logging.rst
examples/config.toml
luigi/cmdline.py
luigi/configuration/cfg_parser.py
luigi/configuration/toml_parser.py
luigi/interface.py
luigi/retcodes.py
luigi/setup_logging.py
test/cmdline_test.py
test/setup_logging_test.py
==================
70f53804;Dillon Stadther;2018-11-21 14:44:15 -0500;Reduce TravisCI Test Runtime (#2541)
* Update nonhdfs to core

* Add tox env of contrib

* Add/update all contrib TestCases (not already postgres, gcloud, or minicluster) to contrib env

* Add tox env for aws

* Update aws contrib nose attr to  attr

* Add py27-aws to travis

* Add tox apache env

* Update appropriate tox env  to

* Add py27-apache to Travis

* Fix tox env var

* Update order of travis 2.7 builds to put core/unixsocket first

* Add 3.7 apache and aws to travis
==

.travis.yml
test/contrib/_webhdfs_test.py
test/contrib/batch_test.py
test/contrib/bigquery_test.py
test/contrib/cascading_test.py
test/contrib/docker_runner_test.py
test/contrib/ecs_test.py
test/contrib/esindex_test.py
test/contrib/external_program_test.py
test/contrib/hadoop_jar_test.py
test/contrib/hadoop_test.py
test/contrib/hdfs/webhdfs_client_test.py
test/contrib/hdfs_test.py
test/contrib/hive_test.py
test/contrib/kubernetes_test.py
test/contrib/lsf_test.py
test/contrib/mongo_test.py
test/contrib/opener_test.py
test/contrib/pig_test.py
test/contrib/rdbms_test.py
test/contrib/redis_test.py
test/contrib/redshift_test.py
test/contrib/s3_test.py
test/contrib/salesforce_test.py
test/contrib/scalding_test.py
test/contrib/sge_test.py
test/contrib/spark_test.py
test/contrib/sqla_test.py
test/contrib/streaming_test.py
test/contrib/test_ssh.py
tox.ini
==================
06234cea;Lars Albertsson;2018-11-21 20:41:27 +0100;Accept date_interval classes as arguments for relevant parameter types. (#2583)
* Document that intervals are accepted for MonthParameter and YearParameter.

* Tweak MonthParameter and YearParameter docs.

==

luigi/parameter.py
test/date_parameter_test.py
==================
f3b8a52d;Arash Rouhani;2018-11-21 20:35:48 +0100;Add some docs to interface.run (#2582)
Slightly related to issue #2577.
==

luigi/interface.py
==================
fbc5bdae;Adil Khashtamov;2018-11-20 18:13:17 +0600;Added port property to CopyToTable (#2561)
* added port argument for CopyToTable class

* added port to docstring

* optional port property

==

luigi/contrib/postgres.py
luigi/contrib/rdbms.py
==================
7d3dae7c;Adil Khashtamov;2018-11-20 00:33:58 +0600;S3Client improvements (#2569)
* introduced new method get_as_bytes
optional arg for get_as_string

* added test

* added docstring

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
43c73b6f;Dillon Stadther;2018-11-19 08:24:43 -0500;Downgrade moto from 1.3.7 to 1.3.6 (#2586)

==

tox.ini
==================
7d5aa91e;Josh;2018-11-17 11:22:38 -0500;Make Worker parameter task_process_context an OptionalParameter (#2468) (#2574)

==

luigi/worker.py
==================
c01e134b;Hongxin Liang;2018-11-02 13:46:38 +0100;Version 2.8.0

==

setup.py
==================
06e3d916;Hongxin Liang;2018-10-31 20:42:06 +0100;Implement configurable CORS.

==

doc/configuration.rst
luigi/server.py
test/server_test.py
==================
a87266d7;Fenimore;2018-10-30 08:52:08 -0400;Add HdfsFlagTarget (#2559)
* Add HdfsFlagTarget

==

luigi/contrib/hdfs/target.py
test/contrib/hdfs_test.py
==================
f3d7fca4;Hichame El Khalfi;2018-10-28 14:27:01 -0400;Fix HdfsAtomicWriteDirPipe.close() when using snakebite and the file do not exist. (#2549)
* fix exception when we want to remove a file that do not exist in hdfs and using snakebite client

* add fix to HdfsAtomicWritePipe

* add test to verify if the path exists before removing it

* Fix Exception catch

* Lint

==

examples/spark_als.py
luigi/contrib/hdfs/format.py
luigi/contrib/hdfs/snakebite_client.py
luigi/contrib/opener.py
luigi/tools/deps_tree.py
test/contrib/hdfs_test.py
test/webhdfs_minicluster.py
==================
7562403d;Daniel Feldman;2018-10-26 04:08:45 -0700;Small fix to logging in contrib/ecs.py (#2556)
* Added check for failures in contrib/ecs.py ECSTask.run() response from run_task boto3 api call. This was causing unhelpful error messages.

* Added Starsky Robotics to readme

==

README.rst
luigi/contrib/ecs.py
==================
f3d4bed2;RDIL;2018-10-22 16:25:22 -0400;[ImgBot] optimizes images (#2555)
*Total -- 1,159.85kb -> 888.98kb (23.35%)
==

doc/aggregate_artists.png
doc/dependency_graph.png
doc/execution_model.png
doc/history.png
doc/history_by_id.png
doc/history_by_name.png
doc/luigi.png
doc/parameters_date_algebra.png
doc/parameters_enum.png
doc/parameters_recursion.png
doc/task_breakdown.png
doc/task_parameters.png
doc/task_with_targets.png
doc/tasks_input_output_requires.png
doc/tasks_with_dependencies.png
doc/user_recs.png
doc/visualiser_front_page.png
doc/web_server.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_222222_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_2e83ff_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_454545_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_888888_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_cd0a0a_256x240.png
==================
3cae7456;Alexandra Nordin;2018-10-21 04:43:07 +0200;Add CopyToTable task for MySQL (#2553)
* Adding an rdbms.CopyToTable subclass for MySQL.

* Adding Bonnier News to list of Luigi users.

==

README.rst
luigi/contrib/mysqldb.py
test/contrib/mysqldb_test.py
tox.ini
==================
00eaa956;adaitche;2018-10-21 04:41:47 +0200;Make capture_output non-positional in ExternalProgramTask (#2547)

==

luigi/contrib/external_program.py
==================
98b3df83;Utku Demir;2018-10-11 00:04:34 +1300;Add Movio to list of Luigi users (#2551)

==

README.rst
==================
f47c687f;Piotr Janiszewski;2018-10-10 13:03:48 +0200;Interpolate environment variables in .cfg config files (#2527)
* Add interpolation of env vars to LuigiConfigParser

* Add tests

* Update docs

* Fix implementation for Python 2

The initial implementation used a configparser backport, which loaded
config values as unicodes rather than strings. This broke a lot of unit tests.

I revert back to the ConfigParser module from standard library (instead of
the backport) and override the ConfigParser._interpolate method.


==

doc/configuration.rst
luigi/configuration/cfg_parser.py
test/config_env_test.py
==================
889ef2af;Jethro Nederhof;2018-10-05 22:11:27 +1000;Fix ReadTheDocs build (#2546)
* contrib/s3: warn on boto3 dependency on import

* docs: fix RTD build by correctly removing python-daemon dependency

* setup.py: clean up version_info check for enum34

==

luigi/contrib/s3.py
setup.py
==================
948a55b5;Marcelo Sousa Menegol;2018-10-01 15:57:30 -0300;Add Big Data's name to the list of companies who use Luigi (#2545)
* Add BigData to company list
==

README.rst
==================
d63f32a6;Dillon Stadther;2018-09-28 08:19:41 -0400;Fix S3Client.remove - add max batch size (#2529)
* Refactor s3 remove test into individual tests

* Update s3 remove to batch in 1000 increments

* Update S3Client.remove docstring

* Add test for removing more than 1000 s3 files

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
888bd8dd;aminevg;2018-09-28 21:02:05 +0900;Fix S3Client's _path_to_bucket_and_key to support keys with question marks (#2534)
* Add query element to S3 key

* Add _path_to_bucket_and_key test

* Split _path_to_bucket_and_key test into two

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
4389332f;Dillon Stadther;2018-09-28 07:52:10 -0400;Add Python 3.7 compatibility (#2466)
* Add tox python 3.7

* Mimic travis 3.6 setup for 3.7-dev to check for support

* Update travis to 3.7 (not dev) which currently requires xenial os distro

* Add explicit postgresql service to Travis

* Update 3.7 builds to override dist and sudo

* Add py37 to README support

* Update package classifiers for supported Python versions

* Remove python 3.4 and 3.5 from TravisCI testing

* Update readme python version support for tested versions

==

.travis.yml
README.rst
setup.py
tox.ini
==================
c151a5b5;jorge jardines;2018-09-28 13:49:04 +0200;Refactor s3 copy into sub-methods (#2508)
* Extract copy dir and copy file to dedicated methods

* Reuse _copy_file in _copy_dir function

* Change `threads, start_time, end_time, start` to optional args

* Return number of items and size when copy single file

* Use `meta.client.copy` instead of `_copy_file`

* Returns a tuple in `_copy_file`

* Add destination as copy_file and copy_dir parameter

* reuse threads and part_size params in copy helper funtions

* Use variables for constants

==

luigi/contrib/s3.py
==================
51fa7ec0;Dillon Stadther;2018-09-28 07:43:23 -0400;Remove s3 bucket validation prior to file upload (#2528)
* Remove unnecessary s3 validate bucket checkout prior to content upload

* Add tests for s3 put* when bucket doesn't exist

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
68dfdfca;Hongxin Liang;2018-09-28 09:29:43 +0200;Version 2.7.9

==

setup.py
==================
98943239;Honnix;2018-09-27 22:36:14 +0200;Merge pull request #2536 from spotify/honnix-patch-1
set upper bound of python-daemon
==
==================
7b06c902;Honnix;2018-09-27 22:18:13 +0200;set upper bound of python-daemon
Due to #2494 and #2525, `2.2.0` seems to be a problematic version and the progress of the community is very slow.
==

setup.py
==================
b35e8bc1;Pedro Gonçalves Rossi Rodrigues;2018-09-23 22:17:00 -0300;Update MockTarget mode to accept r* or w* (#2519)
* MockTarget mode fixed to accept read and write like r* or w*

* Update mock_test.py

* mock_test write bytes test fixed for python 3

* default mode added on MockTarget and default mode and none error tests added on MockFileTest

==

luigi/mock.py
test/mock_test.py
==================
31992ff8;Sam Halligan;2018-09-06 16:00:08 +0200;Add ISVWorld to list of Luigi users (#2515)

==

README.rst
==================
718a48ae;Filip Binkiewicz;2018-09-06 15:58:57 +0200;Add a "capture_output" parameter to ExternalProgramTask (#2430)
This allows, among others, for seeing the output of
long-running tasks in the console. The parameter defaults
to True.

A unit test has been added to test/contrib/external_program_test.py,
as well as a few lines in the docstring regarding the attribute
==

luigi/contrib/external_program.py
test/contrib/external_program_test.py
==================
5d99d60e;Nick;2018-09-01 05:14:15 +0300;Fix error: AttributeError: 'Task' object has no attribute 'param_visibilities' (#2509)

==

luigi/scheduler.py
==================
30d97e4c;Dillon Stadther;2018-08-31 21:46:48 -0400;Fix S3Client.copy return value consistency (#2488)
* Fix S3Client.copy to always return a tuple (total_num, total_size)

* Remove unnecessary line break

* Refactor _run_multipart_copy_test into _run_copy_test with optional kwarg

* Add assertions for copy response minimum values

* Add support for exact num/size copy value validation

* Add test for copy_empty_dir

* Remove skipOnTravis from test_copy_empty_dir

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
8de356f5;HyunTruth;2018-09-01 10:42:49 +0900;s3client check for deprecated host keyword and raise error with the details (#2493)
* s3 check for deprecated host keyword and raise error with the details

* changed tests to the same form with `encrypt_key`

* little change to adhere to flask / remove the test which does not accurately asses

==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
38eb6de3;Gram;2018-09-01 04:37:16 +0300;Fix exception when toml lib is not installed (#2506)

==

README.rst
luigi/configuration/core.py
test/config_toml_test.py
==================
94e6632a;Egor Malykh;2018-08-30 14:01:19 +0300;Add Okko to companies that use luigi (#2512)

==

README.rst
==================
151ca04e;Pieter Marsman;2018-08-27 12:40:30 +0200;Added optional choice for hdfs clients  (#2487)
* Added support for choosing hdfs client. Can be one of InsecureClient or KerberosClient

* None as default value for luigi.Parameter gives a warning, so replacing it with an empty string

* Added documentation for the new client_type on the webhdfs config documentation section

* Use ChoiceParameter to catch wrong configuration value for client_type during config check

* Add basic test for return type of WebHdfsClient().client

* Use lower case parameter options, because that seems to be the convention
==

doc/configuration.rst
luigi/contrib/hdfs/webhdfs_client.py
test/contrib/hdfs/webhdfs_client_test.py
==================
0ebf37f2;Hongxin Liang;2018-08-24 15:41:28 +0200;Version 2.7.8

==

setup.py
==================
196f4896;Honnix;2018-08-24 15:40:41 +0200;Merge pull request #2504 from spotify/honnix-patch-1
revert tornado upgrade
==
==================
6c05cfee;Honnix;2018-08-24 14:56:45 +0200;revert tornado upgrade
Since 5.0 tornado requires Python 2.7.9+ and 3.4+.
==

setup.py
==================
be5e13cf;Hongxin Liang;2018-08-24 11:02:34 +0200;Version 2.7.7

==

setup.py
==================
c87644d0;Honnix;2018-08-24 10:04:21 +0200;added a new event 'progress' (#2498)
* added a new event 'progress'

This event can be fired by the task itself while running. The purpose is
for the task to report progress, metadata or any generic info so that
event handler listening for this can keep track of the progress of
running task.

==

luigi/event.py
test/event_callbacks_test.py
==================
79d72c70;Samuel Lampa;2018-08-18 19:55:54 +0200;Add Uppsala University / pharmb.io as user (#2496)

==

README.rst
==================
a344fe56;Dillon Stadther;2018-08-16 02:31:01 -0400;Remove long-deprecated scheduler config variable alternatives (#2491)

==

luigi/scheduler.py
==================
c4eda8cb;Dillon Stadther;2018-08-16 02:30:17 -0400;Bump tornado milestone version (#2490)

==

setup.py
==================
9b610b48;Dillon Stadther;2018-08-16 02:29:21 -0400;Update moto to 1.x milestone version (#2471)

==

test/contrib/s3_test.py
tox.ini
==================
4ab2a909;Nick;2018-08-14 13:57:04 +0300;Use passed password when create a redis connection (#2489)

==

luigi/contrib/redis_store.py
==================
c696f402;Uldis Barbans;2018-08-13 13:37:53 +0200;Merge pull request #2486 from ulzha/ulzha/rpc-log-retries
Make logging of RPC retries configurable
==
==================
f604ce49;jorge jardines;2018-08-13 12:59:40 +0200;S3 client refactor (#2482)
* remove unneeded variable s3_key

* Switch some methods to static in S3Client

* Encapsulate deprecation check in a function

* Remove duplicated method `create_bucket`

* Remove unused mock

* Enhance documentation

* Use keyword arguments and docstring change
==

luigi/contrib/s3.py
test/contrib/s3_test.py
==================
d2d3944c;Uldis Barbans;2018-08-10 19:02:14 +0200;Rename to rpc_log_retries, and make it apply to all the logging involved

==

luigi/rpc.py
test/rpc_test.py
==================
14b154c2;Uldis Barbans;2018-08-10 17:12:37 +0200;Factor log_exceptions into a configuration parameter
This simplifies away unnecessary propagation, cleans up argument lists.

As far as I can tell, log_exceptions is True in all execution paths. It seems that 6dfe9af removed the last occasion of it being (spuriously) set to False.

==

luigi/rpc.py
==================
de4629a4;Marcel R;2018-08-08 15:50:15 +0200;Fix attribute forwarding for tasks with dynamic dependencies (#2478)
* Add test case to check fowarded task attributes.

* Fix attribute forwarding for tasks yielding deps.

* Address review comments on code style and comments.

==

luigi/worker.py
test/task_forwarded_attributes_test.py
==================
c9ed761a;Nick;2018-08-08 08:58:26 +0300;Add a visiblity level for luigi.Parameters (#2278)
See the docs for usage.
==

doc/parameters.rst
luigi/parameter.py
luigi/scheduler.py
luigi/task.py
luigi/worker.py
setup.py
test/db_task_history_test.py
test/scheduler_parameter_visibilities_test.py
test/visible_parameters_test.py
tox.ini
==================
bd55c28d;Stas Glubokiy;2018-08-06 14:02:36 +0300;Add support for multiple requires and inherits arguments (#2475)
Add support for multiple task arguments for requires and inherits decorators


==

luigi/util.py
test/decorator_test.py
==================
0a63cc0a;Charles-André Bouffard;2018-08-02 16:16:33 -0400;Add metadata columns to the RDBMS contrib (#2440)
* Add metadata column feature to Redshift

The goal of this feature is to allow metadata column to exists for
specific tables created by the Redshift contrib related tasks.

Given the scenario where we would always have to have a `created_tz`
column at the end of every tables generated by that contrib we could do
the following:

```python
UpdateTableTask(redshift.S3CopyToTable):

    def metadata_columns(self):
        return [('created_tz', 'TIMESTAMP')]

    def post_queries(self):
        return query = 'UPDATE {0} ' \
                       'SET created_tz = CURRENT_TIMESTAMP ' \
                       'WHERE created_tz IS NULL'.format(self.table)
```

Adding layer of abstraction over this feature, you could easily
add many default behavior for specific tables for versioning the table
and more.

This feature is opt-in by default since we don't want this break other
people's pipeline after integrating this.

* Move the Metadata Columns implementation to the RDBMS

As suggested in the code-review, there are multiple other DBs that could
benefit from this change. Currently, only PSQL and Redshift implements
RDMS but other may implement this class and inherits that new behavior.

* Add tests for the Metadata behaviors

We've been internally using this feature for Redshift but moving this to
the RDBMS contrib and adding this behavior to PSQL could have unexpected
side effects, this takes care of testing if the feature works correctly
under Redshift and PSQL.

* Add additional documentation on how to use the new mixin

* Raise ValueError on invalid metadata_columns for RDBMS

If the count of metadata_columns is 0 and we're expecting to add them to
the table, then we raise an error because that is an invalid flow.

The contributor is required to have metadata_columns values if we want
to add that column to the table.

==

luigi/contrib/postgres.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
test/contrib/postgres_test.py
test/contrib/rdbms_test.py
test/contrib/redshift_test.py
==================
29c97a6d;Stas Glubokiy;2018-07-31 00:37:14 +0300;Fix race condition in luigi.lock.acquire_for (#2357) (#2477)

==

luigi/lock.py
==================
a97a7b7e;Nick;2018-07-31 00:33:07 +0300;tests: Use RunOnceTask where possible (#2476)

==

test/scheduler_visualisation_test.py
==================
7d2c5574;Gram;2018-07-28 21:55:35 +0300;Optional TOML configs support (#2457)
See the added docs for usage.
==

doc/configuration.rst
luigi/configuration/__init__.py
luigi/configuration/base_parser.py
luigi/configuration/cfg_parser.py
luigi/configuration/core.py
luigi/configuration/toml_parser.py
luigi/contrib/s3.py
luigi/parameter.py
setup.py
test/config_toml_test.py
test/testconfig/luigi.toml
test/testconfig/luigi_local.toml
tox.ini
==================
f0fdca73;Greg Roberts;2018-07-26 14:36:59 +0100;Added default port behaviour for Redshift (#2474)
* PostgresTarget default port defined as class variable, so Targets which subclass PostgresTarget (e.g. RedshiftTarget) can define their own default port

==

luigi/contrib/postgres.py
luigi/contrib/redshift.py
==================
f9a99dce;Dillon Stadther;2018-07-25 08:26:02 -0400;Add codeowners file with default and specific example (#2465)

==

.github/CODEOWNERS
==================
4a6c009b;Michał D;2018-07-24 16:25:52 +0200;Add Data Revenue to the `blogged` list (#2472)

==

README.rst
==================
1d5a05e9;Marcel R;2018-07-23 14:13:25 +0200;Fix Scheduler.add_task to overwrite accepts_messages attribute. (#2469)

==

luigi/scheduler.py
==================
459a2600;Marcel R;2018-07-21 14:47:44 +0200;Use task_id comparison in Task.__eq__. (#2462)

==

luigi/task.py
==================
20d7e3f8;Dillon Stadther;2018-07-16 19:53:20 -0400;Add stale config

==

.github/stale.yml
==================
cbe5cf04;Dillon Stadther;2018-07-16 19:46:30 -0400;Move github templates to .github dir

==

.github/ISSUE_TEMPLATE.md
.github/PULL_REQUEST_TEMPLATE.md
==================
d7c66419;Ouanis Seddaoui;2018-07-16 11:57:27 +0100;Fix transfer config import (#2458)
* import TransferConfig instead of full boto3 module

==

luigi/contrib/s3.py
==================
11920033;Mark McDowall;2018-07-12 14:07:08 +0100;Additions to provide support for the Load Sharing Facility (LSF) job scheduler (#2373)
* Beginning work on LSF batching

* Code is all written down right from my head. Now need to test and push and break in earnest

* Flags for output and error files

* More thoughts on a daemon process

* First (as far as I can tell) working LSF submission system

* Reporting unknown status. Also, everything's nice and tested now on chained jobs, and multiple workers

* Now saving directories as parameters doesn't act funny

* Added a local LSF task, for debugging.

* Can now pass extra args to the batch submission

* An inheritance decorator

* Method and practice for instantiating classes that are inherited from

* Removed log

* More tests, and ability to nullify parameters

* Added better naming to common_params, and an assertion and test to boot

* Moved the LSF modules to match the use of the contrib folder. Added some extra bsub params, timing of jobs and some clean up based on pylint

* Removed extra newline

* Improvements based on flake8 feedback

* Import issues with dill and improvements to style

* Fixed error with indentation of docs and error handling

* Unit test for the LSF code

* Spelling correction

* Fixes to get the tests to work

* Added to the unit tests

* Removed unused imports

* Removed unused imports

* Tidied up the track_job function to remove the requirement on awk

* Changes based on the feedback from @dlstadther

* Removed print statement

* Fix for the default value for the job_name_flag

* Tests failed using the OptionalParameter, reverted back to Parameter with a default

* Better handling of testing if jobs failed

* Fixes based on feedback from @lairdm

* Modified the shortening of the file names to the affect just the name and not the whole path

* Testing the previsou shorter naming

* Shortened the naming as was not the issue. Changed the creation of the job output file paths

* Fix to fully use the os.path manipulation for dir location

==

luigi/contrib/lsf.py
luigi/contrib/lsf_runner.py
test/contrib/lsf_test.py
==================
93abed77;Uldis Barbans;2018-07-11 15:33:42 +0200;Version 2.7.6

==

setup.py
==================
b791d575;Natasha;2018-07-11 10:12:48 +0200;Merge pull request #2449 from ulzha/capturer
Allow to inject a context manager around TaskProcess.run
==
==================
ed27ffc7;Uldis Barbans;2018-07-11 09:25:59 +0200;Wording fixes

==

luigi/worker.py
==================
bdfcb6c2;João Sousa;2018-07-10 18:00:53 +0100;ChoiceParameter checks if option is valid within .normalize (#2454)

==

luigi/parameter.py
test/choice_parameter_test.py
==================
d994bca6;Marcel R;2018-07-10 05:00:03 +0900;Allow explicit parsing of BoolParameters (#2427)
See docs for usage.
==

doc/running_luigi.rst
luigi/cmdline_parser.py
luigi/interface.py
luigi/parameter.py
test/parameter_test.py
==================
584ccbbf;Romain Yon;2018-07-09 12:26:04 -0400;Merge pull request #2452 from kayibal/kubernetes-fixes
Kubernetes: Don't set activeDeadlineSeconds by default
==
==================
551df147;Alexander Stolpovsky;2018-07-09 04:44:45 -0700;Remove DEFAULT section from configuration getintdict (#2394)
When casting config values to int, exclude any values from [DEFAULT]
section. This will be the case when reading int values from [resources].
==

luigi/configuration.py
==================
fdf8b597;Charles-André Bouffard;2018-07-09 07:27:03 -0400;Add table constraints support to Redshift (#2435)
While the table keys constraints (UNIQUE, PRIMARY, FOREIGN) aren't
enforced by Redshift, it's still useful to be able to set that data.
Given the situation that there is a monitoring task that manually checks
if the table constraints are respected, it's useful to be able to set
multiple primary keys on a given table.

Based on the syntax of the CREATE commands of Redshift (see link down
below) we think it's useful to add support to it.

https://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_TABLE_NEW.html
==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
dda1478f;Dillon Stadther;2018-07-09 07:23:08 -0400;Reenables true multithreaded s3 copy (#2423)
Boto3 update removed multithreaded file copy in favor of multithreaded multipart file copy.
==

luigi/contrib/s3.py
==================
265ebf80;Alan Höng;2018-07-05 18:21:32 +0200;Don't set activeDeadlineSeconds by default

==

luigi/contrib/kubernetes.py
==================
cee2841f;Uldis Barbans;2018-06-28 09:57:16 +0200;Allow to inject a context manager around TaskProcess.run
The intent with this is to enable collection of logs (stdout and stderr output) per task, as opposed to having to read through the worker's logs where all the task outputs are interspersed.

==

luigi/worker.py
test/worker_task_process_test.py
test/worker_test.py
==================
7d3bf2e0;Federico Allocati;2018-06-26 09:10:51 -0300;Add parallel_scheduling default value description (#2448)

==

doc/configuration.rst
==================
5c9395ac;Chad;2018-06-18 04:05:07 -0700;Minor Docs Edit (#2445)
* Backtick typo fix in auto_namespace method

* Added a few more backticks and edits

==

luigi/task.py
luigi/tools/luigi_grep.py
luigi/tools/range.py
==================
1a4802d4;Will Jones;2018-06-16 13:05:02 -0400;Fix bigquery bulk complete failing (#2441)
* bugfix bigquery bulk complete failing when argument is a generator

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
bda236d0;Marcel R;2018-06-16 18:58:13 +0200;Enable scheduler UI to send messages to tasks (#2426)
Tasks can configure on their own if incoming scheduler messages are accepted using the `accepted_messages` property. See added docs in this commit for usage.
==

doc/configuration.rst
doc/luigi_patterns.rst
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/task.py
luigi/worker.py
test/scheduler_message_test.py
==================
9d629bb7;Charles-André Bouffard;2018-06-07 10:31:01 -0400;Add schema to DB if not exists for Redshift (#2439)
This adds the functionality to allow for the schema to be created if we
find a schema as part of the table name.

Based on the current implementation, code exists to create the table if
it doesn't exists. It's a fair assumption that we would like to have the
same behavior for schemas.

Without this feature, the task could potential crash and throw an error
saying that it cannot create the table under the related schema if a
schema is specified in the table name and that it doesn't exists.
==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
e3d2b4da;Romain Yon;2018-06-06 09:45:17 -0400;Merge pull request #2433 from StasDeep/issue-2432-fix
Use status.get to prevent KeyError in KubernetesJobTask (fixes #2432)
==
==================
c3389ce7;licuiwei;2018-06-04 20:01:07 +0900;Use print(XXX) in documents for better python3 support  (#2438)
* fix print XXX to print(XXX)

==

doc/parameters.rst
doc/running_luigi.rst
==================
6069fce2;thunderock;2018-06-01 16:53:28 +0530;Add get_merge to snake bite (#2410)

==

luigi/contrib/hdfs/snakebite_client.py
test/snakebite_test.py
==================
79bada9f;Stas Deep;2018-05-30 11:40:05 +0300;Use status.get to prevent KeyError in KubernetesJobTask (#2432)

==

luigi/contrib/kubernetes.py
==================
38a1d0c4;Uldis Barbans;2018-05-18 15:03:19 +0200;Clarify "external" in summary
The phrase "external" was erroneosly used even when the text was referring to external and non-external dependencies.

==

examples/execution_summary_example.py
examples/per_task_retry_policy.py
luigi/execution_summary.py
test/execution_summary_test.py
==================
c192bc63;Uldis Barbans;2018-05-18 14:53:56 +0200;Clarify "dependencies" in summary
The phrase "present dependencies" tends to confuse users because they think of the "root" task as "not a dependency". So in an output like this:

===== Luigi Execution Summary =====

Scheduled 1 tasks of which:
* 1 present dependencies were encountered:
   - 1 CaseEntity(when=2018-05-14)

Did not run any tasks
This progress looks :) because there were no failed tasks or missing external dependencies

===== Luigi Execution Summary =====

they are misled into thinking that their task's dependency was present, and that Luigi erroneously didn't run the task itself.

==

examples/execution_summary_example.py
luigi/execution_summary.py
test/execution_summary_test.py
==================
a5c0d6f0;Charles-André Bouffard;2018-05-14 14:34:36 -0400;Add Glossier as part of the companies that use Luigi (#2422)
Let's spread the love!
==

README.rst
==================
6a93001a;Thibaut Mattio;2018-05-08 21:17:10 -0400;Add method to push files using multiprocessing in GCS (#2376)
* Add method to push files using multiprocessing in GCS

* Fix flake8 tests

* Rename methods and variables for code clarity

* Add check for filepaths instance type

* Fix memory leak issue

* Add closing context to the multiprocessing Pool

* Remove map iterator

==

luigi/contrib/gcs.py
test/contrib/gcs_test.py
==================
5f156492;mcarlsen;2018-05-07 23:08:34 +0200;bugfix: Make CmdlineParser available during execution summary (#2415)
Previously you could get an error + stack-trace when luigi is evaluating the exit code.

closes #2411 
==

luigi/retcodes.py
test/cmdline_test.py
==================
772b877c;edson duarte;2018-05-04 17:08:58 -0300;fixed typos and identation (#2413)

==

doc/running_luigi.rst
==================
92987768;Kyle Wilcox;2018-05-02 19:04:28 +0200;Change task result parameter value to TEXT (#2404)
* update task_parameter and set value to TEXT type

fixes #2240

* Update db_task_history.py

* switch on postgres and mysql

* Support more dialets in TEXT migration

==

luigi/db_task_history.py
==================
c76fb2b1;Ouanis Seddaoui;2018-05-01 19:46:42 +0100;S3Client to use Boto3 (#2149)
* AWS_SESSION_Token read from ENV

* add s3client

* s3client using boto3

* removed AWS creds from travis and tox env vars

* importing form contrib.s3 instead of s3 directly

* AWS credentials passed as env vars

* fixed wrong s3 import

* redshift tests passing locally

* test_ecs mocked

* changed all byte instances to strings

* writing to file as bytes

* decoding bytes to strings for python3 tests

* contrib/redshift test reading creds from env vars

* travis build on master

* flake8 redshift_test

* reverted to master redshift_test

* skipping test/redshift_test.py on travis

* flake8 test/redshift_test.py

* skipping test/redshift_test.py on travis

* moved test/redshift_test.py to test/contrib/

* redshift_test using mocked S3Target open

* AWS_SESSION_Token read from ENV

* moved redshift_test to contrib folder and refactored redshiftmanifest tests to mock calls to write

* fixed flake8 errors

* added multipart s3 tests

* add s3client

* removed AWS creds from travis and tox env vars

* importing form contrib.s3 instead of s3 directly

* AWS credentials passed as env vars

* fixed wrong s3 import

* redshift tests passing locally

* test_ecs mocked

* changed all byte instances to strings

* writing to file as bytes

* decoding bytes to strings for python3 tests

* contrib/redshift test reading creds from env vars

* travis build on master

* flake8 redshift_test

* reverted to master redshift_test

* skipping test/redshift_test.py on travis

* flake8 test/redshift_test.py

* skipping test/redshift_test.py on travis

* moved test/redshift_test.py to test/contrib/

* redshift_test using mocked S3Target open

* moved redshift_test to contrib folder and refactored redshiftmanifest tests to mock calls to write

* fixed flake8 errors

* added multipart s3 tests

* travis to trigger builds on master

* skip on travis message made clearer

* add s3client with rebase

* removed arn resolution

* s3client resolving auth alone

* logging boto3 resource call

* fixed as per PR's comments

* fix as per PR comments

* removed blank line for flake8

* removed unused OptionParameter

* add deprecated error to s3.resource

* fixed flake8

* batch tests skip on travis

* fix flake8 errors

* rebase with master

* update listdir docstring

* skip multipart test on travis

* further multipart tests to skip on travis

==

.travis.yml
luigi/contrib/s3.py
test/contrib/batch_test.py
test/contrib/ecs_test.py
test/contrib/redshift_test.py
test/contrib/s3_test.py
test/redshift_test.py
tox.ini
==================
498d015e;Honnix;2018-04-24 19:44:49 +0200;Merge pull request #2406 from spotify/log-non-error-exception-as-warning
this feels more like a warning than error
==
==================
bc69fc0e;Hongxin Liang;2018-04-24 19:22:12 +0200;this feels more like a warning than error
Since this happens during retrying, a warning seems to be more suitable.

==

luigi/rpc.py
==================
1b2f0fd8;Kevin Wang;2018-04-17 11:55:06 -0700;Add configuration to enable/disable the pause button (#2399)

==

doc/configuration.rst
luigi/scheduler.py
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_test.py
==================
4af1d223;Marcel R;2018-04-14 18:38:52 +0200;Add force_multiprocessing config to worker plus test and docs. (#2401)
At the moment, luigi uses multiprocessing for tasks only when the number of requested workers is > 1. In some situations, it might be helpful if this was also the case for exactly 1 worker (e.g. when the executed code does something nasty with the main process, TensorFlow in our case). I added a worker config force_multiprocessing which, when True, forces multiprocessing to be used independent of the number of workers. I also added a few lines to the docs.
==

doc/configuration.rst
luigi/worker.py
test/worker_multiprocess_test.py
==================
cb3bdf3e;Marcel R;2018-04-14 18:35:56 +0200;Remove unnecessary method in ConcurrentRunningResourcesTest. (#2400)

==

test/task_running_resources_test.py
==================
00a5e458;Mikaela Grundin;2018-04-12 11:54:45 +0200;Updated to version 2.7.5 (#2395)

==

setup.py
==================
69507982;Honnix;2018-04-11 20:33:55 +0200;Fix xss vulnerability from usage of append (#2391)
http://api.jquery.com/append/ points out that `append` can introduce
cross-site-scripting (XSS) vulnerabilities.

In this particular case, we have identified an XSS issue as following:

Spin up a Luigi instance and navigate to /static/visualiser/index.html#tab=graph&visType=svg&taskId=%3Cscript%3Ealert(1)%3C%2Fscript%3E.
You should see an alert box pop up displaying 1.

Use `text` instead of `append` should fix it.
==

luigi/static/visualiser/js/visualiserApp.js
==================
0d7083b6;Mikaela Grundin;2018-04-11 10:16:04 +0200;Version 2.7.4

==

setup.py
==================
d5f79245;ptype;2018-04-10 14:48:18 +0100;Add new company user (#2388)

==

README.rst
==================
87805d25;Darío Hereñú;2018-04-10 08:03:59 -0300;Fix typo in luigi documentation (#2387)
Typo in running luigi documentation
==

doc/running_luigi.rst
==================
0d87424e;hirolau;2018-04-08 14:16:53 +0200;Removed message 'No Instance(s) Available.' in Windows when starting … (#2294)

==

luigi/lock.py
test/lock_test.py
==================
65dc89c8;Marcel R;2018-04-08 14:08:57 +0200;Allow release of resources during task running. (#2346)
We also re-factored away the hardcoded unpicklable_properties in the Task class
==

doc/luigi_patterns.rst
luigi/scheduler.py
luigi/static/visualiser/js/visualiserApp.js
luigi/task.py
luigi/worker.py
test/scheduler_api_test.py
test/task_running_resources_test.py
==================
670e00e8;Honnix;2018-04-05 14:24:50 +0200;Merge pull request #2384 from spotify/honnix-patch-1
Add google-auth-httplib2 as dependency
==
==================
60e21718;Honnix;2018-04-04 22:12:38 +0200;Add google-auth-httplib2 as dependency
As discussed here https://github.com/spotify/luigi/pull/2361#issuecomment-378661375

This is used by https://github.com/google/google-api-python-client/blob/v1.6.6/googleapiclient/discovery.py#L371

Another option is to fix `luigi.contrib.bigquery` somehow.
==

tox.ini
==================
3cf763dc;Andrew Martin;2018-03-15 14:05:56 -0400;kubernetes: Add parameterized backoff limit (#2375)

==

luigi/contrib/kubernetes.py
test/contrib/kubernetes_test.py
==================
14eea1bc;Arash Rouhani;2018-03-14 23:25:23 +0100;codecov: Don't expect coverage in kubrenetes.py
Also see spotify/luigi#2375
==

codecov.yml
==================
b583a5be;Daniel Palma;2018-03-14 13:32:28 +0100;Pass kwargs to `discovery.build()` when instantiating `GSCClient`. (#2291)

==

luigi/contrib/gcs.py
==================
9735b5aa;Arash Rouhani;2018-03-13 22:35:31 +0100;codecov: Don't run coverage on unreasonable files
This should make less PRs red, like when it's hard to get coverage.
==

codecov.yml
==================
7c6b9737;Honnix;2018-03-13 16:42:01 +0100;Merge pull request #2374 from spotify/v2.7.3
Version 2.7.3
==
==================
ded287ea;Hongxin Liang;2018-03-13 16:22:26 +0100;Version 2.7.3

==

setup.py
==================
90c1951b;Arash Rouhani;2018-03-12 21:33:58 +0100;Only run code coverage cheks for core luigi
I often find that in PRs, codecoverage says that coverage has degraded. Many of the times it's unreliable and also I think we don't need to be so strict for the whole code base. With this change, we'll only check for core (which I hope have no intermittent-ency). 

The number 92.5% is the current coverage according to my calculation. I think it's good to not go below that.
==

codecov.yml
==================
a5f95fe2;Thibaut Mattio;2018-03-05 07:56:07 -0500;Replace oauth2client by google-auth (#2361)
* Replace deprecated oauth2client with google-auth

* Replace oauth2client by google.auth in other packages

* Disable cache discovery to reduce log

==

luigi/contrib/bigquery.py
luigi/contrib/dataproc.py
luigi/contrib/gcp.py
luigi/contrib/gcs.py
test/contrib/bigquery_gcloud_test.py
test/contrib/dataproc_test.py
test/contrib/gcs_test.py
tox.ini
==================
78cbd199;Scott Switzer;2018-03-01 14:50:20 -0500;Add data files to .gitignore (#2367)

==

.gitignore
==================
037eb71b;Nick;2018-02-27 00:08:16 +0300;Document ways for starting Luigi inside Python code (#2301)
1. Rename command_line file to running_luigi
2. Add description how to start luigi tasks using luigi.build function from luigi.interface module

==

doc/command_line.rst
doc/index.rst
doc/running_luigi.rst
==================
c8f4497e;Nikita Ofitserov;2018-02-24 17:36:19 +0300;Fix a warning in googleapiclient usage (#2306)
The constructor of `googleapiclient.http.MediaFileUpload` is marked with `@positional(2)`, which means it only accepts 2 positional arguments (`self` and `filename`). This change should get rid of mysterious `__init__() takes at most 2 positional arguments (3 given)` message in the task output.
==

luigi/contrib/gcs.py
==================
1fa93bab;Romain Yon;2018-02-21 19:31:27 -0500;Merge pull request #2335 from spotify/romain/fix-contrib-kubernetes
Various improvements for luigi.contrib.kubernetes
==
==================
42b5207b;Romain Yon;2018-02-16 15:23:21 -0500;improve PR based on comments

==

luigi/contrib/kubernetes.py
==================
38ba0637;Romain Yon;2018-01-24 13:44:14 -0500;parameterize active_deadline_seconds

==

luigi/contrib/kubernetes.py
==================
76f89669;Romain Yon;2018-01-23 18:52:20 -0500;don't fail on ContainerCreating

==

luigi/contrib/kubernetes.py
==================
e27b9fb4;Romain Yon;2018-01-22 16:45:44 -0500;handle ErrImagePull and add activeDeadlineSeconds

==

luigi/contrib/kubernetes.py
==================
eb1ee842;Romain Yon;2018-01-22 14:30:46 -0500;detect pod start failure and return error

==

luigi/contrib/kubernetes.py
==================
a11b087f;Romain Yon;2018-01-22 11:53:57 -0500;update based on PR comments

==

luigi/contrib/kubernetes.py
==================
6dd33810;Romain Yon;2018-01-19 18:16:01 -0500;add instructions to stream pod logs

==

luigi/contrib/kubernetes.py
==================
da1330af;Romain Yon;2018-01-19 18:07:33 -0500;print pod logs on exit

==

luigi/contrib/kubernetes.py
==================
bd730393;Romain Yon;2018-01-19 17:42:36 -0500;handle ContainersNotReady situation

==

luigi/contrib/kubernetes.py
==================
c9d9da20;Romain Yon;2018-01-19 16:09:06 -0500;delete pods and jobs on success

==

luigi/contrib/kubernetes.py
==================
8c58ce42;Romain Yon;2018-01-19 14:41:33 -0500;check that pods start successfully. fix #2334

==

luigi/contrib/kubernetes.py
==================
aa783fd4;Romain Yon;2018-02-19 13:47:45 -0500;Merge pull request #2356 from spotify/romain/fix-build
fix contrib.docker_runner exit code check #2355
==
==================
318b0e63;Romain Yon;2018-02-19 11:50:04 -0500;fix contrib.docker_runner exit code check #2355

==

luigi/contrib/docker_runner.py
==================
8501e5db;Daniel Mohns;2018-02-16 20:45:10 +0100;Allow NoneType columns in Redshift COPY job (#2303)
* Allow NoneType columns in Redshift COPY job

- Fixes #2298

* Add column types tests for Redshift COPY job

* Remove redundancy from Redshift test

- Valid columns are already provided in the base test class.

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
ffa51b50;Jake Feala;2018-02-16 11:42:14 -0800;Support for AWS Batch (#2321)
* AWS Batch client and Task

* Clean up style for flake8

* Make poll time configurable

* Make job_name OptionalParameter

* Docstrings to sphinx style

* Added unit tests

* Bugfix after unit tests

* Fix indents for flake8

* Skip tests if boto3 not installed

==

luigi/contrib/batch.py
test/contrib/batch_test.py
==================
e0b4b3fd;James McMurray;2018-02-16 19:39:47 +0000;Add possibility to specify Redshift column compression. (#2343)
* Add possibility to specify column encodings for columns via additional element in tuple.

* Added test case

* Fix syntax issues

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
636a0203;Nathan;2018-02-15 13:43:51 -0800;More verbose exceptions for mistyped depenencies (#2353)

==

luigi/worker.py
==================
7cbf2d3a;Marcel R;2018-01-31 18:59:12 +0100;Show status message button in worker tab when only progress is set. (#2344)

==

luigi/static/visualiser/index.html
==================
398eab87;Piotr Kaleta;2018-01-30 21:43:10 +0100;Fix unicode formatting. (#2339)
* Add test.

* Fix formatting.

==

luigi/scheduler.py
test/scheduler_test.py
==================
b5a24da9;Fabrizio Demaria;2018-01-24 12:47:18 +0100;Merge pull request #2338 from spotify/update-version-1
Update to 2.7.2
==
==================
7640bc13;Mikaela Grundin;2018-01-24 12:34:24 +0100;Update to 2.7.2

==

setup.py
==================
bd10d39a;Arash Rouhani;2018-01-16 20:34:33 +0100;Merge pull request #2323 from sd2k/master
Fix Python 3 TypeError in contrib.hive.HiveTableTarget.exists()
==
==================
a979e45c;Subhash Chandra;2017-12-21 19:15:12 +0530;Check task equality using param_kwargs instead of param_args

==

luigi/task.py
==================
08224e26;Subhash Chandra;2017-12-21 19:10:38 +0530;Replaced param_args with dynamic property with deprecation message

==

luigi/task.py
==================
8fd25256;Ben Sully;2018-01-04 16:50:12 +0000;Fix Python 3 TypeError in contrib.hive.HiveTableTarget.exists()
Closes #1012

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
da12e035;Flávio Roberto Santos;2017-12-27 16:15:36 +0100;Add LINX+Neemu+Chaordic to the list of Luigi companies (#2320)
Hi,

We are proud to say that LINX+Neemu+Chaordic is using Luigi in production to run internal workflows. Basically, main tasks are dumping data from Cassandra, uploading data to S3, and updating information about Hive partitions.

Btw, we have an open source Chef cookbook to set up Luigi in production: https://github.com/chaordic/chef-luigi/

Thank you very much.
==

README.rst
==================
4c74d6cb;Ilya Konon;2017-12-18 18:51:12 +0300;Add Stacktome to companies who use Luigi (#2313)

==

README.rst
==================
1fbec18c;David S;2017-12-13 20:39:52 +0100; Fix MRO on tasks using util.requires (#2307)
* Add a util test to check if requires has effect on MRO (#2054)

* Add same util tests from requires for inherits decorator

* Document luigi.util.inherits decorator

* For inherits and requires decorator do monkey patching (#2054)

Instead of subclassing the task monkey patch the methods clone_parent
and requires, to avoid a MRO with the task having itself as parent
class.

Fixes #2054

==

luigi/util.py
test/util_test.py
==================
45b5711d;Nick;2017-12-13 22:38:20 +0300;vizualiser: Format js code (#2309)
Added some semicolons + spaces
==

luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/templates/history.html
==================
de415bba;Nick;2017-12-13 00:51:55 +0300;update_status -> update_status_message (#2292)

==

luigi/worker.py
==================
ffa6d365;Dmitry Dygalo;2017-12-12 22:51:42 +0100;Replace `set` calls with literals (#2293)

==

luigi/contrib/bigquery.py
luigi/contrib/mongodb.py
luigi/execution_summary.py
luigi/scheduler.py
luigi/tools/deps.py
luigi/tools/range.py
luigi/worker.py
test/contrib/sqla_test.py
test/date_interval_test.py
test/event_callbacks_test.py
test/local_target_test.py
test/scheduler_api_test.py
test/scheduler_test.py
test/task_bulk_complete_test.py
==================
d4c539be;Steven Sklar;2017-12-12 16:47:25 -0500;Fixes dangerous default parameter values to make them immutable (#2302)

==

luigi/contrib/bigquery.py
luigi/contrib/dataproc.py
luigi/contrib/esindex.py
luigi/contrib/opener.py
luigi/contrib/sqla.py
luigi/scheduler.py
==================
4133f273;Dave Buchfuhrer;2017-12-11 11:58:26 -0800;Optional parameter (#2295)
* Add an OptionalParameter parameter class

This allows a parameter to be a string or None. None is serialized as
an empty string, and empty strings parse as None. This is useful for
luigi.Config classes where we want a None value for some parameters
and don't want warnings about the type being wrong.

* Use OptionalParameter when default is None

This will reduce warnings in the scheduler. It should be safe unless
there are cases where the empty string needs to be distinguished from
None. That doesn't seem to be the case anywhere here.

==

luigi/__init__.py
luigi/contrib/ecs.py
luigi/contrib/hadoop.py
luigi/contrib/hdfs/config.py
luigi/contrib/s3.py
luigi/parameter.py
luigi/tools/deps.py
test/parameter_test.py
==================
dddf6983;Jason Horman;2017-12-09 16:40:19 -0500;Handle multiprocessing with request sessions (#2290)
When luigi forks with --workers it uses the same requests Session object leading to bugs.
==

luigi/rpc.py
test/rpc_test.py
==================
3a1a32d6;Subhash Chandra;2017-12-10 02:47:07 +0530;Added show-error button to disabled tasks in visualizer (#2266)

==

luigi/static/visualiser/index.html
==================
31491950;Lizzie Ellis;2017-12-05 21:08:38 -0500;dynamic demo fix (#2300)

==

examples/dynamic_requirements.py
==================
57bf97e9;Uldis Barbans;2017-11-23 08:36:09 +0100;Merge pull request #2269 from idreeskhan/idrees/bq-avro-cleanup
Remove Avro Schema description copying from bigquery_avro
==
==================
824e8d4e;Idrees Khan;2017-11-22 10:37:53 -0500;Fix Flake8 errors

==

luigi/contrib/bigquery_avro.py
test/contrib/bigquery_gcloud_test.py
==================
6c1fecdc;Idrees Khan;2017-11-21 11:23:42 -0500;Re-add loading the avro schema and copying the schema doc to bq table desc

==

luigi/contrib/bigquery_avro.py
test/contrib/bigquery_gcloud_test.py
==================
853f986f;Idrees Khan;2017-11-20 09:56:45 -0500;Merge branch 'master' of https://github.com/spotify/luigi into idrees/bq-avro-cleanup

==
==================
8ae5b659;Subhash Chandra;2017-11-18 01:57:25 +0530;Small refactor to make intent clearer (#2255)

==

luigi/scheduler.py
luigi/worker.py
==================
07775235;Michael;2017-11-16 07:45:30 -0500;Convert dates to datetimes for DateHourParameter (#2285)

==

luigi/parameter.py
test/date_parameter_test.py
==================
7c7addbb;Daniel Palma;2017-11-14 14:58:36 +0100;Add Synetiq to `Who uses Luigi?`. (#2287)
We have been using Luigi for our main data pipeline for more than 3 years now, I think we fit on the list!
==

README.rst
==================
842ab3fe;Dave Buchfuhrer;2017-11-12 06:17:36 -0800;Hide re-enable and forgive buttons on success (#2281)
After clicking re-enable, the whole page refreshes. After clicking
forgive failures, nothing happens. Both of these responses are a bit
extreme. To find a happier medium, this updates both buttons to simply
disappear after the response is received from the server. This makes it
easier to do multiple disables and allows for more confidence in
forgiving failures.

This also adds the ability to hold alt with the re-enable to get an
update like with forgive failures.
==

luigi/static/visualiser/js/visualiserApp.js
==================
803c42a2;Matt Braymer-Hayes;2017-11-07 11:14:19 -0800;#2279 Add Python 3.6 to list of supported Python versions. (#2280)

==

README.rst
==================
1787d827;Steven Sklar;2017-11-04 15:29:34 -0400;Cleans up dangerous function default variables ([] and {}) (#2275)

==

luigi/contrib/bigquery.py
luigi/contrib/dataproc.py
luigi/contrib/esindex.py
luigi/contrib/opener.py
luigi/contrib/sqla.py
luigi/scheduler.py
==================
7580754c;Dave Buchfuhrer;2017-11-04 11:42:13 -0700;Preserve filter on server on reload (#2273)
processHashChange only gets called after updateTasks, so filter on
the checkbox only gets checked after we make the server request without
filtering. This results in a checked box but no server-side filtering.
==

luigi/static/visualiser/js/visualiserApp.js
==================
56fbbcb9;Dillon Stadther;2017-11-04 14:27:40 -0400;Fix new flake8 tests (#2274)
* Ignore new flake8 tests

These new exclusions include:
* E722 - bare except
* E741 - ambiguous variable name
* E742 - ambiguous class definition

* Update flake8 calls for corrected exclusions

* Revert flake8 test exclusions

* Fix instance of E742 violation

* Fix instance of E741 violation

* Replace bare except with BaseException

* Replace bare except with AttributeError

* Remove unnecessary try/except

==

luigi/contrib/docker_runner.py
luigi/contrib/hadoop.py
luigi/contrib/redshift.py
luigi/contrib/s3.py
luigi/db_task_history.py
luigi/worker.py
test/contrib/hdfs_test.py
test/decorator_test.py
test/parameter_test.py
test/simulate_test.py
==================
1e6ad23c;Idrees Khan;2017-10-26 11:25:58 -0400;Rename ambiguous class/params for flake8

==

test/decorator_test.py
test/parameter_test.py
==================
64170abe;Idrees Khan;2017-10-25 15:11:23 -0400;Fix bare except clause

==

luigi/worker.py
==================
252f7afe;Idrees Khan;2017-10-25 14:43:50 -0400;Except all Exceptions for flake8

==

luigi/contrib/docker_runner.py
luigi/contrib/hadoop.py
luigi/contrib/redshift.py
luigi/contrib/s3.py
luigi/db_task_history.py
test/contrib/hdfs_test.py
test/simulate_test.py
==================
7720035e;Idrees Khan;2017-10-25 14:23:25 -0400;Cleanup irrelevant comment, remove unused imports

==

luigi/contrib/bigquery_avro.py
==================
00f84a54;Idrees Khan;2017-10-25 12:50:48 -0400;Remove Avro description copying for BigQuery

==

luigi/contrib/bigquery_avro.py
==================
103136d0;Dave Buchfuhrer;2017-10-24 04:23:57 -0700;Speed up task_list when beyond limit (#2239)
When the number of tasks get into the millions, even refreshing the
visualizer can take a minute or more, causing havoc in the pipeline.
Since all we really want in these situations is the counts, we can skip
the more expensive bits of computation and just return the sizes. This
prevents doing upstream checks, but saves a lot of time.

We may want to institute a higher threshold so we can get upstream
numbers if you're only a little above the limit for returning all
tasks.
==

luigi/scheduler.py
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_api_test.py
==================
dab24e94;Martin Czygan;2017-10-18 15:08:49 +0200;Add Leipzig University Library as user (#2262)

==

README.rst
==================
4801fecc;Andrea Pierleoni;2017-10-15 14:39:44 +0100;Support for the Docker Python SDK (#2158)
* added stub for minimal docker wrapper

* don't set a name by default

* handle None name

* changed to use the docker low level api

* removed debugging print

* refractored names

* added a test for single file mount

* merged with tempdir support and image download

* directory and file mounting working

* fixed tests and using busybox when needed

* always use busybox

* fallback if exception has no message

* lowered pull image to debug level

* do not declare volumes unless they are passed as extra params

* remove name requirement from tmpdir

* tag must be specified to get the right number of images back from the low-level API

* test to trigger duplicate mount pt issue

* fix pid lock in tests

* use a wrapper task in test

* created an _init_ method to avoid the mutable volumes list to be shared amongst all tasks. also some linting

* need args on the init to allow parameters

* solves pid lock

* remove bad logging lines

* fix handling of multiple volumes

* must be passing kwargs when using super!

* add elipapa as additional author

* add a blog post about open targets use and this PR contribution

* skip tests if no docker daemon is present

* literal should become a bytes literal in Py3

* do not mount tmp dir by default and remove unused import

* don't remove tmp directory if it was not created

* volume and binds should both be there

* use host_config's auto_Remove functionality

* docker API v>1.25 required for auto_remove

* extended module docs with contribution use case

* added version to docker dependency

* mount tmp dir by default, and rename volumes to binds

* enable docker service in travis ci to allow DockerTask tests to run

* fix boto problem in tests
==

.travis.yml
README.rst
luigi/contrib/docker_runner.py
test/contrib/docker_runner_test.py
tox.ini
==================
791abf3f;Jiayu Liu;2017-10-15 00:26:40 +0800;fix typo suceeded -> succeeded (#2258)

==

luigi/execution_summary.py
test/execution_summary_test.py
test/worker_keep_alive_test.py
==================
ca2b834a;Subhash Chandra;2017-10-14 21:52:34 +0530;changed the logging status of prune messages to debug (#2254)

==

luigi/scheduler.py
==================
701240ba;Nehal J Wani;2017-10-14 21:48:25 +0530;Remove invalid entrypoint: luigi.tools.migrate (#2257)
Fixes https://github.com/spotify/luigi/issues/2256

File was made obsolete by: 66ff3c5f8259f62f4540097629b7600834bb5b29
==

setup.py
==================
9ca89fa2;Darío Hereñú;2017-10-10 08:15:05 -0300;Minor fix (for the sake of understanding) (#2250)

==

README.rst
==================
e5daad41;Lucas Cimon;2017-10-10 13:12:08 +0200;Adding voyages-sncf.com as a company using luigi (#2251)

==

README.rst
==================
4fb857a0;Dillon Stadther;2017-10-05 07:39:15 -0400;Version 2.7.1

==

setup.py
==================
e99be2f9;Evan Welch;2017-10-04 03:54:32 -0700;Improve sentence structure in configuration.rst (#2248)

==

doc/configuration.rst
==================
9cbf1882;James McMurray;2017-10-03 15:06:41 +0200;Use columns defined for COPY to Redshift so we never rely on order (#2245)
* Use columns defined for COPY to Redshift so we never rely on order
==

luigi/contrib/redshift.py
==================
68d75990;Pilia Valeriya;2017-10-01 22:32:14 +0300;docs: Fix hypen vs underscore inconsistencies (#2160)

==

doc/configuration.rst
==================
f6206ee9;adaitche;2017-10-01 21:26:28 +0200;Add HA functionality to WebHdfsClient (#2230)
Since version 2.1.0, the hdfs package allows to specify multiple
namenodes (HA functionality), by passing an url containing multiple
namenodes separated by ';'. This functionality is forwarded through to
WebHdfsClient in this commit.
==

luigi/contrib/hdfs/webhdfs_client.py
==================
14517c1e;James McMurray;2017-09-27 18:46:47 +0200;Adding autocommit property for Redshift queries for Vacuums, etc. (#2242)
* Add autocommit property to RDBMS, Postgres, and Redshift Query classes, so we can run VACUUMs in Redshift
==

luigi/contrib/postgres.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
1bf86d2f;Gabriel Medina-Kim;2017-09-22 04:52:58 -0700;Fixed a typo in docstring (#2236)
fixed typo in 'BigQueryExtractTask'
==

luigi/contrib/bigquery.py
==================
4bc00ca8;Daniel Mohns;2017-09-20 13:10:16 +0200;Add ExtractTask to luigi.contrib.BigQuery module (#2134)
* Add BigQuery ExtractTask

- Fill job configuration according to https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs for extract jobs.
- Add assertitions for the jobs to be sane.
- Add basic unittest for extracts
- Add Integration test with basic configuration

* Support non-CSV BigQuery extracts

- non-CSV extracts are incompatible with FieldDelimiter and PrintHeader. These job configuration attributes can therefore only be set conditionally.
- Added tests for non-CSV extracts

==

luigi/contrib/bigquery.py
test/contrib/bigquery_gcloud_test.py
test/contrib/bigquery_test.py
==================
6ab5ceb8;Arash Rouhani;2017-09-19 20:06:34 +0200;Issue template: Mention it isn't for questions (#2143)
Recently there have been many issues opened with user questions. And they sometimes can add to the maintainer burden.
==

ISSUE_TEMPLATE.md
==================
28c8a97f;adaitche;2017-09-19 14:50:06 +0200;Silence Parameter type warning for WebHdfsClient (#2231)
In the webhdfs configuration, the parameter `user` has the default value
None, which triggers the annoying warning 'parameter.py:259:
UserWarning: Parameter None is not of type string.' everytime a
WebHdfsClient is created. This commit prevents this by setting the
default value to ''.
==

luigi/contrib/hdfs/webhdfs_client.py
==================
a45d0f31;hvanhove;2017-09-19 14:48:07 +0200;Added cluster support for ECS and corrected status debug message (#2045)
* Added cluster support for ECS and corrected status debug message

* Updated cluster parameter documentation

* modified cluster default value to explicitly 'default'
==

luigi/contrib/ecs.py
==================
275f80c0;Shiori Hironaka;2017-09-19 21:44:13 +0900;Fix os.makedirs issue in multithreading (#2039) (#2093)
* Fix os.makedirs issue in multithreading (#2039)

* Remove unnecessary attribute checking

FileExistsError has the errno attribute.

* Reduce complexity

==

luigi/local_target.py
==================
25424d71;dstandish;2017-09-19 05:37:24 -0700;Accept kwargs for mysql connection (#2226)

==

luigi/contrib/mysqldb.py
==================
00c69470;Christian Pérez-Llamas;2017-09-19 14:35:57 +0200;Added support to specify the number of processes for parallel scheduling (#2205)
* Added support to specify the number of processes for parallel scheduling.

* Changed cmdline_test.test_cmdline_logger to return None for ints instead of 0

* Changed cmdline_test.test_cmdline_logger to provide a default value for parallel_scheduling_processes

* Default value for 'parallel_scheduling_processes' is 0 instead of None.

==

doc/configuration.rst
luigi/interface.py
luigi/worker.py
test/cmdline_test.py
test/interface_test.py
test/worker_parallel_scheduling_test.py
==================
cff9d340;adaitche;2017-09-19 12:57:16 +0200;Prevent module shadowing in pyspark_runner.py (#2232)
PySparkTask uses spark-submit to run the script pyspark_runner.py.
Because it is run as a script the modules and packages from its
directory (luigi/contrib/) shadow the global modules. In particular the
package `hdfs` which is used by webhdfs_client.py is shadowed by the
`luigi.contrib.hdfs` package. Thus PySparkTask does not work together
with webhdfs.

The problem is resolved by putting the current directory at the end of
the path list `sys.path`.
==

luigi/contrib/pyspark_runner.py
==================
ce881b2a;Dillon Stadther;2017-09-12 13:58:02 -0400;Fix ListParameter Hashability (#2227)
* Ensure lists of dictionaries can serialized and parsed as ListParameters

* Add test for hashability of list of dictionaries ListParameter

* Add support for tuples of dictionaries

* Add test for tuple of dictionaries serialization

* Add test for nested lists and tuples

* Update TupleParameter to inherit from ListParameter

==

luigi/parameter.py
test/parameter_test.py
==================
d9667b7c;ksenia;2017-09-12 14:48:49 +0300;hivevar option in hive task (#2185)

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
1795eb19;kritchie;2017-09-11 04:09:47 -0700;MongoDB contrib : Next replaced with for loop to avoid propagation of StopIteration (#2221)
* Replaced current logic to avoid return a StopIteration for the document count

==

luigi/contrib/mongodb.py
==================
65a62936;Angeline;2017-09-08 13:24:09 +0100;Fix "IF NOT EXISTS" Postgres 8 incompatibility (#2228)
Reverts PR #2064 to allow Postgres 8 compatibility. Companies may (and do) use Postgres 8 as a dev environment for their production Redshift cluster (as Redshift if based on Postgres 8.0.2).
==

luigi/contrib/postgres.py
==================
50838d0a;Uldis Barbans;2017-09-05 16:01:28 +0200;Merge pull request #2224 from Mandalorian007/master
Update to handle complex avro types for Avro Schema Definition copying to Big Query Schema Definitions
==
==================
d0bbe811;Matthew Fontana;2017-08-31 12:36:57 -0400;flake8 formatting fixes

==

test/contrib/bigquery_gcloud_test.py
==================
741e1424;Matthew Fontana;2017-08-31 12:32:17 -0400;flake8 formatting fixes

==

luigi/contrib/bigquery_avro.py
test/contrib/bigquery_gcloud_test.py
==================
90b300a7;Matthew Fontana;2017-08-31 09:47:19 -0400;updated testing suite to match the more complex schema doc loader

==

test/contrib/bigquery_gcloud_test.py
==================
a13c990d;Matthew Fontana;2017-08-31 09:47:03 -0400;updated testing suite to match the more complex schema doc loader

==

test/contrib/bigquery_gcloud_test.py
==================
c997972d;Matthew Fontana;2017-08-30 09:24:14 -0400;Cleaned up comments.  Refactored to have explicit primitive support and primitives inside of unions support.  Updated Job description comments and removed unnecessary logging.

==

luigi/contrib/bigquery_avro.py
==================
03c596ac;Frank Portman;2017-08-30 02:15:00 -0700;Fix typo in docstring (#2225)
Typo in `BulkCompleteNotImplementedError`
==

luigi/task.py
==================
4c29f54b;Matthew Fontana;2017-08-29 12:55:32 -0400;Update to handle complex avro types for Avro Schema Definition copying to Big Query Schema descriptions

==

luigi/contrib/bigquery_avro.py
==================
b47b2679;Zachary Salzbank;2017-08-28 13:49:40 -0400;Standardize Redshift credential usage (#2068)
* Standardize Redshift credential usage

Obtaining the credentials for a redshift connection is now uniform
across all of the redshift tasks. This has the added benefit of
allowing role-based credentials in all of the tasks as well.
==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
102211c9;Dan Connolly;2017-08-28 10:31:02 -0500;README: avoid _here_ links; ack readthedocs (#2222)
> Screen reader users often navigate from link to link, skipping the text in between
>
> Implication 1: Links should make sense out of context. Phrases such as "click here," "more," "click for details," and so on are ambiguous when read out of context. -- http://webaim.org/techniques/hypertext/

https://www.w3.org/TR/WCAG10-HTML-TECHS/#link-text
==

README.rst
==================
f373e057;Evan Welch;2017-08-27 06:16:58 -0700;Update the docstring of S3FlagTarget (#2192)

==

luigi/contrib/s3.py
==================
6027efef;Arash Rouhani;2017-08-25 15:18:51 +0200;Version 2.7.0

==

setup.py
==================
89e7287f;Kyle Sun;2017-08-25 05:39:05 -0700;Allow spark to load config from different version (#2196)

==

luigi/contrib/spark.py
==================
6e084b5c;Quentin Brosse;2017-08-25 14:37:28 +0200;Rework the logic and the tests of the graph visualization type checkboxes. (#2193)

==

luigi/static/visualiser/js/visualiserApp.js
test/visualiser/visualiser_test.py
==================
bb6ecccb;Ben Sully;2017-08-25 13:36:40 +0100;Add 'schema' attribute to CopyToTable and use for target table (#2176)
When using an RDBMS that supports schemas, this allows target tables to
exist in a non-default schema, specified using the 'schema' attribute of
the task class.

Closes #1984.
==

luigi/contrib/sqla.py
==================
5b80f543;Fabien Vinas;2017-08-25 14:33:56 +0200;Progress bar in luigi visualizer (#2108)

==

doc/tasks.rst
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/task.py
luigi/worker.py
test/scheduler_api_test.py
test/task_progress_percentage_test.py
==================
e5a29568;Dave Buchfuhrer;2017-08-25 05:18:27 -0700;Set utf-8 encoding in the MIMEText constructor (#2210)
* Set utf-8 encoding in the MIMEText constructor

If this is not set during the constructor, an exception is thrown in
Python 2 when the e-mail body contains unicode.

* Parse e-mail in WorkerEmailTest

With base64 encoding, the e-mail tests fail trying to validate subject
and body contents. Using email.parser allows us to safely decode
whatever encoding is used and verify the subject and body separately,
resulting in slightly better validation as well.

==

luigi/notifications.py
test/notifications_test.py
test/worker_test.py
==================
781613e3;Arash Rouhani;2017-08-25 14:13:44 +0200;breaking: Remove deprecated contrib redirections (#2181)
After this commit the following imports will no longer work

    import luigi.s3
    import luigi.postgres

Instead use

    import luigi.contrib.{s3,postgres}

This is a continution on spotify/luigi#1997
==

doc/workflows.rst
examples/pyspark_wc.py
examples/top_artists.py
luigi/contrib/opener.py
luigi/contrib/redshift.py
luigi/contrib/s3.py
luigi/postgres.py
luigi/s3.py
luigi/tools/deps.py
test/contrib/opener_test.py
test/contrib/postgres_test.py
test/contrib/postgres_with_server_test.py
test/contrib/s3_test.py
test/redshift_test.py
==================
14fdf156;Charles-André Bouffard;2017-08-25 07:18:22 -0400;Remove assert that verifies if tables were marked (#2199)
A summary of this would be that having multiple workers and multiple
insert/select on the same table causes a lot of issues. Please refer
yourself to the issue below to have a better understanding.

fixes https://github.com/spotify/luigi/issues/1905
==

luigi/contrib/postgres.py
==================
bb9c8f94;Mihail Russu;2017-08-24 18:49:13 +0300;[docs] consistency fix for the month value (#2217)

==

doc/parameters.rst
==================
876fe69d;Dave Buchfuhrer;2017-08-13 01:44:11 -0700;Clear tasks on disabled workers (#2208)
After a worker is marked disabled, it will call get_work or
count_pending one last time before stopping. This call can fail on
count_pending when it has a unique task, as that task will now have no
workers but we try to look up the workers from each task.

To guarantee a more consistent state, we now clear the task list from
each worker on disable.
==

luigi/scheduler.py
test/scheduler_api_test.py
==================
a69dffb4;Dave Buchfuhrer;2017-08-12 02:17:28 -0700;Prevent worker from running same task repeatedly (#2207)
If the scheduler keeps giving the worker the same task_id from get_work,
the worker will just overwrite the same entry in _running_tasks and
never think that it is running too many processes.

I've had to reboot one of my worker machines almost daily due to
hundreds of worker processes being spawned to run the same task. This
seems to be mostly happening with batch tasks, probably because they
require more rounds of communication before the scheduler understands
that the task is running. Since this tends to happen only in short
bursts, I've also added a sleep to give the scheduler a chance to
recover.
==

luigi/worker.py
test/worker_test.py
==================
8cd8fd34;Krishna;2017-08-10 15:53:45 +0100;Added Deloitte to the list of users (#2206)
Planning to write/present about our use of Luigi in the near future, and move it up into the other list.
==

README.rst
==================
95b7da2e;Kyle Sun;2017-08-09 10:43:10 -0700;Support cluster mode in PySpark (#2197)

==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
daf9ce99;Stefano Guidolin;2017-08-08 12:10:32 -0400;[bug-fix] scheduler won't override running status incorrectly (#2187)
Issue discussed here: https://groups.google.com/forum/#!searchin/luigi-user/stefano|sort:relevance/luigi-user/WCiQfNEfWY4/5zGdX5X6BgAJ

==

luigi/scheduler.py
test/scheduler_api_test.py
==================
dd1f2ce0;Dillon Stadther;2017-07-31 08:39:52 -0500;Update _get_s3_config to only return s3 section with interpolation, excluding defaults (#2182)

==

luigi/contrib/s3.py
==================
e12ea80c;Dmitry Dygalo;2017-07-30 10:25:36 +0200;Fix emailing of unexpected error in `Worker._announce_scheduling_failure`. (#2191)

==

luigi/worker.py
test/worker_test.py
==================
4fb0886d;Marcel R;2017-07-26 13:09:17 +0200;Add worker config check_unfulfilled_deps. (#2189)
This is an option for if the client should double check if dependencies are complete or not.
==

doc/configuration.rst
luigi/worker.py
test/worker_test.py
==================
c93432a8;Arash Rouhani;2017-07-24 18:18:26 +0200;travis: Disable pypy scheduler tests

==

.travis.yml
==================
ffa0840a;Arash Rouhani;2017-07-24 18:16:42 +0200;Deprecate python 3.3 support for Luigi
This is to minimize the maintainer burden and to allow more python features to be used.
==

.travis.yml
==================
9678fcb8;Arash Rouhani;2017-07-24 18:05:10 +0200;travis: Remove ssh loopback trick
Builds are currently failing. For example

https://travis-ci.org/spotify/luigi/jobs/256849041
==

.travis.yml
==================
eca47ff5;Andy Jackson;2017-07-21 21:23:54 +0100;hadoop: Fix CDH3 mkdir implementation (#2188)

==

luigi/contrib/hdfs/hadoopcli_clients.py
==================
7636ae3d;kritchie;2017-07-21 13:21:56 -0700;MongoDB target items count (#2186)
* MongoCountTarget for count value target in MongoDB

* Added target for mongodb collection and removed collection check from mongodb count target.

==

luigi/contrib/mongodb.py
==================
2c92289f;Andy Jackson;2017-07-17 11:25:58 +0100;Update mkdir method signature for CDH3 client. (#2184)

==

luigi/contrib/hdfs/hadoopcli_clients.py
==================
484095b8;ntim;2017-07-13 15:19:08 +0200;PySparkTask fix for bytes / str type error and import error (#2168)
* Encoded module name to ascii to fix type error, removed wrong trailing brace in pattern.

* Copy module file in which the class of the job instance resides in to the run directory and add the run directory to the PYTHON_PATH.

* Tested existence of python module and the class finding of the pickled task instance.
==

luigi/contrib/pyspark_runner.py
luigi/contrib/spark.py
test/contrib/spark_test.py
==================
c87e32b0;Dave Buchfuhrer;2017-07-11 04:18:17 -0700;Handle e-mail failures in batch notifier (#2177)
As there's not much we can do about not sending e-mails, we just ignore
the error. In order to prevent constant e-mail processing, we also
clear all the e-mails from the queue and reset the time period for the
next send.
==

luigi/batch_notifier.py
test/batch_notifier_test.py
==================
529351de;Arash Rouhani;2017-07-03 22:13:24 +0200;Travis: Remove minicluster builds (#2141)
This is my proposed fix for #2140.

This should greatly speed up results of Travis builds as minicluster tests were the bottleneck.
Moreover, we don't waste the nice Travis people's resources. :)
==

.travis.yml
==================
24dfe0fa;Alex Brausewetter;2017-07-03 11:15:06 -0700;Fix decode to utf8 when reading /proc/*/cmdline

==

luigi/lock.py
==================
d4a28fdf;Alex Brausewetter;2017-07-03 10:57:35 -0700;Fix decode to utf8 when reading /proc/*/cmdline

==

luigi/lock.py
==================
f8533f89;Alex Brausewetter;2017-07-03 10:40:27 -0700;Fix decode to utf8 when reading /proc/*/cmdline
Fixes an issue where utf8 cmdline args where not consistently decoded in
py27 on Linux.

See also https://github.com/spotify/luigi/pull/2130/files#r118579419

==

luigi/lock.py
==================
453e7a95;Alex Brausewetter;2017-05-25 22:31:32 +0200;Reformat flake8 complaints

==

luigi/lock.py
test/parameter_test.py
==================
09c1747f;Alex Brausewetter;2017-05-25 22:14:52 +0200;Fix tests to use new config format

==

test/worker_test.py
==================
ca8cb27e;Alex Brausewetter;2017-05-25 22:06:05 +0200;Refactor test to use assertTrue

==

test/scheduler_visualisation_test.py
==================
79719e64;Alex Brausewetter;2017-05-25 22:05:12 +0200;Fix tests to use new config format
Fixes a number of deprecation warnings regarding configuration:

test_config_summary_limit (execution_summary_test.ExecutionSummaryTest) ...
    DeprecationWarning: Configuration [execution_summary] summary_length (with dashes) should be avoided. Please use underscores.

test_disable_emails (worker_test.WorkerEmailTest) ...
    DeprecationWarning: The use of the configuration [core] email-type is deprecated. Please use [email] format

test_task_limit_exceeded (worker_test.TaskLimitTest) ...
    DeprecationWarning: The use of the configuration [core] worker-task-limit is deprecated. Please use [worker] task_limit

test_complete_error (worker_test.WorkerEmailTest) ...
    DeprecationWarning: Configuration [email] force_send (with dashes) should be avoided. Please use underscores.

test_scheduler_with_config (scheduler_test.SchedulerIoTest) ...
    DeprecationWarning: Configuration [scheduler] worker_disconnect_delay (with dashes) should be avoided. Please use underscores.

test_sendgrid (notifications_test.TestNotificationDispatcher) ...
    DeprecationWarning: Configuration [email] force_send (with dashes) should be avoided. Please use underscores.
    DeprecationWarning: The use of the configuration [email] type is deprecated. Please use [email] method

Call notificaions.send_email_smtp with fixture parameters with smtp_without_tls  set to False ...
    DeprecationWarning: The use of the configuration [core] smtp_host is deprecated. Please use [smtp] host
    DeprecationWarning: The use of the configuration [core] smtp_local_hostname is deprecated. Please use [smtp] local_hostname
    ...

Call notificaions.send_email_sendgrid with fixture parameters ...
    DeprecationWarning: The use of the configuration [email] SENDGRID_USERNAME is deprecated. Please use [sendgrid] username
    DeprecationWarning: The use of the configuration [email] SENDGRID_PASSWORD is deprecated. Please use [sendgrid] password

==

test/execution_summary_test.py
test/notifications_test.py
test/scheduler_test.py
test/worker_test.py
==================
41e75989;Alex Brausewetter;2017-05-25 22:03:29 +0200;Refactor rename MockFile -> MockTarget

==

examples/ssh_remote_execution.py
luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
eff7b04f;Alex Brausewetter;2017-05-25 20:53:49 +0200;Fix test silence warnings
Fixes noisy warnings during tests by using assertWarns() added
in Python 3.

==

test/contrib/salesforce_test.py
test/date_parameter_test.py
test/mock_test.py
test/parameter_test.py
==================
0cd90a06;Alex Brausewetter;2017-05-25 20:42:23 +0200;Fix don't skip S3 test cases fixed upstream

==

test/contrib/s3_test.py
==================
a811903b;Alex Brausewetter;2017-05-25 20:26:19 +0200;Fix DeprecationWarning in tests
Fixes "DeprecationWarning: Please use assertEqual instead."

==

test/contrib/bigquery_test.py
test/contrib/dataproc_test.py
test/contrib/external_program_test.py
test/contrib/s3_test.py
test/parameter_test.py
==================
9ca87c5b;Alex Brausewetter;2017-05-25 20:05:28 +0200;Fix getpcmd on macOS
Fixes getpcmd on macOS by calling 'pgrep' instead of reading '/proc',
which is not available. This fixes two failures in lock_test.

Also fixes an issue where UTF-8 process could not be hashed in
Python 2.6.

==

luigi/lock.py
test/lock_test.py
==================
1c48aac5;吴国华;2017-06-30 18:22:34 +0800;hive: Use DictParameter in ExternalHiveTask (#1999)

==

luigi/contrib/hive.py
==================
1b8de294;Dave Buchfuhrer;2017-05-26 16:32:43 -0700;Update individual resource counts from the vis
Sometimes you need to quickly tweak a resource in response to your jobs
falling behind or your cluster getting overloaded. In order to make
such tweaks a little easier, this adds the option to change the limits
for all resources stored in the scheduler right in the visualiser.

This works exactly like updating the worker counts in the workers tab,
except that the counts are referenced in the progress bar rather than on
the button itself. This is because we already have the counts in the
progress bar, so adding them to a button would only complicate things.

The only other difference between this and the worker counts is that
this allows resources to be set to 0, effectively pausing certain kinds
of jobs.

Note that when you update the resource counts using the visualiser, it
only affects the currently running scheduler. If you restart the
scheduler it will reload the resource counts from the config.

==

luigi/static/visualiser/css/luigi.css
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
8d30b971;Dave Buchfuhrer;2017-05-26 16:31:51 -0700;Scheduler API for updating a single resource
In order to be able to update a single resource from the visualiser, we
need to have a scheduler api that can handle this. Having the visualiser
send a full set of resource limits is too dangerous.

==

luigi/scheduler.py
test/scheduler_api_test.py
==================
51374eca;Dave Buchfuhrer;2017-06-28 09:38:07 -0700;Serialize statuses array for URL hash (#2165)
Now serializing the statuses array leads to a JSON parsing error when
we try to deserialize it.
==

luigi/static/visualiser/js/visualiserApp.js
==================
0b87efc2;Daniel Mohns;2017-06-25 10:29:34 +0200;Remove superfluos project_id parameter in BigQuery job definition (#2117)
- Resolves #2116
==

luigi/contrib/bigquery.py
==================
8874b931;Dillon Stadther;2017-06-24 05:24:46 -0400;Update check for table existence to be case insensitive (#2086)

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
61ee32e9;Dave Buchfuhrer;2017-06-16 12:31:09 -0700;Set datatable order correctly on hash change (#2159)
We were setting order by overwriting the datatable's order function in
the processHashChange function in visualiserApp.js. This resulted in a
bug that would prevent tab changes when we try to look up the order by
calling the order function after it is replaced with an array.

The fix is pretty simple, as we just need to use the single-argument
order function that acts as a setter.
==

luigi/static/visualiser/js/visualiserApp.js
==================
d8310bdf;Dave Buchfuhrer;2016-10-19 16:38:50 -0700;Prevent changing resources from exceeding limits
The scheduler enforces resource constraints during get_work by adding up
the resources of currently running jobs and making sure that no new jobs
push any resource beyond its limit. This normally works fine, but can
run into problems when jobs change their resources after being returned
by get_work. This can happen in two ways.

The first way this can happen is that another worker schedules the job
while it's running with different resources. We want this change to be
made, as the new resources are what should be associated with the job
should it fail and need to re-run.

The second way this can happen is if a worker gets the job as part of
a batch run and returns a task with different resources.

The solution to both of these cases is to simply store the resources
that were allocated to the task during get_work and use those to count
the currently running resources. In both cases, this prevents us from
running an arbitrary number of resource-constrained tasks by switching
the resources after the limits are done being applied. We can still get
more tasks running than intended due to the mixed state but we at least
preserve some finite limit.

==

luigi/scheduler.py
test/scheduler_api_test.py
==================
19b6ef7b;Dave Buchfuhrer;2016-10-18 16:41:04 -0700;Prevent stowaway resources in scheduler
When batching tasks together, we implicitly assume that all tasks being
batched have the same resource limitation and that the batched task will
have the same resource. In order to make this assumption more explicit,
we now enforce that all tasks returned in a batch group have the same
resources.

==

luigi/scheduler.py
test/scheduler_api_test.py
==================
710e7238;Arash Rouhani;2017-06-06 11:25:56 +0200;travis: Disable email notifications
I just find them annoying and never act upon them. Mainly due to intermittent failures.
==

.travis.yml
==================
37a580fc;Dave Buchfuhrer;2016-12-15 16:44:44 -0800;Pause and unpause the scheduler from the viz
Sometimes it can be necessary to stop all jobs. This usually happens
when you're having a pipeline issue or you want to deploy a new
scheduler. There hasn't been a nice way to accomplish this. This commit
adds a pause toggle to the visualiser header bar. With one click, the
scheduler will stop giving out new tasks and allow currently running
tasks to finish normally. With another click, the scheduler starts
giving out jobs again.

Pausing will eventually kill any workers that don't have keep-alive set.

==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/static/visualiser/lib/bootstrap-toggle/css/bootstrap-toggle.min.css
luigi/static/visualiser/lib/bootstrap-toggle/js/bootstrap-toggle.min.js
luigi/static/visualiser/lib/bootstrap3/css/bootstrap-theme.min.css
luigi/static/visualiser/lib/bootstrap3/css/bootstrap.min.css
test/scheduler_api_test.py
==================
e6542d4c;Dave Buchfuhrer;2017-06-01 17:36:32 -0700;Move visualiser css into a separate file
It's a bit silly to inline 200 lines of css. Having it in a separate
file is nicer.

==

luigi/static/visualiser/css/luigi.css
luigi/static/visualiser/index.html
==================
7801ebe7;Arash Rouhani;2017-06-06 10:31:25 +0200;Version 2.6.2

==

setup.py
==================
29eef2a0;Mike DePalatis;2017-06-02 11:53:54 -0400;Use list/dict comprehension (#2144)

==

luigi/server.py
==================
d9ecfd32;Pedro Sugimoto;2017-06-01 20:41:02 -0300;added getninjas to user list in readme (#2146)

==

README.rst
==================
7ba57e6d;Dave Buchfuhrer;2017-05-30 14:56:57 -0700;Make svg the default graph type
Before the previous commit, the graph type default was actually svg,
despite the d3 checkbox being checked by default. In order to keep more
consistent behavior, we should set the default graph type to svg.

==

luigi/static/visualiser/js/visualiserApp.js
==================
3a8f381e;Dave Buchfuhrer;2017-05-30 13:59:05 -0700;Move visualiser graph type default to a constant
In my fork of Luigi, I use svg as the graph type default. This results
in annoying merges when javascript related to handling the defaults
changes. In order to make different defaults easier to maintain, this
uses a constant in visualiserApp.js to determine which graph type is
default rather than hard-coding it everywhere the default value is used.

This also cleans up a few places where the default was being set
unnecessarily:
  - don't set it in html since we set it in javascript instantly anyway
  - remove code to set buttons to checked since this has no meaning

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
d5c193b0;Dave Buchfuhrer;2017-05-31 01:41:13 -0700;Preserve graph options when clicking d3 nodes (#2139)
When clicking a d3 node, the new url was built up with a static set of
options, clearing out things like hide done and invert. This means the
graph would flip or gain lots of nodes when you click a link. In order
to better preserve the options, we now simply change the taskId in the
current URL.
==

luigi/static/visualiser/js/visualiserApp.js
==================
20bd7b02;Marcel R;2017-05-26 23:03:45 +0200;Retain container types from output() to input() (#2113)
This only affects Mappings (dict like structures) so far.
==

luigi/task.py
test/task_test.py
==================
997aee8f;Dave Buchfuhrer;2017-05-24 15:41:30 -0700;Add status to url hash
This is stored as a json-encoded list under the key "statuses"

==

luigi/static/visualiser/js/visualiserApp.js
==================
3428e58b;Dave Buchfuhrer;2017-05-24 14:11:24 -0700;Add task family to url hash
This is stored as a plain string under the key "family"

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
62529639;Dave Buchfuhrer;2017-05-25 14:15:41 -0700;Store expanded resources in the URL bar
Now the resource page can be refreshed without having to re-open the
collapsible elementsyou were viewing. This also makes the page more
sharable.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
626eff6e;Dave Buchfuhrer;2017-05-25 14:44:16 -0700;Fix resource graph links

==

luigi/static/visualiser/index.html
==================
c89df15d;Dave Buchfuhrer;2017-05-26 01:12:57 -0700;Preserve options in svg graph links (#2132)
When clicking on the nodes in an svg graph, a graph will load with that
node as the root but with hide done and show upstream dependencies
unset. This can be very annoying when you suddenly have to load a much
larger graph or your graph flips orientation.

In order to preserve these and any future options, we pass the hash with
taskId stripped out of it into the dependency graph so it can use that
as a basis for the node links. This preserves the options present when
the graph was created, which should match the current options on the
page.

D3 graphs also suffer from the same bug, but they are not addressed by
this change.
==

luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/visualiserApp.js
==================
420a3598;Dave Buchfuhrer;2017-05-25 01:39:17 -0700;Remove length from state when it equals default (#2128)
If you set length to a non-default value then back to default, the non-
default value stays stored in the URL bar. This fixes that bug.
==

luigi/static/visualiser/js/visualiserApp.js
==================
57166dee;Dave Buchfuhrer;2017-05-24 15:06:49 -0700;Set hideDone in worker root task links (#2126)
Root tasks have the largest possible graphs, so it's especially
important to ensure that we minimize these by default.
==

luigi/static/visualiser/index.html
==================
1b230f99;Uldis Barbans;2017-05-24 22:19:29 +0200;Merge pull request #2123 from spotify/ulzha/http_and_credentials
dataproc: more consistently get authentication arguments
==
==================
4edec0ee;Dave Buchfuhrer;2017-05-24 03:09:12 -0700;Set hideDone on in graph links (#2125)
We used to have hideDone set by default, as this default can prevent
large graphs from freezing the visualiser. This went away when we moved
to storing the checkbox state in the URL bar, but we have an easy fix by
adding it to the link.
==

luigi/static/visualiser/index.html
==================
20ab288a;Dave Buchfuhrer;2017-05-23 16:30:09 -0700;Remove search query from url bar on empty query
When emptying the search query box, we don't trigger the change to the
query in the URL bar, resulting in a value being stored in the URL
without a corresponding search in the box. To fix this, we simply delete
the search__search key when the search box is empty.

==

luigi/static/visualiser/js/visualiserApp.js
==================
14bddc8d;Dave Buchfuhrer;2017-05-23 16:25:16 -0700;Update tasks when filter on server is toggled
When filter on server is enabled, we should immediately filter results
for the current query on the server. When it's disabled, we need to
reload the unfiltered results from the server.

==

luigi/static/visualiser/js/visualiserApp.js
==================
92840929;Alex Brausewetter;2017-05-24 12:06:13 +0200;Fix "Show Upstream Dependencies" in visualiser (#2092)
Fix the "Show Upstream Dependencies" checkbox which did not have any effect

Fix link on graph nodes

==

luigi/static/visualiser/js/visualiserApp.js
==================
c3b8a09c;Uldis Barbans;2017-05-23 17:35:25 +0200;dataproc: more consistently get authentication arguments
Arguments `http` and `credentials` are mutually exclusive as of https://github.com/google/google-api-python-client/pull/319.

This makes the gcloud integration tests pass for me. (They have been disabled on Travis for long because of another reason, still unfixed I guess, https://github.com/spotify/luigi/pull/1931.)

==

luigi/contrib/dataproc.py
test/contrib/dataproc_test.py
==================
a2f63c6b;Dave Buchfuhrer;2017-05-22 02:34:02 -0700;Check whether renames worked in atomic hdfs pipes (#2119)
Using the snakebite client, renaming a file to an existing file fails
without raising an exception. Instead, it returns a list of moves and
whether each ones succeeded. This means that when using the snakebite
client, atomic writes to existing files fail silently versus failing
while throwing an error with the hadoopcli client.

There are two ways to fix this. First, we can simply remove the target
file if it already exists. Second, we can ensure that we read the
snakebite error and throw it if it happens. This PR does both.

For atomic directory writes, this also adds a check for whether the
directory was renamed to the target or moved inside an existing target
directory.
==

luigi/contrib/hdfs/format.py
test/contrib/hdfs_test.py
==================
50ec7fee;Dave Buchfuhrer;2017-05-21 04:34:37 -0700;Don’t use cached autoconfig client in config tests (#2120)
In hdfs_test.ConfigurationTest, calls to hdfs.get_autoconfig_client
return the version cached in the call to setUp. Because this is called
before the config is set by the helpers.with_config decorator, this
means that the tests aren’t actually testing different configurations.

Luckily, get_autoconfig_client takes an optional argument to specify its
cache. When passing a fresh cache, these will actually test what they’re
supposed to. This PR passes a fresh cache to get_autoconfig_client in
each test.


==

test/contrib/hdfs_test.py
==================
447489aa;Jonathan Ostrander;2017-05-21 07:28:57 -0400;Recursively normalize DictParameter (#2115)
This could be the cause of #2094 as well.
==

luigi/parameter.py
test/dict_parameter_test.py
==================
7716fa56;Jonathan Ostrander;2017-05-19 10:38:58 -0400;add listdir method to ftp remote file system (#2114)

==

luigi/contrib/ftp.py
==================
ecc96a5b;Quentin Stafford-Fraser;2017-05-10 16:47:23 +0100;Docs: Mention to avoid simultaneous updates to single file (#2040)

==

doc/luigi_patterns.rst
==================
80cc1d64;Lucas Cimon;2017-05-10 00:33:26 +0200;Parameter: Refactor out wrong type check
This also improves error messages. It will now say the "name" of the variable that is None.

Factoring _warn_on_wrong_param_type out of Paramater.serialize in order to make warnings more helpful by including the parameter name (#2107)
==

luigi/parameter.py
luigi/task.py
test/task_test.py
==================
dd41a185;Jason May;2017-05-01 12:54:15 -0700;Add Weebly to list of Luigi users (#2056)

==

README.rst
==================
ebd9a2b0;Kieran;2017-04-30 13:15:24 +0100;sqla: only reflect relevant tables (#2104)

==

luigi/contrib/sqla.py
==================
1147e0f0;Jeff Tratner;2017-04-29 07:10:04 -0700;Defer S3 Client instantiation until needed (#2079)
* Defer S3 Client instantiation until needed

Previously the S3 Client was instantiated in the `__init__` method of
S3Target, which meant that if you had to, say, traverse a large task
graph, quickly creating and throwing away targets, you'd end up
incurring a lot of wasted connections and slowness.

Now we create the client only when we want to make a remote request.

This does not change any of the semantics of how the target is
instantiated (still can override `s3` property and the `Key` property),
except that making an STS connection is also deferred until the moment
it's actually used.
==

luigi/contrib/s3.py
==================
a55f5faf;Antoine Jouanjean;2017-04-27 09:47:47 +0200;Add 'IF NOT EXISTS' to prevent duplicate table exception (#2064)
PR for issue #2060: Avoid exception handling for PostgresTarget.create_marker_table() with "CREATE TABLE IF NOT EXISTS"
==

luigi/contrib/postgres.py
==================
1e8a9ad7;Henry Rizzi;2017-04-27 02:44:46 -0500;add oao to list of companies using luigi without slides (#1976)

==

README.rst
==================
ec133deb;Marius Posta;2017-04-26 13:41:04 -0400;Fix minor spelling mistakes in log and doc strings (#2101)

==

luigi/worker.py
test/helpers_test.py
==================
9a57510e;Pranav Garg;2017-04-26 13:39:12 -0400;included Grovo name in README.rst (#2102)

==

README.rst
==================
734ae680;FxIII;2017-04-18 12:43:29 +0200;Enable "forgiving failures" from webapp (#2091)
The scheduler now has a forgive_failures api method, a stripped down version of add_task allowing the FAILED->PENDING transition. Failed tasks in frontend can be forgiven using the yellow button.
==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_api_test.py
==================
992ec865;João Carabetta;2017-04-13 00:54:29 -0300;Changed postgres import on TopArtists example (#2090)
* Changed postrgre.CopyTable

* Changed postgres import

==

doc/example_top_artists.rst
examples/top_artists.py
==================
ef82ce91;Ayush Kaul;2017-04-09 00:21:22 -0400;Fix duplicate explicit target name warnings (#2088)
These changes fix duplicate target
name warnings in the README by
normalizing the target name alongside
introducing anonymous hyperlink
references.
==

README.rst
==================
ce47e039;Ray;2017-04-05 13:12:56 -0400;Add Newsela to list of companies using Luigi (#2065)
* Add Newsela to list of companies using Luigi
==

README.rst
==================
ccd4fe30;kalvdans;2017-04-05 06:23:44 +0200;Document that Parameter now must be a str, to avoid warnings added by issue #1607. (#2082)

==

luigi/parameter.py
==================
5b72b4e0;kalvdans;2017-04-05 06:22:33 +0200;Avoid warnings in unit tests. (#2078)

==

test/worker_external_task_test.py
==================
9daa1dfe;kalvdans;2017-04-05 06:21:31 +0200;Avoid reading global variables in worker. (#2077)

==

luigi/worker.py
test/worker_external_task_test.py
==================
1860d0b2;Emily Xie;2017-03-29 22:09:34 -0400;Add Squarespace to list of Luigi users (#2081)

==

README.rst
==================
2dbb13d0;Erik Bernhardsson;2017-03-27 16:32:28 -0400;Split up the list of users in two lists (#2076)

==

README.rst
==================
48a97535;Dillon Stadther;2017-03-27 15:27:35 -0400;Update format of luigi users and their public content (#2072)

==

README.rst
==================
d1f1e4c9;Jeremiah Coleman;2017-03-20 22:09:35 -0400;add Red Hat to list of Luigi users (#2067)

==

README.rst
==================
f062ea2a;Mathias Deschamps;2017-03-20 14:19:28 +0100;Add MongoDB Target Support (#2062)
* Add support for MongoDB Targets
==

luigi/contrib/mongodb.py
test/contrib/mongo_test.py
tox.ini
==================
169e88be;Jakub Kukul;2016-11-22 13:53:26 +0100;Refactor: Simplify client initialisation.

==

luigi/contrib/hive.py
==================
74d28529;Jakub Kukul;2016-11-22 13:34:02 +0100;Remove unused class variable.

==

luigi/contrib/hive.py
==================
d30fae9d;Jakub Kukul;2016-11-22 13:32:01 +0100;Do not raise HDFSCliError inside snakebite client.
Otherwise, snakebite's stacktrace is swallowed.

==

luigi/contrib/hdfs/snakebite_client.py
==================
0432502a;Álvaro Marco;2017-03-12 16:37:11 +0100;Extend from default layout

==

luigi/templates/header.html
luigi/templates/recent.html
luigi/templates/show.html
==================
40ce5c9a;Álvaro Marco;2017-03-12 16:31:48 +0100;Fix CSS and JS imports

==

luigi/templates/layout.html
==================
6835c426;Arash Rouhani;2017-03-14 21:30:38 +0700;travis: Run less builds
The best solution would be to actually separate out the hdfs and other contrib parts of luigi to seperate repos. But that ain't going to happen with current work power. But we need fast builds and fewer intermittent errors, we remove a couple of builds from the matrix.

This is also a way to be grateful and respectful for the free Travis build resources.
==

.travis.yml
==================
34423048;Marcel R;2017-03-14 15:23:48 +0100;Fix worker tool box in visualizer (#2063)
* Remove worker tools when worker is disabled.

* Fix ambiguous usage of ‘workers’ in visualizer template.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
b26ce627;Arash Rouhani;2017-03-14 14:17:36 +0700;Version 2.6.1

==

setup.py
==================
eff083c6;Arash Rouhani;2017-03-14 14:14:08 +0700;Remove anything related to Debian
As there's too little manpower to keep it up to date, we just remove it.

(Sorry for the push without PR and review from community)

==

RELEASE-PROCESS.rst
debian/changelog
debian/compat
debian/control
debian/luigi-server.init
debian/luigi-server.install
debian/luigi.install
debian/rules
==================
ffaedb33;adaitche;2017-03-09 06:31:40 +0100;Make temporary_path work with paths not containing a directory (#2058)
The context manager returned by FileSystemTarget.temporary_path creates
the parent directory of the target path. However this fails when the
path does not contain a directory and an exception is raised. To be able
to use paths without a directory (e.g. "foobar.txt"), the creation of
the parent directoy is skipped in this case.

A test case which tests the above scenario has been added.
==

luigi/target.py
test/target_test.py
==================
d2694c9c;adaitche;2017-03-08 15:36:46 +0100;Add method rename_dont_move to LocalFileSystem (#2057)
When the method temporary_path is called on LocalTarget, a warning is
given because the default implementation of the method rename_dont_move
is used. However LocalFileSystem has already a more sophisticated
implementation of the desired functionality in the `move` method. Here
rename_dont_move is implemented by means of this `move` method.

Additionally the exception raised by `move` is changed from RuntimeError
to FileAlreadyExists, as the latter is expected by the test of
rename_dont_move.
==

luigi/local_target.py
==================
7de45b5f;Mats Julian Olsen;2017-03-07 15:54:56 +0100;Test against Python 3.6 (#2053)
* Add Python 3.6 to .travis.yml

* Add 3.6 to tox.ini

==

.travis.yml
tox.ini
==================
00d637f5;Marcel R;2017-03-06 11:25:08 +0100;Fix links to task graphs in visualizer. (#2025)

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/visualiserApp.js
==================
4b6f25e7;Álvaro Marco;2017-03-06 05:45:11 +0100;Address JS error in visualizer when displaying the dependency graph (#2042)
* Remove unnecessary function calls

* Standardize function declaration

==

luigi/static/visualiser/js/visualiserApp.js
==================
eacbe174;Masahiro Toriumi;2017-03-05 12:38:15 +0900;Bugfix for retry policy (#2012)
Previously, it worked normally if the task failed twice, and it failed normally when it failed three times. Therefore, it was fixed as a test case when the task failed three times.
==

luigi/worker.py
test/worker_test.py
==================
b5e0a972;Shawn Mehan;2017-03-04 19:23:35 -0800;Specify default port to comply with change in init for psycopg 2.7 (#2049)

==

luigi/contrib/postgres.py
==================
3b279018;Matthew Michihara;2017-02-27 12:59:02 -0500;parametrization -> parameterization (#2046)

==

doc/workflows.rst
==================
9fba5abf;Arash Rouhani;2017-02-24 19:01:55 +0700;Update PULL_REQUEST_TEMPLATE.md (#2037)
As already done in https://github.com/spotify/luigi/pull/2030
==

PULL_REQUEST_TEMPLATE.md
==================
548ff706;Arash Rouhani;2017-02-24 09:16:50 +0700;Create ISSUE_TEMPLATE.md (#2030)
There have been quite a lot of issues recently. By being explicit upfront. We can be less emotional and subjective when closing issues in the future. https://github.com/spotify/luigi/issues/2029 https://github.com/spotify/luigi/issues/2028 https://github.com/spotify/luigi/issues/2027
==

ISSUE_TEMPLATE.md
==================
66c9bf6c;Jeremiah Coleman;2017-02-23 20:57:02 -0500;salesforce: use 'wb' when opening output file (#2034)

==

luigi/contrib/salesforce.py
test/contrib/salesforce_test.py
==================
6ce97084;Marco Capuccini;2017-02-24 02:56:07 +0100;Support for Kubernetes Jobs (#1906)

==

doc/configuration.rst
examples/kubernetes.py
luigi/contrib/kubernetes.py
test/contrib/kubernetes_test.py
==================
2e921cdf;Aaronhrndz;2017-02-23 13:20:14 +0100;Fix bad URI path (#2033)
* Repair build by renaming URI path

==

luigi/static/visualiser/index.html
luigi/static/visualiser/lib/URI/1.18.2/URI.js
==================
7701d9fb;Álvaro Marco;2017-02-14 05:53:29 +0100;Introduce Python3 compatibility in example (#2032)

==

examples/foo_complex.py
==================
6ecedb78;Miguel Cabrera;2017-02-12 05:53:28 +0100;Add the extra_arguments to easily pass additional arguments to streaming jobs (#1929)

==

luigi/contrib/hadoop.py
test/contrib/streaming_test.py
==================
fba731aa;Elias Freider;2017-02-10 11:14:31 +0100;Refactored setup of google api clients (#2018)
Reuses more code between gcs and bigquery implementations. Adds out-of-the-box
support for google cli authentication auto-discovery with the current version
of the cli tools, which was previously not working (http and oauth could not
both be provided as was the default behavior)
==

luigi/contrib/bigquery.py
luigi/contrib/gcp.py
luigi/contrib/gcs.py
==================
72ffb49e;Arash Rouhani;2017-02-10 13:55:11 +0700;Version 2.6.0

==

debian/changelog
setup.py
==================
206d303e;Arash Rouhani;2017-02-10 13:17:31 +0700;Update TaskParmeter to use updated library code (#2023)
task_family property is deprecated.
==

luigi/parameter.py
==================
1a4b471a;Arash Rouhani;2017-02-09 16:47:25 +0700;Set authors to "The Luigi Authors" (#2009)
As of there being close to 300 commiters to luigi, and today's main
contributors to the code base are not the two original founders anymore
(which is a good sign of success :)). It makes more sense to mention
a generic term as the authors of the software.

I took the name from the Tornado docs (obviously replacing "Tornado"
with "Luigi"). The original authors are still mentioned in the bottom of
the README.md.
==

debian/control
doc/conf.py
setup.py
==================
d21906ac;Dillon Stadther;2017-02-08 21:30:29 -0500;Fix required credential string name for key-based redshift copy credentials (#2016)

==

luigi/contrib/redshift.py
==================
d5d9f580;Marcel R;2017-02-06 03:31:51 +0100;Show number of unread worker messages in UI (#2013)

==

luigi/scheduler.py
luigi/static/visualiser/index.html
==================
10e296f3;Arash Rouhani;2017-02-03 14:08:49 +0700;Allow namespaces to be set to python module (#2000)
This have been a problem I've thought about for years. And also
consciously gradually refactored the code base in previous patches
towards making this relatively short path.

Coming up with the final syntax and implementation also took me a while.
Initially I imagined there would be a [config] parameter one could set,
or specify by command line. But it turned out to be quite troublesome:

 * It's not clear how much it should affect. Should it also affect the
   things luigi exports?
 * It's hard to transition into it. Imagining a company with independent
   teams, the `auto_namespace` function can be applied package by
   package, luigi-version by luigi-version to whoever chooses to apply
   this new convention.

This solution came out to be pretty clean, and with readable tests and
detailed and a bit opinionated documentation.
==

luigi/__init__.py
luigi/task.py
luigi/task_register.py
test/auto_namespace_test/__init__.py
test/auto_namespace_test/my_namespace_test.py
test/task_test.py
==================
b33aa303;Marcel R;2017-02-03 03:46:49 +0100;Control worker processes via UI (scheduler → worker communication) (#1993)
This patch adds the possibility for the scheduler to communicate with the workers. The workers fetch messages when they do pings.

This patch also includes one a usage of this right away. You can now control the number of worker processes via the scheduler web interface.
==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/worker.py
test/worker_scheduler_com_test.py
==================
f3bc4fde;Arash Rouhani;2017-01-24 15:25:11 +0700;Make mrrunner module private to luigi
And also guide away new users from using this pretty old technology.

==

luigi/contrib/mrrunner.py
==================
97c38b6a;Arash Rouhani;2017-01-24 15:24:27 +0700;Move non-core like modules to luigi.contrib
While it's of course a bit subjective that what is core and not. I
settled on choosing these modules.  I found the rest either to be kind
of core or very hard to move and eventually create seperate packages
for.

I conciously did not create an `luigi/mrrunner.py` importing contrib, as
it will not do as one expects as you typically will use `.__file__` on
it to ship it with your map reduce job.

==

luigi/contrib/hadoop.py
luigi/contrib/mrrunner.py
luigi/contrib/postgres.py
luigi/contrib/s3.py
luigi/postgres.py
luigi/s3.py
test/contrib/hadoop_test.py
test/contrib/postgres_test.py
test/contrib/postgres_with_server_test.py
test/contrib/s3_test.py
test/contrib/streaming_test.py
==================
69f0974e;David Thompson;2017-02-02 02:50:15 -0500;add TaskStatusReporter class to fix Windows pickle issue (#1992)
Windows uses a different method when forking, which causes issues with
the task status updating functions that are passed to TaskProcess
(they need to be pickle-able).

This introduces a new class to encapsulate task status updating that is
also pickle-able.
==

luigi/worker.py
test/worker_task_test.py
==================
469c2ef1;zwotzie;2017-02-02 08:47:42 +0100;Introduce rpc-attempt retry count and wait time in configuration (#1994)

==

doc/configuration.rst
luigi/rpc.py
==================
3c050d83;nmb10;2017-01-26 11:12:34 +0300;Task graph display fixed.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
847eed53;nmb10;2017-01-26 11:11:16 +0300;Cosmetics.

==

luigi/static/visualiser/js/visualiserApp.js
==================
e1847ac4;nmb10;2017-01-26 11:09:58 +0300;Graph tab fields tracking tests added.

==

test/visualiser/visualiser_test.py
==================
ae2dcd50;nmb10;2017-01-26 11:08:49 +0300;Task list fields values moved from query params to hash.

==

luigi/static/visualiser/js/visualiserApp.js
==================
24a896fb;nmb10;2017-01-26 11:07:51 +0300;Track dependency graph fields values change.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
1e7d81ed;Dillon Stadther;2017-02-01 21:40:11 -0500;Update s3 docstrings (#2003)

==

luigi/s3.py
==================
3b2ff0e8;Joshua Arnott;2017-02-02 02:31:17 +0000;Fixed link to HDFS API docs in README (#2006)

==

README.rst
==================
acca7e25;FxIII;2017-02-02 03:30:48 +0100;use compress_response by default (#2007)

==

luigi/server.py
==================
a17ce381;Benyuel;2017-01-26 14:25:54 -0500;README - who uses luigi (#2004)

==

README.rst
==================
b86166cc;Dillon Stadther;2017-01-26 07:01:18 -0500;Add redshift copy support for role-based credential string (#1962)
* Add support for role-based credentials and refactor key-based creds

* Add test to ensure error is raised when no redshift creds are provided
==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
d7d6a374;Arash Rouhani;2017-01-25 13:31:51 +0700;Remove deprecated backward-compatibility modules (#1995)
This removes visual ls-clutter when browsing the luigi source tree. And
forces people to update their code. :)
==

luigi/contrib/sge.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/scalding.py
luigi/webhdfs.py
test/contrib/hive_test.py
==================
c80cd88e;Arash Rouhani;2017-01-23 15:12:48 +0700;minor, file.py: Fix deprecation date
Committing directly without review since it's so trivial mistake
==

luigi/file.py
==================
6e549efd;Kazbek;2017-01-20 05:13:25 +0300;Keep datatable state in the browser history. (#1986)
Allows to refresh page without tasks datatable state missing. Also added abilities to add filtered/ordered tasks datatable to bookmarks and links exchange.

In other words, you should now be able to share "what you are seeing" in the scheduler UI by sharing the URL in the browser.
==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
luigi/static/visualiser/lib/URI.js/1.18.2/URI.js
test/visualiser/visualiser_test.py
tox.ini
==================
a2ae3743;Arash Rouhani;2017-01-18 15:15:35 +0700;docs: Update link to ConfigParser (#1990)
So that we link to the section that actually is about reading multiple configuration paths.
==

doc/configuration.rst
==================
e7ad1998;Marcel R;2017-01-18 03:21:13 +0100;Set default log level via config (#1987)
Add default log level to core config and update docs.
==

doc/configuration.rst
luigi/interface.py
test/cmdline_test.py
==================
5678b611;Arash Rouhani;2017-01-10 14:53:42 +0700;Version 2.5.0

==

debian/changelog
setup.py
==================
e74add7e;Toni Cebrián;2017-01-09 03:25:41 +0100;redshift: Fix formatting of documentation (#1981)
Because of the missing blank, when generating the documentation the bulleted list is mal formatted.
==

luigi/contrib/redshift.py
==================
34d43c9b;Arash Rouhani;2017-01-05 11:09:59 +0700;target_test.py: Use clean paths to avoid failures (#1978)
Currently some tests will fail if you run them twice, because there's no
proper cleanup done.
==

test/target_test.py
==================
b7115974;Takashi Ohnishi;2017-01-05 12:03:47 +0900;retcodes: Understand succesful retries (#1951)
Prior to this commit, the return codes from luigi didn't honor the case when a task once failed but then succeeded again in a following retry. This will both make the execution summary and return code correct. This fixes #1932.
==

luigi/execution_summary.py
test/execution_summary_test.py
test/retcodes_test.py
==================
f7e0b771;Arash Rouhani;2017-01-05 09:13:50 +0700;externalize: Dont register the copied tasks (#1975)
This fixes an implementation detail, so that luigi.task.externalize
actually does what it says it does in the documentation.  Hence I
hope pretty uncontroversial. This makes it so that calling externalize
don't register a new task. A pretty serious bug.

Now, there's still a caveat, as we're mostly hiding that we do side
affects, if anyone would actually inherit from what is returned by
externalize.  That subtask wouldn't be registered either.

This code is quite easy to get wrong somewhere. Luckily luigi is
decently tested. To make me even more confident I also added a couple of
tests:

 * Two tests in task_test.py that didn't pass before.
 * I created the task_register_test.py file.
 * I added some util tests too, because they are also all about
   Copying classes and namespace clashes. And I want to be on the safe
   side.
==

luigi/task.py
luigi/task_register.py
test/task_register_test.py
test/task_test.py
test/util_test.py
==================
1afb37ad;Arash Rouhani;2017-01-04 09:07:08 +0700;server_test.py: Fix crash in test_save_state (#1977)
For whatever reasons its not running on travis but crashing when you
locally run the tests for luigi.
==

test/server_test.py
==================
6cc76198;Arash Rouhani;2017-01-03 09:32:36 +0700;flake8: Put configuration into standardized place (#1974)
As I found described here:
http://flake8.pycqa.org/en/latest/user/configuration.html

My motivation for doing this was that I always get 100 warnings in vim
when I save my file.  As this follows the standardized way, I hope
anything can without effort ripe the benefits.

I tested the autolinting functionality I have in vim (syntastic?) as
well as running the -e flake8 using tox.
==

tox.ini
==================
9d5e08e8;Arash Rouhani;2016-12-28 13:56:05 +0700;tests: Remove `__name__ == '__main__'` guards (#1973)
This is exactly like https://github.com/spotify/luigi/pull/1922, only
that I forgot to search for '__main__' with single qoutes. This patch
completes that PR.
==

test/contrib/scalding_test.py
test/customized_run_test.py
test/factorial_test.py
test/fib_test.py
test/instance_test.py
test/subtask_test.py
==================
9e29e6de;Ali Cirik;2016-12-25 21:34:03 -0500;Add missing commas to the contrib.sla module code examples. (#1972)

==

luigi/contrib/sqla.py
==================
4c33437a;Dennis;2016-12-26 09:33:03 +0700;ChainFormat error message fix (#1971)
1. Space was missing
2. Chain members order was reversed.
==

luigi/format.py
==================
06a75395;kierkegaard13;2016-12-25 20:31:32 -0600;Fix serialization for TimeDeltaParameter (#1968)
Also allow 0 time timedeltas
==

luigi/parameter.py
test/parameter_test.py
==================
d40c7535;Arash Rouhani;2016-12-19 17:34:04 +0700;namespaces: Fix changed behavior since #1953
This patch kinda rethinks and modernizes all the metamagic
between the Task class and the Register meta class. I think the less the
better. The logic inside the Register has shrunk and been replaced with
more easy to read logic in the Task class.

Furthermore. It identifies a code reuse opportunity for the luigi.util
module and also fixes a bug in the util-decorators that we love and use.

Overall, after this patch, luigi has become even more functional and
contains less if-and-but logic for how to determine the namespaces. Also
eventually there will be no strange magic of why the task_family
isn't assignable but task_namespace is.

==

doc/tasks.rst
luigi/task.py
luigi/task_register.py
luigi/util.py
luigi/worker.py
test/task_test.py
test/util_test.py
test/worker_test.py
==================
09a79c78;Arash Rouhani;2016-12-19 17:19:57 +0700;Tests: Move namespace_tests into task_test.py
Also remove global test clutter with uncleaned namespaces

==

test/namespace_test.py
test/namespace_test_helper.py
test/task_test.py
==================
e662acbc;Dillon Stadther;2016-12-19 10:15:31 -0500;Update SF to cast header value to str (#1912)
With the introduction of Requests 2.11, headers are explicitly enforced to only contain strings. This commit corrects the header for salesforce batches.
==

luigi/contrib/salesforce.py
==================
9274eff3;Arash Rouhani;2016-12-17 08:43:06 +0700;externalize: Add a testcase similar to docs (#1963)

==

test/task_test.py
==================
2dcfeaa5;ukarlsson;2016-12-16 03:12:21 +0100;[bigquery] add support for non-legacy SQL (#1896)

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
97232cb3;Arash Rouhani;2016-12-14 09:09:26 +0700;emails: Increase logging if email is misconfigured (#1960)

==

luigi/notifications.py
==================
fc6a4e1f;Arash Rouhani;2016-12-12 09:05:01 +0700;Remove the long-deprecated BooleanParameter (#1959)

==

luigi/__init__.py
luigi/parameter.py
test/import_test.py
test/task_serialize_test.py
==================
d1bf1d3d;Arash Rouhani;2016-12-08 10:04:27 +0700;Make luigi.task.externalize return shallow copies  (#1952)
Currently, running externalize on an existing class or object will have
serious side effects. Like subsequently created objects from the
original passed in class will also be externalized. This patch changes
the behavior to return a changed copy and not having as much side-effects.

Secondly, this patch officially declares this function to work on both
classes and objects.
I see two reasons we should allow for this (possibly) overly dynamic
behavior in both accepting classes and objects. First, novice users
don't pay attention to the difference, second, it still possible and it
will seem to work to pass in the class instead of the object. I was at
least tempted to without being sure if it was "correct". Instead let's
try to be soft on the users for this case.

==

luigi/task.py
test/task_test.py
==================
644d11ba;Joakim Bergman;2016-12-07 13:30:34 +0100;Merge pull request #1946 from fabriziodemaria/retry-job-get
Add retries when polling for the job status in BigQuery
==
==================
57f10c47;Marcel R;2016-12-07 11:39:22 +0100;Make task_namespace inherit from parent Task (#1953)
This closes #1950. Note that this commit changes core part of luigi. Technically it could break things, but most affected users will just notice that the task_namespace have changed.
==

luigi/task.py
luigi/task_register.py
test/namespace_test.py
test/namespace_test_helper.py
==================
8f9cb8c3;Marigold;2016-12-02 16:29:42 +0100;make RunAnywayTarget compatible with python 2.7

==

luigi/contrib/simulate.py
test/simulate_test.py
==================
5e787a92;Fabrizio Demaria;2016-12-06 14:41:40 +0100;Add retries for 500 errors in BigQuery
According to https://cloud.google.com/bigquery/troubleshooting-errors#backendError

==

luigi/contrib/bigquery.py
==================
fbdc5367;Fabrizio Demaria;2016-12-06 14:33:20 +0100;BigQuery jobs success verified using status.errorResult
According to https://cloud.google.com/bigquery/loading-data#loading_avro_files

==

luigi/contrib/bigquery.py
==================
6f0d175c;Arash Rouhani;2016-12-02 11:51:18 +0700;Version 2.4.0

==

debian/changelog
setup.py
==================
3a38571e;Dave Buchfuhrer;2016-11-22 12:29:27 -0800;Refactors get_running_tasks and get_pending_tasks
These functions are just special cases of more general functions to fetch
tasks by status, so we just implement those instead.

==

luigi/scheduler.py
test/scheduler_test.py
==================
95c094a9;Dave Buchfuhrer;2016-11-11 11:48:29 -0800;Counts FAILED tasks as PENDING in count_pending

==

luigi/scheduler.py
test/scheduler_api_test.py
test/worker_test.py
==================
0f7ff4af;Dave Buchfuhrer;2016-11-21 11:46:26 -0800;Revert "Marking as minimum upstream severity instead of max (#1789)"
This reverts commit b12be005fd015551908a42518edf99181d1c5171.

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
83229dec;Dave Buchfuhrer;2016-11-28 12:45:18 -0800;Addresses Arash's review

==

doc/configuration.rst
luigi/batch_notifier.py
luigi/scheduler.py
luigi/worker.py
test/batch_notifier_test.py
==================
f1e90485;Dave Buchfuhrer;2016-11-21 13:11:49 -0800;Fixes style issues in batch notifier

==

test/batch_notifier_test.py
==================
74d1e230;Dave Buchfuhrer;2016-11-10 15:28:41 -0800;Handles unicode in batch notifier

==

luigi/batch_notifier.py
test/batch_notifier_test.py
==================
85719d75;Dave Buchfuhrer;2016-11-08 10:33:28 -0800;Improves documentation of batch_notifier config

==

doc/configuration.rst
==================
e2e8853c;Dave Buchfuhrer;2016-11-07 19:13:14 -0800;Ensures a consistent pretty_id in scheduler.Task
scheduler.Task.pretty_id depends on dictionary ordering, which can vary
between Python versions. This makes it difficult to test things that use
pretty_id, as results will be different for different Python versions.
In order to achieve consistency, we simply sort the parameter key-value
pairs.

==

luigi/scheduler.py
==================
32bdd8ad;Dave Buchfuhrer;2016-11-07 12:37:44 -0800;Add batch notification e-mails to the scheduler
This allows the scheduler to register fails and disables in a
BatchNotifier rather than sending disable e-mails right away and not
making any failure notifications. It also adds announce_scheduling_failure
to the scheduler API so that scheduling failures can be included in batch
e-mails as well.

==

doc/configuration.rst
luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/scheduler_api_test.py
test/worker_test.py
==================
ffb01c3e;Dave Buchfuhrer;2016-11-07 11:20:40 -0800;BatchNotifier class to handle sending batch e-mails
This class allows failure, scheduling, and disable e-mails to be batched
and combined in order to make large numbers of failures easier to deal
with. It holds on to e-mails for a fixed time period, and then sends them
all in a large combined message.

==

doc/configuration.rst
luigi/batch_notifier.py
test/batch_notifier_test.py
==================
789368e2;Dave Buchfuhrer;2016-10-10 17:41:02 -0700;Adds a flag to turn off failure e-mails in the worker
This is intended to be used in conjunction with batch notification e-mails
in the scheduler, allowing the types of e-mails that will be sent to the
scheduler to not be sent by workers as well. This can be preferable to
simply disabling e-mail because it still allows some types of e-mails
to be sent and also works when the scheduler and worker are on the same
machine.

==

doc/configuration.rst
luigi/worker.py
test/worker_test.py
==================
1f2659df;Arash Rouhani;2016-11-29 11:12:30 +0700;travis: Don't run failing bigquery tests (#1931)
I'm not sure, but I believe things started to break after https://github.com/spotify/luigi/pull/1917 got merged.
==

.travis.yml
==================
1f49616f;Miguel Cabrera;2016-11-23 03:38:18 +0100;Add PyData Berlin 2015 presentation from TrustYou (#1930)

==

README.rst
==================
3e8edf0d;Steven Sklar;2016-11-22 21:22:18 -0500;Removes None default params in email config class (#1923)
This should get rid of an annoying "Parameter value None is not of type string" warning
==

luigi/notifications.py
==================
f2f88712;Arash Rouhani;2016-11-22 16:25:48 +0700;Add docs for DataParameter for default=today() (#1928)
This is one thing I've needed to look up a gazillion times, but I've always looked at other code and never consulted the docs. By documenting this, everyone will hopefully will find this easier to find.

==

luigi/parameter.py
==================
aace9d35;Arash Rouhani;2016-11-22 15:20:21 +0700;Cleanup code and adhere to E305 (#1922)
This patch started out as fixing the red in the current travis flake8
step.  As most occurrences was about simply removing the over-(mis)-used
`if __name__ == "__main__"` pattern that was way to prevalent in the luigi
code base.

This is kind of analogous to the other time flake8 suddenly got more
sensitive. See spotify/luigi#1786
==

doc/command_line.rst
examples/elasticsearch_index.py
examples/foo.py
examples/foo_complex.py
examples/hello_world.py
examples/ssh_remote_execution.py
examples/terasort.py
test/contrib/hive_test.py
test/contrib/sge_test.py
test/decorator_test.py
test/interface_test.py
test/set_task_name_test.py
test/task_test.py
test/worker_multiprocess_test.py
test/worker_parallel_scheduling_test.py
test/wrap_test.py
tox.ini
==================
52f0e49c;Arash Rouhani;2016-11-22 15:18:45 +0700;Make temporary_path() decorator create directories (#1919)
I noticed that my program crashed in the cases where I didn't manually
create the directories. And in all cases so far I've needed for the
directories to be created.

Will I definetly think this feature should be possible to turn off, I
think it's best to have as "on by default". But I left it out for anyone
making a patch in the future.
==

luigi/target.py
test/target_test.py
==================
93d29ebf;Dave Buchfuhrer;2016-11-21 18:07:40 -0800;Sets wait_jitter in worker_test.py (#1927)
Many tests in worker_test.py set wait_interval to 0.1 but leave
wait_jitter at its default value of 5.0. This sets wait_jitter to 0.05 in
all such tests, which maintains the expected 0.1 jitter time. This should
reduce each wait by about 2.5 seconds, and I've found that it decreases
the running time of the worker tests on my machine by about 15 seconds.
==

test/worker_test.py
==================
5fe7f925;Uldis Barbans;2016-11-18 09:21:04 +0100;Merge pull request #1888 from spotify/uldis/bigquery-avro-doc
[bigquery] add BigQueryLoadAvro that adds schema documentation to the table
==
==================
acb21d50;Uldis Barbans;2016-11-17 23:15:01 +0100;add tests for nullable and undocumented fields

==

luigi/contrib/bigquery_avro.py
test/contrib/bigquery_gcloud_test.py
==================
9ab42f8e;Uldis Barbans;2016-11-17 22:13:44 +0100;sanitize exception handling, logging and documentation

==

luigi/contrib/bigquery_avro.py
==================
3a54e044;Uldis Barbans;2016-11-17 12:15:29 +0100;fix load_avro_dir test to load an actual directory; fix bugs

==

luigi/contrib/bigquery_avro.py
luigi/contrib/gcs.py
test/contrib/bigquery_gcloud_test.py
==================
f0337205;Uldis Barbans;2016-11-16 19:09:48 +0100;clean up tiny unused bits

==

tox.ini
==================
a540006e;Magnus Runesson;2016-11-15 16:33:14 +0100;Test to verify description of schema is added.

==

doc/conf.py
doc/index.rst
examples/elasticsearch_index.py
examples/hello_world.py
examples/top_artists.py
examples/wordcount_hadoop.py
luigi/contrib/bigquery_avro.py
luigi/contrib/hdfs/clients.py
luigi/contrib/opener.py
luigi/contrib/sge_runner.py
luigi/format.py
luigi/mrrunner.py
luigi/tools/luigi_grep.py
test/_test_ftp.py
test/contrib/bigquery_gcloud_test.py
test/contrib/esindex_test.py
test/contrib/salesforce_test.py
test/contrib/scalding_test.py
test/customized_run_test.py
test/factorial_test.py
test/fib_test.py
test/instance_test.py
test/namespace_test_helper.py
test/subtask_test.py
tox.ini
==================
8972b640;Uldis Barbans;2016-11-14 14:14:55 +0100;add an integration test for BigQueryLoadAvro

==

test/contrib/bigquery_gcloud_test.py
==================
f76fda3c;Uldis Barbans;2016-10-19 09:58:19 +0200;[bigquery] add BigQueryLoadAvro that adds schema documentation to the table

==

luigi/contrib/bigquery_avro.py
luigi/contrib/gcs.py
test/contrib/bigquery_gcloud_test.py
==================
3552fedb;Uldis Barbans;2016-10-14 09:38:42 +0200;[bigquery] point out Avro support

==

luigi/contrib/bigquery.py
==================
28b72663;Uldis Barbans;2016-11-15 09:30:54 +0100;Merge pull request #1917 from fabriziodemaria/bigquery-location
Add support for BigQuery regional location
==
==================
9d567a45;Fabrizio Demaria;2016-11-14 14:58:23 +0100;Merge pull request #2 from ulzha/pr/1917
Pr/1917
==
==================
827b94a4;Uldis Barbans;2016-11-14 14:37:19 +0100;use Python's None instead of 'undefined' when location is unspecified

==

luigi/contrib/bigquery.py
test/contrib/bigquery_gcloud_test.py
==================
72ac5bd5;Uldis Barbans;2016-11-14 14:31:38 +0100;remove testfixtures

==

test/contrib/bigquery_gcloud_test.py
tox.ini
==================
a5291aba;Fabrizio Demaria;2016-11-12 11:58:54 +0100;Separate BQ tests from GCS tests

==

.travis.yml
test/contrib/bigquery_gcloud_test.py
tox.ini
==================
9e621082;Fabrizio Demaria;2016-11-09 16:53:24 +0100;Add tests for BigQuery dataset location

==

test/contrib/bigquery_gcloud_test.py
tox.ini
==================
4cb65464;Fabrizio Demaria;2016-11-09 09:42:20 +0100;dataset_exists checks dataset regional location

==

luigi/contrib/bigquery.py
==================
37e66d5a;Fabrizio Demaria;2016-11-08 14:30:00 +0100;Add location parameter to BigQueryTarget

==

luigi/contrib/bigquery.py
==================
de9230fc;Arash Rouhani;2016-11-09 09:42:25 +0700;targets: Implement temporary_path decorator (#1909)
As has been detailed in spotify/luigi#1519, there are many ways to do
temporary files in luigi. The use case for temporary files are always
about achieving atomic writes.

This PR finally describes the problem in the luigi documentation and
tries to interlink essential parts. Also it implements a decorator
that is meant to be able to unify many of the existing implementations,
and as a new, clean and recommended way to do temporary files and atomic
moves using luigi.
==

doc/luigi_patterns.rst
luigi/target.py
test/target_test.py
==================
7559240e;Arash Rouhani;2016-11-09 09:07:36 +0700;file.py: Rename to local_target.py (#1915)
* Also remove deprecated File class
==

luigi/__init__.py
luigi/file.py
luigi/local_target.py
test/import_test.py
test/local_target_test.py
==================
49276c90;José Otávio Rizzatti Ferreira;2016-11-07 00:25:48 -0200;redshift: Correctly escape query used with UNLOAD (#1907)

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
777b43a5;Arash Rouhani;2016-11-02 16:11:06 +0700;email: Cleanup email code and log less

==

luigi/notifications.py
==================
d3bafafe;Arash Rouhani;2016-11-02 15:18:13 +0700;docs: Update outdated links and config variables
I also removed some overspecific documentation that easily
becomes outdated. As even a DuckDuckGo search for "luigi email
notifications" bring forth the relevant luigi documentation already.

==

doc/configuration.rst
doc/luigi_patterns.rst
luigi/notifications.py
luigi/task.py
==================
499f7fc4;Chris Beaumont;2016-10-31 21:46:59 -0700;Make clone() carry along non-parameters (#1630)
Currently Task.clone only propagates values from source to target when both attributes are Parameters. This PR propagates data from source to target parameter regardless of whether the source attribute is a parameter or something else (property, class or instance-level attribute, etc).
==

luigi/task.py
test/clone_test.py
test/decorator_test.py
==================
21f9fce6;Martin Czygan;2016-10-31 03:38:35 +0100;make elasticsearch example run out of the box (#1902)
(tested with elasticsearch 5.0.0)
==

examples/elasticsearch_index.py
==================
e9ce79e0;Martin Czygan;2016-10-25 04:28:27 +0200;LocalTarget: Allow moves across devices (#1877)
With `os.rename` you get a `OSError: [Errno 18] Invalid cross-device link`
if you attempt to move a file across filesystems.

If the destination is on a different filesystem,
we approximate atomicity by first copying the source
to a temporary file on the target filesystem, followed
by a rename. Finally the source file is removed.
==

luigi/file.py
test/file_test.py
==================
35b340d7;Arash Rouhani;2016-10-21 11:03:20 +0700;Version 2.3.3

==

debian/changelog
setup.py
==================
bf6b818a;Arash Rouhani;2016-10-21 10:59:36 +0700;tests: Disable server_test.test_404 (#1880)
There was a sporadic failure happening. Last time it bothered us in spotify/luigi#1878.
==

test/server_test.py
==================
632f14f4;Nico Mandery;2016-10-20 08:41:53 +0200;Use the proc filesystem to gather process information (#1886)
This commit quite drastically changes the way luigi determines if another "identical" process is already running. It's meant as a solution that works independent of the unix-flavor-specific behaviour on the `ps` command. One such flavor that now will work is busybox.
==

luigi/lock.py
==================
fc66a799;JPN;2016-10-20 10:01:54 +0800;docs: batch_mode => batch_method (#1890)

==

doc/luigi_patterns.rst
==================
1c532197;ukarlsson;2016-10-19 12:16:15 +0200;Add UDF support for BigQuery (#1881)

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
b0fc54f3;Uldis Barbans;2016-10-19 09:53:25 +0200;[bigquery] clean up some mess

==

luigi/contrib/bigquery.py
==================
db397705;Uldis Barbans;2016-10-14 12:29:39 +0200;Merge pull request #1882 from spotify/uldis/bigquery-capitalization
[bigquery] use the same capitalization as Google does
==
==================
b7c7b0b3;Uldis Barbans;2016-10-14 09:30:32 +0200;[bigquery] use the same capitalization as Google does

==

luigi/contrib/bigquery.py
test/contrib/bigquery_gcloud_test.py
test/contrib/bigquery_test.py
==================
c29aef6c;matt-miller;2016-10-12 22:56:34 -0400;pyspark: Fix bug about overriden job name parameter (#1878)
Fixed bug where DataprocPysparkTask overrides the job name parameter with main_job.py
==

luigi/contrib/dataproc.py
==================
ec546010;Dave Buchfuhrer;2016-10-04 21:59:37 -0700;Moves e-mail config into luigi.Config classes (#1871)
Moves all configuration access in notifications.py to use luigi.Config classes.

Also sets a default 10 second timeout for smtp.

This commits also deals with deprecating the old [core] configs related to notifications.
==

doc/configuration.rst
luigi/notifications.py
test/notifications_test.py
==================
1a5b6410;Jessica Austin;2016-10-03 18:39:52 -0800;Add CORS headers to api requests (#1870)
This allows an external application to request data from the api via Javascript. In our specific case, we request JSON data from /api/graph and display it in an internal ops dashboard.
==

luigi/server.py
test/server_test.py
==================
6a8ce3aa;Dave Buchfuhrer;2016-09-26 10:33:39 -0700;Prevents batched tasks from all getting marked RUNNING
I've recently seen some of my workers simultaneously running multiple
tasks from the same batchable class, when the should all be running
together as a single batch. Furthermore, these tasks exceeded both
resource constraints and the number of workers supposed to be running at
the same time.

After checking the logs, I saw that the worker would actually run these
one at a time upon receiving each one from the scheduler. My best guess
after looking into it for a week is that the worker does not receive a
response from the scheduler after marking the batch runner as RUNNING,
and the scheduler updates the entire batch's status on the retry. I
verified that this is indeed a possibility with a unit test and have
patched that bug here.

==

luigi/scheduler.py
test/scheduler_api_test.py
==================
69501042;Dave Buchfuhrer;2016-09-26 19:31:44 -0700;Uses task name instead of task_id as job identifier for MR (#1868)
It's much more useful to see MyTask(param=value) in the job tracker rather
than MyTask_value_abf1238eb238eb1832, especially when the latter form
usually removes most of the useful information for figuring out which task
is which.
==

luigi/contrib/hadoop.py
test/contrib/hadoop_jar_test.py
==================
338b64de;Julian Santander;2016-09-26 14:38:56 +0200;Add support to RangeByMinutes backfilling tasks (#1863)
This change adds RangeByMinutesBase (inheriting from existing RangeBase) and RangeByMinutes (inheriting from RangeByMinutesBase) providing support for back-filling classes operating in units of minutes.
==

luigi/tools/range.py
test/range_test.py
==================
b92e09b6;Dave Buchfuhrer;2016-09-25 19:26:05 -0700;Enables running with 0 workers to support assistants (#1861)
In order to allow assistants to take care of running all tasks, we need a
way to run scheduling with 0 workers. This adds a slightly tweaked worker
code path to allow a process with 0 workers to stay alive while skipping
any get_work calls to the scheduler. Instead, the worker makes a
count_pending call to see if it's still necessary.
==

luigi/interface.py
luigi/scheduler.py
luigi/worker.py
test/scheduler_api_test.py
test/worker_test.py
==================
93fe2523;Arash Rouhani;2016-09-22 09:25:36 +0700;Merge pull request #1860 from Houzz/time_out_hung_worker
Enables worker timeouts with only one worker
==
==================
4d6a74b9;Arash Rouhani;2016-09-22 09:23:29 +0700;Merge pull request #1858 from Houzz/handle_bad_batch_method
Handles errors when loading batch tasks from multiple ids
==
==================
a3b21755;Dave Buchfuhrer;2016-09-21 17:24:30 -0700;Updates LuigiTestCase to clear instance caches before and after runs

==

test/helpers.py
==================
7c5fb0af;Dave Buchfuhrer;2016-09-20 12:56:18 -0700;Adds a test that task load failures trackbacks are sent to the scheduler

==

test/worker_test.py
==================
a648b2e0;Dave Buchfuhrer;2016-09-21 16:20:29 -0700;Refactors task load exception error notifications

==

luigi/worker.py
==================
b7a8c8c7;Dave Buchfuhrer;2016-09-21 17:07:33 -0700;Inherits WorkerTest from LuigiTestCase

==

test/worker_test.py
==================
9ad439ba;Dave Buchfuhrer;2016-09-21 16:01:23 -0700;Renames TaskProcess.random_seed to TaskProcess.use_multiprocessing

==

luigi/worker.py
==================
b0e8976e;Dave Buchfuhrer;2016-09-21 16:00:39 -0700;Uses task_process instead of p as a variable name in _run_task

==

luigi/worker.py
==================
afe01d32;Dave Buchfuhrer;2016-09-14 18:28:34 -0700;Enables worker timeouts with only one worker
Worker timeouts rely on running the task in a separate process. In order
to get them to work with a single worker, we need to run tasks that have
timeouts in separate processes. This change does that while still allowing
tasks that don't have a timeout set to run in the main process.

==

luigi/worker.py
test/worker_test.py
==================
7bb7e01f;Dave Buchfuhrer;2016-09-20 12:04:13 -0700;Handles errors when loading batch tasks from multiple ids
I ran into an error when I used `operator.add` as a batch_method. This
fails because operator.add has the wrong signature. The problem is that
this failure kills the worker rather than just failing that particular
job. In order to allow the rest of the pipeline to continue, we trap the
error just like when we fail loading a single task.

==

luigi/worker.py
test/worker_test.py
==================
6cf70913;Arash Rouhani;2016-09-20 16:45:35 +0700;Version 2.3.2

==

debian/changelog
setup.py
==================
cac500a1;Arash Rouhani;2016-09-20 16:27:09 +0700;Refine disabling of workers (#1839)
This commit's PR started small but grew quite big. But there's two major changes:

 * Bugfix: don't give tasks to disabled assistants

Previously assistants would keep getting tasks and never stop. Despite
that a user have clicked "disable worker" in the WebUI.

 * Invent a worker-state, pass it along in get_work and worker_list

This gives an opportunity for workers to know if the scheduler considers them disabled. It also allows the WebUI to show if a worker is disabled or not. Making the UI experience ever so more responsive. 

The old "greyed out worker" now means will mean "disabled". Previously it was equivalent to "has no pending tasks". But because we also associate "greyed out" with "can't click disable", the WebUI have
confused at least me for a while.
==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
luigi/worker.py
test/scheduler_api_test.py
test/scheduler_visualisation_test.py
test/worker_test.py
==================
aa30be84;Dave Buchfuhrer;2016-09-18 19:01:25 -0700;Tries using path for non-hdfs targets in hadoop_jar (#1824)
When writing a map-reduce job that takes S3 inputs, I found that the
arguments were incorrect. As S3Target does not inherit from HdfsTarget,
the code goes to the base case of calling str. To be correct a bit more
often in this case, I've adjusted the code to try checking the path
attribute first.
==

luigi/contrib/hadoop_jar.py
test/contrib/hadoop_jar_test.py
==================
e46af61b;Arash Rouhani;2016-09-19 08:47:28 +0700;SGE: Fix sample code in package description (#1856)

==
==================
04cea609;Arash Rouhani;2016-09-19 08:46:41 +0700;Cleanup server.py file (#1855)
* Remove StaticFileHandler

That code doesn't run anymore as we've set "static_path" already.

http://www.tornadoweb.org/en/branch4.4/guide/running.html#static-files-and-aggressive-file-caching

* server.py: Remove long-deprecated "responder"

I don't know what it is, but it's been deprecated for over 1.5 years.
==

luigi/server.py
==================
febcbb68;Rolf Schroeder;2016-09-16 13:20:59 +0200;Fix sample code in SGE package description

==

luigi/contrib/sge.py
==================
2f4ea3b7;Arash Rouhani;2016-09-16 10:03:52 +0700;server.py: Remove old comment (#1854)
As of spotify/luigi#1631 this is fixed, later spotify/luigi#1734 enhanced it
==

luigi/server.py
==================
03f270a3;Arash Rouhani;2016-09-15 15:24:56 +0700;worker_tests.py: Fix minor resource leak (#1853)

==

test/worker_test.py
==================
68fa7bc4;Dave Buchfuhrer;2016-09-12 19:19:07 -0700;Adds time_running to batch running tasks (#1851)
We neglected to set time_running when setting a task as batch_running. By
adding it, we get a better view of these tasks in the visualizer.
==

luigi/scheduler.py
test/scheduler_api_test.py
==================
6d7a9581;Dave Buchfuhrer;2016-09-11 21:46:41 -0700;Disables siginterrupt for SIGUSR1 (#1844)
I've recently started using SIGUSR1 to stop old workers on deploy and each
deploy has resulted in all MapReduce tasks dying with
`IOError: [Errno 4] Interrupted system call`. Setting siginterrupt to
False for SIGUSR1 prevents this error for me.
==

luigi/worker.py
test/worker_test.py
==================
2d0e4a1e;Arash Rouhani;2016-09-12 10:06:14 +0700;Update local locking logic (#1842)
This patch is made to address some issues with local locking, that is
the locking that deals with the .pid files typically in each machines
/tmp/luigi folder.

There's one bugfix (can massively improve startup performence):

  * Don't keep old entries in the .pid files

There's one change in logic:

  * When running with --take-lock, only allow for one "additional" task
    being run, the previous behavior was that --take-lock tasks always
    could keep running. With this new behavior, it could perhaps be
    possible to always cron your lines with --take-lock.

Lastly, there was much refactoring of the code. Although longer, I find
the readability to have drastcially improved.
==

luigi/lock.py
test/lock_test.py
==================
5a9cc05b;Dave Buchfuhrer;2016-09-11 20:00:35 -0700;Fails batch_running tasks if worker dies early (#1850)
If a worker were to die between receiving batch tasks and responding with
the task that will run them, we want the tasks to fail. Our existing
methods to fail batch tasks don't work in this case, so I've extended the
method for failing RUNNING tasks to also work for BATCH_RUNNING in order
to handle this extra case.
==

luigi/scheduler.py
test/scheduler_api_test.py
==================
3c55acd2;Dave Buchfuhrer;2016-09-11 19:51:39 -0700;Filters tasks in second branch of Worker.get_pending_tasks (#1849)
When a worker has many DONE tasks, get_pending_tasks may switch to using
state.get_pending_tasks in order to speed up the process. This can include
pending tasks not owned by the worker, invalidating the result and causing
functions like is_trivial_worker to return erroneous results.

To fix this, we simply filter the results of state.get_pending_tasks to
remove any tasks that don't include this worker.
==

luigi/scheduler.py
test/scheduler_test.py
==================
f538d1b3;Dave Buchfuhrer;2016-09-11 19:36:41 -0700;Sets upstream status for BATCH_RUNNING jobs to UPSTREAM_RUNNING (#1848)

==

luigi/scheduler.py
test/scheduler_api_test.py
==================
ec485b73;Dave Buchfuhrer;2016-09-11 19:35:50 -0700;Allows clients to specify max_shown_tasks in task_list (#1847)
I have some scripts that process task_list for reporting. When the
response length goes beyond the maximum shown tasks, the scripts all
break. In order to allow the scripts to keep reporting as things get
backed up, this adds an optional argument to override the config's max
shown tasks in task_list, while keeping the configured default for the
visualizer.
==

luigi/scheduler.py
test/scheduler_api_test.py
==================
70d8734d;Dave Buchfuhrer;2016-09-11 19:34:19 -0700;Prevents batch tasks from running before their dependencies (#1846)
When adding tasks to an existing batch in get_work, we neglected to check
whether the tasks were schedulable. This meant that in production I found
my pipelines running batches that included jobs with PENDING dependencies.
In order to fix this, we simply add a check that the task is schedulable.

Note that even though self._schedulable(task) gets called twice in the
get_work loop, they fall under different branches of whether best_task is
defined, so this shouldn't slow get_work down much.
==

luigi/scheduler.py
test/scheduler_api_test.py
==================
bf8b5cba;Arash Rouhani;2016-09-07 11:50:16 +0700;dataproc tests: Attempt to fix failing build (#1843)
Blindly following the advice given by @constantijn here https://github.com/spotify/luigi/pull/1833#issuecomment-244918980
==

test/contrib/dataproc_test.py
==================
6fc32131;Arash Rouhani;2016-09-06 16:35:55 +0700;tox: Remove last trace of not_imported.py (#1841)
This was just forgotten to be included in spotify/luigi#1756
==

tox.ini
==================
88cb0b73;Arash Rouhani;2016-09-05 16:56:16 +0700;tests: Skip a inttermittently failing sqla test (#1840)

==

test/contrib/sqla_test.py
==================
2a5eef7a;Adam Marszałek;2016-09-05 04:19:48 +0200;pig: Properly use Python3's buffer interface (#1836)
When using luigi with Python 3 there is issue running PigTask. Because output in track_and_progress is both read to unicode string and copied to temporary file, it failed as conversion to string happens before writing to file. I simply moved decoding after writing to temporary file.
==

luigi/contrib/pig.py
test/contrib/pig_test.py
==================
add86fa7;Piotr Polatowski;2016-09-05 04:17:30 +0200;gcp: Add image_version support to Dataproc (#1833)
Add image_version parameter to CreateDataprocClusterTask
==

luigi/contrib/dataproc.py
test/contrib/dataproc_test.py
==================
d1b151d4;Arash Rouhani;2016-09-01 11:41:39 +0700;Add and refactor tests for disabling workers (#1838)

==

test/scheduler_api_test.py
==================
19478e71;Anne Schuth;2016-08-31 17:00:27 +0200;Add Blendle to list of companies using Luigi (#1837)
Instead of  #1673 (which was out of date).
==

README.rst
==================
3fa7a4b4;Dave Buchfuhrer;2016-08-25 19:19:17 -0700;Moves error messages in the task list to a popup (#1827)
When error messages with long lines appear in the task list data table,
they can stretch the table width beyond that of the window. Horizontal
scrolling is impossible, hiding both the error message and the action
buttons needed for hiding the error message or showing others.

As the error message popup works well in the graph, this is easily
solved by just using the same popup for displaying error messages in the
task list. This popup has a fixed size and allows horizontal scrolling
when lines exceed it.
==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
b27e5a88;Dave Buchfuhrer;2016-08-25 19:17:54 -0700;Allows breaking resource strings on commas in visualizer (#1828)
Using JSON.stringify produces a compact string with no spaces between
separators. When used with a longer resources dict, it can cause the
cell in the task list datatable to become too wide and push the edge of
the table off of the screen. By adding a space after the comma
separators, the resources dict can be broken up and everything fits
comfortably within my laptop's smaller window size again.
==

luigi/static/visualiser/js/visualiserApp.js
==================
daaeeb67;Arash Rouhani;2016-08-25 09:40:01 +0700;Version 2.3.1

==

RELEASE-PROCESS.rst
debian/changelog
setup.py
==================
99a216d2;Ivan Lee;2016-08-25 10:14:45 +0800;Bug fix for spark task can not be pickled (#1819)
This is implemented by adding a public generic helper to Task that in general deals with the problem of unpickable properties. It's then applied to SparkTask (the bugfix) and also Sge and Hadoop-Task (to reuse that new method).
==

luigi/contrib/hadoop.py
luigi/contrib/sge.py
luigi/contrib/spark.py
luigi/task.py
test/contrib/sge_test.py
test/contrib/spark_test.py
test/task_test.py
==================
b5b578da;Arash Rouhani;2016-08-24 14:06:44 +0700;worker.py: Remove old and not useful comment (#1792)
It was introduced in spotify/luigi#438. Would that bug be reintroduced I'm think that (1) we have tests nowadays for it and (2) this comment doesn't help any more.
==

luigi/worker.py
==================
6861ee35;Dave Buchfuhrer;2016-08-24 00:05:18 -0700;Uses a sane default for pysftp_conn_kwargs (#1825)
pysftp_conn_kwargs defaults to None, which causes a TypeError when passed
with ** for the kwargs of pysftp.connect. This fixes that bug by replacing
None with {} when storing pysftp_conn_kwargs in the RemoteFileSystem
object.
==

luigi/contrib/ftp.py
==================
c0c4d5ce;Kyle Sun;2016-08-22 19:21:06 -0700;bugfix: worker dies on smtp connection errors (#1821)
Catch socket.error exception when trying to connect smtp server in error email notification.
==

luigi/notifications.py
test/notifications_test.py
==================
ae50c790;Arash Rouhani;2016-08-22 09:50:37 +0700;docs: Add instructions for seeing rendered docs (#1814)

==

CONTRIBUTING.rst
==================
f5bda8b3;Dave Buchfuhrer;2016-08-21 19:31:39 -0700;Adds BATCH_RUNNING to the visualiser (#1817)
In the earlier batching PR, I left out any visualiser elements. This
adds BATCH_RUNNING to the Task List selectors and Dependency Graph
legend. The legend needed to be widened a bit to accomodate the longer
name, and I replace commas with spaces while capitalizing the first
letter of each word in the legend.
==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
1da35a78;Dave Buchfuhrer;2016-08-16 19:08:51 -0700;Limits resource usage bar fill to 100% (#1818)
If more than the maximum amount of a resource is in use (say, after
decreasing the maximum amount of a resource) the bar fill can exceed
100%. This pushes the bar-centered label way out, so we simply limit the
bar fill to 100 to fix the display issue.
==

luigi/static/visualiser/js/visualiserApp.js
==================
1d4e3cef;Arash Rouhani;2016-08-12 10:24:46 +0700;Update RELEASE-PROCESS.rst
Basically just fix the rendered rst to look good on GitHub
==

RELEASE-PROCESS.rst
==================
521d41e5;Arash Rouhani;2016-08-12 10:17:28 +0700;Version 2.3.0

==

RELEASE-PROCESS.rst
debian/changelog
setup.py
==================
aa079467;Dave Buchfuhrer;2016-08-11 19:40:56 -0700;Enables running of multiple tasks in batches (#1784)
Sometimes it's more efficient to run a group of tasks all at once rather than
one at a time. With luigi, it's difficult to take advantage of this because your
batch size will also be the minimum granularity you're able to compute. So if
you have a job that runs hourly, you can't combine their computation when many
of them get backlogged. When you have a task that runs daily, you can't get
hourly runs.

For the user, batching is accomplished by setting batch_method in the parameters
that you wish to batch. See the included documentation for more information.
==

doc/configuration.rst
doc/luigi_patterns.rst
luigi/parameter.py
luigi/scheduler.py
luigi/task.py
luigi/task_status.py
luigi/worker.py
test/execution_summary_test.py
test/parameter_test.py
test/scheduler_api_test.py
test/worker_test.py
==================
396d138d;Peter Gaultney;2016-08-11 14:47:31 -0500;Added passthrough for PySFTP Connection keyword arguments to RemoteTarget constructor (#1815)
* Added passthrough for PySFTP Connection keyword arguments.

There's no reason Luigi shouldn't support things like SFTP
using a private key file, for instance.

This doesn't alter the interface for existing users - it simply
allows users who know that PySFTP is the underlying implementation
to pass additional keyword arguments to the creation of the PySFTP
Connection.

* added pysftp kwargs to RemoteTarget

==

luigi/contrib/ftp.py
==================
298a0d13;Erik Bernhardsson;2016-08-10 15:52:34 -0400;Merge pull request #1813 from jeffcjohnson/patch-1
Add current directory to python path
==
==================
699e8032;Jeff Johnson;2016-08-10 14:54:39 -0400;Add current directory to python path
The directions for adding the current working directory did not work for me until I changed '' to '.'.  Also it had the task name instead of the module name in the text.
==

doc/example_top_artists.rst
==================
30644914;Daniel Nugent;2016-08-09 22:35:24 -0400;locking bugfix: make ps print full commands (#1809)
Use ps command that prints full command lines without errors
==

luigi/lock.py
==================
aa2224cd;Brett Copeland;2016-08-08 23:29:07 -0400;Add ChoiceParameter (#1800)
This adds a new parameter type, where the user defines the permitted type and a explicit set of values.
==

luigi/__init__.py
luigi/parameter.py
test/choice_parameter_test.py
test/parameter_test.py
==================
4e3b0011;Brett Copeland;2016-08-07 22:39:25 -0400;Add NumericalParameter (#1799)
Added a new Parameter class, NumericalParameter, that validates that the specified input parameter, an int or float, is in the specified range. The comparison functions, i.e. <= or < may be overridden, and the min and max values are adjustable.

This Parameter type is helpful to reduce repetitive code, such as repeatedly checking that various input numeric parameters are in the permissible ranges. I argue it is also cleaner to specify the constraints on the parameter when it is defined in a Task class.
==

luigi/__init__.py
luigi/parameter.py
test/numerical_parameter_test.py
test/parameter_test.py
==================
4111b00d;Erik Bernhardsson;2016-08-04 11:56:07 -0400;Merge pull request #1804 from igm-team/sge_no_tarball
Made creating a tarball of luigi optional to reduce I/O overhead of r…
==
==================
be11d910;Erik Bernhardsson;2016-08-04 11:55:53 -0400;Merge pull request #1805 from igm-team/job_name_format
Added parameters to SGEJobTask to have control over the job name.
==
==================
f219422f;brcopeland;2016-08-04 00:33:37 -0400;Added parameters to SGEJobTask to have control over the job name.

==

luigi/contrib/sge.py
==================
3f7ea716;brcopeland;2016-08-04 00:13:29 -0400;Made creating a tarball of luigi optional to reduce I/O overhead of running an SGEJobTask.

==

luigi/contrib/sge.py
luigi/contrib/sge_runner.py
==================
8545d6e8;Arash Rouhani;2016-08-04 10:22:32 +0700;Revert "Added InputFileParameter and OutputFileParameter classes." (#1803)

==

luigi/__init__.py
luigi/parameter.py
==================
59614c90;Brett Copeland;2016-08-03 22:28:29 -0400;SGE: Add --dont-remove-tmp-dir parameter to SGEJobTask (#1798)

==

luigi/contrib/sge.py
==================
bfb62337;Ahmet DAL;2016-08-02 06:40:43 +0300;Implement per task retry policies (#1791)
With this patch, different tasks can be configured to have their own retry-policies. See the included docs for details.

Additionally, the "disable_failures" config name is now deprecated is favor of "retry_count".
==

doc/configuration.rst
examples/per_task_retry_policy.py
luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/db_task_history_test.py
test/scheduler_api_test.py
test/scheduler_test.py
test/worker_keep_alive_test.py
test/worker_test.py
==================
db2d846e;Brett Copeland;2016-08-01 23:22:52 -0400;Parameterized poll_time for SGEJobTask. (#1795)

==

luigi/contrib/sge.py
==================
b860fbdf;Brett Copeland;2016-08-01 23:15:28 -0400;sge: Add pwd to python's path when running on cluster. (#1797)

==

luigi/contrib/sge.py
luigi/contrib/sge_runner.py
==================
6b2c464b;Erik Bernhardsson;2016-08-01 22:14:39 -0400;Merge pull request #1801 from igm-team/file_parameters
Added InputFileParameter and OutputFileParameter classes.
==
==================
a7d4abf4;brcopeland;2016-08-01 20:35:37 -0400;Fixed changes to match luigi standard.

==

luigi/parameter.py
==================
7f8ff136;Erik Bernhardsson;2016-08-01 17:01:22 -0400;Merge pull request #1796 from igm-team/run_locally
Added option to run SGEJobTask locally.
==
==================
988b6782;Erik Bernhardsson;2016-08-01 16:59:34 -0400;Merge pull request #1794 from igm-team/rmtree_fix
Bug Fix for Removing Temporary Directory on an NFS
==
==================
fb1aa78b;brcopeland;2016-08-01 15:41:08 -0400;Removed unused import.

==

luigi/contrib/sge.py
==================
440d7b38;brcopeland;2016-08-01 15:30:39 -0400;Added InputFileParameter and OutputFileParameter classes.

==

luigi/__init__.py
luigi/parameter.py
==================
32596ff0;brcopeland;2016-08-01 14:37:33 -0400;Added option to run SGEJobTask locally.

==

luigi/contrib/sge.py
==================
d5042dbd;brcopeland;2016-08-01 14:16:59 -0400;Changed removing temporary scripts directory from shutil.rmtree() to a subprocess calling 'rm -rf'.

==

luigi/contrib/sge.py
==================
9036ec30;Arash Rouhani;2016-07-29 09:44:27 +0700;tests: Add a testcase confirming #1789 (#1790)
Previously, only the latter test case passed. Since #1789 both tests do
pass. The hairy details can be understood by reading the test case, it's
comments and the related pull requests.
==

test/worker_keep_alive_test.py
==================
05324531;Dave Buchfuhrer;2016-07-28 19:13:39 -0700;Truncates long streaming job confs (#1773)
When running a streaming job with lots of inputs, the job conf gets passed to
each mapper. This can cause an exception from passing too many arguments to the
mapper. This job conf is not actually, needed, so it's safe to truncate. 20000
is recommended as a safe value for this truncation in
http://aajisaka.github.io/hadoop-project/hadoop-streaming/HadoopStreaming.html
==

luigi/contrib/hadoop.py
==================
b12be005;Ahmet DAL;2016-07-28 14:31:36 +0300;Marking as minimum upstream severity instead of max (#1789)
Luigi marks a wrapper task as `UPSTREAM_FAILED` or `UPSTREAM_DISABLED`
when ANY of its upstream task is `FAILED` or `DISABLED`. Moreover, when
the wrapper task is marked as `UPSTREAM_DISABLED`, luigi shut the worker
down as it should do. This causes another PENDING_TASK in the wrapper
task not to run because worker is down. This behaviour should change.
Marking as `UPSTREAM_` should be ALL instead of ANY

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
fd18bd62;Lucas Cimon;2016-07-28 04:29:15 +0200;Add DateSecondParameter to parameter.py (#1779)
This closes #1775
==

luigi/__init__.py
luigi/parameter.py
luigi/util.py
test/date_parameter_test.py
test/import_test.py
test/parameter_test.py
test/util_previous_test.py
==================
ea7153df;Arash Rouhani;2016-07-28 09:10:19 +0700;Merge pull request #1786 from Tarrasch/fix-travis
flake8: Unbreak travis build
==
==================
33bfb438;Arash Rouhani;2016-07-27 17:11:39 +0700;tox: Specify sphinx dependency better
For some reason it didn't work locally for me any more

==

tox.ini
==================
b5e21ca4;Arash Rouhani;2016-07-27 10:49:16 +0700;flake8: Unbreak travis build
I belive this might have broken as of a flake8 being published to pypi.

Furthermore, I removed the deprecate_kwarg module. Anyone should feel
free to put it back again when they want.

==

luigi/deprecate_kwarg.py
luigi/util.py
test/notifications_test.py
tox.ini
==================
510594fb;Dave Buchfuhrer;2016-07-26 19:23:17 -0700;Excludes .tox from flake8 to prevent checking third-party libraries (#1785)

==

tox.ini
==================
f09d4d61;Erik Bernhardsson;2016-07-25 23:38:09 -0400;Merge pull request #1783 from spotify/Tarrasch-patch-1
README: Remove monthly downloads badge
==
==================
83ff266f;Arash Rouhani;2016-07-26 10:35:49 +0700;README: Remove monthly downloads badge
The fact that there's only 4 downloads per month is not something we can really brag about. Let's just remove this bag. A historic note is that at some point that number fell from the tens of thousands downloads per month to just a handful. I suppose pypi fixed a bug on their side.
==

README.rst
==================
e02ba97c;Arash Rouhani;2016-07-25 10:30:24 +0700;Rename CentralPlannerScheduler to Scheduler (#1781)
I find very little value in having that complicated name. In particular
it should be clear that the main class of scheduler.py is in fact
the Scheduler() class.

I've also renamed the tests testing the api to
test/scheduler_api_test.py. This should feel more intuitive to have
"scheduler" in the name of the file.
==

luigi/interface.py
luigi/scheduler.py
luigi/server.py
luigi/worker.py
test/customized_run_test.py
test/execution_summary_test.py
test/notifications_test.py
test/retcodes_test.py
test/rpc_test.py
test/scheduler_api_test.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/server_test.py
test/task_history_test.py
test/task_status_message_test.py
test/worker_external_task_test.py
test/worker_test.py
==================
5bd9b436;Arash Rouhani;2016-07-22 17:19:27 +0700;Remove abstract Scheduler class (#1778)
This is an internal refactoring. The purpose is just to remove code and
complexity.
==

luigi/rpc.py
luigi/scheduler.py
==================
da94615f;Dillon Stadther;2016-07-21 08:38:42 -0400;Merge pull request #1751 from dlstadther/ftp_fix
Fix exist method for ftp server
==
==================
405f48de;Arash Rouhani;2016-07-20 17:02:25 +0700;Assistants: Don't affect longevity of tasks (#1772)
When assistants where introduced, we imagined that one worker would
run tasks (the assistant) and one would upload them.  In order to ensure
that the tasks don't get pruned before tasks get completed, we added
a what we now consider an "antifeature" that made tasks not getting
pruned while assistants where alive.

Real world use have showed that it wasn't a good feature. It have
caused bugs like spotify/luigi@736c0f1, but worst, it's a feature that
makes luigid change behavior for all tasks if you just submit 1
assistant. I didn't expect that the first time I tested assistants.

There's an email thread where it was discussed to remove this feature.
In there one can also read about how to get something similar to the old
behavior.

https://groups.google.com/forum/#!topic/luigi-user/b7Acym0n-g4
==

luigi/scheduler.py
test/central_planner_test.py
==================
08419aca;Arash Rouhani;2016-07-20 16:24:24 +0700;tests: Skip a inttermittently failing s3 test (#1777)
I've seen it fail many times now.
==

test/s3_test.py
==================
62b6aa85;Fabrizio Demaria;2016-07-20 10:33:23 +0200;Update retcodes to handle new cases (#1771)
This commits adds these features:

 * unknown_reason is changed to not_run and covers more cases. Now documented in detail
 * Reaching task-limit counts as scheduling_error
 * Return code 0 strictly corresponds to success (when so configured)
 * Updated error messages/documentation

This commit fixes #1660
==

doc/configuration.rst
luigi/execution_summary.py
luigi/retcodes.py
luigi/worker.py
test/execution_summary_test.py
test/retcodes_test.py
==================
e8a37f8f;Arash Rouhani;2016-07-20 15:27:15 +0700;tests: Fix warning in remote_scheduler_test.py (#1774)
When you run the test, we get a warning about using an int for a string parameter
==

test/remote_scheduler_test.py
==================
0daac4c3;Erik Bernhardsson;2016-07-19 14:00:47 -0400;Merge pull request #1567 from Lucas-C/master
Fallback process command name in lock.getpcmd
==
==================
dad83861;Dillon Stadther;2016-07-18 10:32:42 -0400;Merge pull request #1745 from dlstadther/s3_list_update
Update S3 copy to return the number and size of files copied
==
==================
decf400b;Arash Rouhani;2016-07-18 16:34:50 +0700;Remove sitecustomize file (#1755)
See discussion in spotify/luigi#1693

Luigi developrs might need to run `rm .coverage` after applying this
change as a new version of coverage will be in use after this patch.
==

.coveragerc
sitecustomize.py
tox.ini
==================
464f56c7;Dillon Stadther;2016-07-06 15:19:20 -0400;Fix exist method for ftp server

==

luigi/contrib/ftp.py
==================
113f6604;Dillon Stadther;2016-07-11 13:07:58 -0400;Update copy() to return number and size of files copied

==

luigi/s3.py
==================
5f1c5d3c;Arash Rouhani;2016-07-14 14:57:13 +0700;Remove the confusing "dummy_test_module" directory (#1756)
The purpose is simply to remove a confusing module from the luigi root
directory. It was only used from tests but it couldn't be put in the
test module for whatever technical reasons.
==

.coveragerc
dummy_test_module/__init__.py
dummy_test_module/not_imported.py
test/contrib/spark_test.py
test/dynamic_import_test.py
test/helpers.py
test/worker_test.py
==================
e3cc470f;Arash Rouhani;2016-07-14 11:41:55 +0700;Disable codecov comments on GitHub PRs (#1754)
The codecov bot have been spamming PRs with incorrect coverage data. As
We don't know how to fix it for now, lets try to disable it at least.
See spotify/luigi#1693.
==

codecov.yml
==================
4b0875d6;Daniel Darabos;2016-07-14 04:48:22 +0200;Fix "owner_email" log message. (#1762)
* Add missing space in log message.

* Capitalize "Luigi" while I am already changing this string.

==

luigi/notifications.py
==================
3ef26c22;Arash Rouhani;2016-07-13 17:27:10 +0700;docs: Install sphinx 1.4.4 in setup.py (#1761)
This should unbreak the build

https://readthedocs.org/projects/luigi/builds/4193162/
==

doc/conf.py
setup.py
==================
b98898b9;Arash Rouhani;2016-07-13 11:44:15 +0700;docs: Set minimum versions for sphinx (#1760)
I saw that the build was failing, hence this is my attempt to fix it,
altough I don't know how to test this before merging it.
See https://readthedocs.org/projects/luigi/builds/4189801/

Unfortunately I couldn't find a way to connect a webhook between GitHub
PRs and readthedocs: https://github.com/rtfd/readthedocs.org/issues/1340

The reason I believe a version bump would fix it is because I see
exactly the same error as in sphinx-doc/sphinx#2465 and readthedocs
seem to use 1.3.5, causing the pdf docs to be outdated.
==

doc/conf.py
tox.ini
==================
6d4dbf07;Dillon Stadther;2016-07-12 22:52:02 -0400;Normalize ListParameter to be Immutable (#1759)
* Add normalize to ListParameter

* Add test for ListParameter normalization

==

luigi/parameter.py
test/parameter_test.py
==================
98860f5e;Arash Rouhani;2016-07-12 17:16:07 +0700;README: Add pypi version badge (#1757)
This small badge makes it easy for people to see what the most recent
version of luigi is.
==

README.rst
==================
68e032d2;Dillon Stadther;2016-07-11 13:05:47 -0400;Add tests for list() and listdir()

==

test/s3_test.py
==================
613bd197;Dillon Stadther;2016-07-11 13:01:37 -0400;Add option for list() and/or listdir() to return the boto.s3.key.Key object

==

luigi/s3.py
==================
c29e48fa;Arash Rouhani;2016-07-08 17:47:05 +0700;Version 2.2.0

==

RELEASE-PROCESS.rst
debian/changelog
setup.py
==================
c251e821;Daniel Nugent;2016-07-07 22:28:38 -0400;Add tests for hashing parameters (#1719)
Note that ListParameter cannot be hashed.
==

test/parameter_test.py
==================
87e87304;Sarah Guermond;2016-07-05 21:41:03 -0700;Update call to iteritems in luigi/tools/deps: deprecated in Python 3 (#1749)

==

luigi/tools/deps.py
==================
11a431d8;Bob Baxley;2016-07-04 22:15:12 -0400;Reset terminal colors in external_program (#1742)
When an ExternalProgramRunError is printed and there are color values in the ENVIRONMENT, the terminal colors are permanently changed. I have noticed this when a PySparkTask fails on AWS EMR. Annoyingly, in EMR, the terminal color is switched to a hard-to-read light blue. 
==

luigi/contrib/external_program.py
==================
58490ac7;Erik Bernhardsson;2016-07-01 10:54:37 -0400;Merge pull request #1744 from Houzz/cache_autoconfig_client
Caches get_autoconfig_client on a per-thread basis
==
==================
a5a31b95;Erik Bernhardsson;2016-07-01 10:54:25 -0400;Merge pull request #1743 from marcpare/master
Fix bug with GCSFlagTarget __init__
==
==================
b3e9ad57;Dave Buchfuhrer;2016-06-30 17:45:16 -0700;Caches get_autoconfig_client on a per-thread basis
If too many different autoconfig clients are open at the same time, it can
create too many open files for the operating system to handle. To avoid
this issue, we can simply cache the autoconfig client to ensure that the
same one is being used every time. However, the autoconfig client is not
thread safe so we must have a different one for each thread.

This resolves #1740

==

luigi/contrib/hdfs/clients.py
test/hdfs_client_test.py
==================
46736243;Marc Pare;2016-06-30 17:05:04 -0700;Fix bug with GCSFlagTarget
Didn't pass along the kwargs.

==

luigi/contrib/gcs.py
==================
c3119757;Casey Green;2016-06-29 22:41:18 -0400;Add additional event handlers to tasks (#1698)
This adds two new event handlers:

1. Task timeout - gets triggered when a task times out.
2. Process failure - gets triggered if the process running a task fails for an unexpected reason.

==

luigi/event.py
luigi/worker.py
test/worker_test.py
==================
bd8423fa;Erik Bernhardsson;2016-06-28 10:12:01 -0400;Merge pull request #1735 from dlstadther/target_fix
Unify reference to LocalTarget and MockTarget
==
==================
2cc08a28;Erik Bernhardsson;2016-06-28 10:11:03 -0400;Merge pull request #1737 from riga/improveCommonParams
Reduce number of get_params calls in common_params.
==
==================
bae694b7;Marcel Rieger;2016-06-28 14:26:21 +0200;Reduce number of get_params calls in common_params.

==

luigi/util.py
==================
2b9293c4;Dave Buchfuhrer;2016-06-27 20:07:50 -0700;Removes redundant function definitions from rpc and server (#1734)
When defining a new API call in the scheduler, there are three steps that
must be taken. First, you create the function in CentralPlannerScheduler.
Next, you define the same function with the same signature in
RemoteScheduler. This second function just aggregates its arguments in a
dictionary and passes them to _request. Finally, the function must be
registered in server.py.

These last two steps are extremely automatable, so I moved them into a
decorator that gets applied to all rpc-accessible functions in
CentralPlannerScheduler.
==

luigi/rpc.py
luigi/scheduler.py
luigi/server.py
==================
09598c62;Dillon Stadther;2016-06-27 10:36:52 -0400;Fix salesforce default content type (#1724)

==

luigi/contrib/salesforce.py
==================
7b70edca;Dillon Stadther;2016-06-27 10:32:01 -0400;Rename MockTarget class variable _fn to path

==

luigi/mock.py
==================
c297245e;Dillon Stadther;2016-06-27 10:31:15 -0400;Remove MockTarget path property

==

luigi/mock.py
==================
b3974574;Dillon Stadther;2016-06-27 10:29:38 -0400;Deprecated LocalTarget fn propery

==

luigi/file.py
==================
831e3907;Alfonso MHC;2016-06-23 04:28:38 +0200;Add note about underscore in parameter names (#1729)

==

doc/command_line.rst
==================
b8f2e860;Nil Goyette;2016-06-19 22:38:13 -0400;Remove tracking url callback hack (#1722)
tracking_url_callback was deprecated and didn't work with cythonized
projects because cython modify some exception messages.
==

luigi/worker.py
test/worker_test.py
==================
2ef09c21;Soheil Koushan;2016-06-20 04:36:41 +0200;Consistent Luigi spelling in docs (#1723)

==

CONTRIBUTING.rst
README.rst
RELEASE-PROCESS.rst
doc/central_scheduler.rst
doc/command_line.rst
doc/configuration.rst
==================
b871e9d2;Manuel Belmadani;2016-06-17 02:24:10 -0700;Update example_top_artists.rst (#1662)
Added example command to work around the class missing from PYTHONPATH issue which causes an import error when calling the luigi command line tool.
==

doc/example_top_artists.rst
==================
c049cfae;Erik Bernhardsson;2016-06-11 13:18:55 -0400;Merge pull request #1720 from dsfcode/master
Add combiner to docstrings in mrrunner
==
==================
45a5ea9e;dfowler;2016-06-11 12:23:54 -0400;Add combiner to docstrings in mrrunner

==

luigi/mrrunner.py
==================
1eca0229;Pete Weissbrod;2016-06-09 22:31:04 -0400;Add luigi-deps-tree visualising tool (#1680)
This is a command line tool to visualise the current progress of a given task
==

luigi/tools/deps_tree.py
setup.py
test/cmdline_test.py
==================
0858e74d;Sean Reifschneider;2016-06-09 20:24:45 -0600;Adding release step for Debian packages. (#1718)
Debian packages build with the version number in the debian/changelog
file.  The 2.1.1 release and probably others have a version number of
0.0 in that file, so if you grab the release and do a "debuild" you get
a package of version 0.0.
==

RELEASE-PROCESS.rst
==================
b216d5ab;Arash Rouhani;2016-06-10 09:05:13 +0700;Correct docs for Range.of-params (#1715)
This is a fix up for #1675

I used this as reference https://github.com/spotify/luigi/pull/1675/files#diff-bcfedf11b58a3378d447759fcaf6c843R837
==

doc/luigi_patterns.rst
==================
8d47e5e4;Arash Rouhani;2016-06-10 09:04:11 +0700;DateParameter docs: Add example with interpolation (#1716)
There's many many times in my time using luigi where I've wanted to look this up. Hopefully not only I but also others save time by having this reminder.

I got motivated to do this after getting this as a question in the email group.
==

luigi/parameter.py
==================
859095a1;Daniel Nugent;2016-06-08 22:41:32 -0400;Implement pass-through parameters on Range tasks (#1675)
Parameters to tasks wrapped by RangeBase and its subclasses can now be
passed through the Range to the 'of' task. This both makes it easier to
specify parameters to tasks running inside of ranges in Python code and
allows for Luigi to differentiate between multiple Range instances
running with the same 'of' parameter.

Modified bulk_complete invocations to pass of_params

In RangeDaily and RangeHourly, the bulk_complete parameter was invoked
with a list of the date/hour parameters to be used for the of task. This
prevents of_params from being provided to the bulk_complete code.
Instead, we change the invocation of the bulk_complete method to use a
partial with the of_params values curried. Thus, any code using the cls
parameter of bulk_complete can behave as normal while still allowing the
of_params to be passed through.

For code that would rather subclass and override missing_datetimes, two
new helper methods are provided: datetime_to_parameters and
parameters_to_datetime. These are parallel to datetime_to_parameter and
parameter_to_datetime and rather than handling only the first argument
to the of class, handle all the required arguments.
==

doc/luigi_patterns.rst
luigi/tools/range.py
test/range_test.py
==================
e124e75e;Daniel Nugent;2016-06-07 22:26:56 -0400;Ensure DictParameter's are normalized to FrozenOrderedDict (#1708)
There was an outstanding bug. In particular DictParameters initialized with normal "non-frozen" dicts would make the execution summary crash.
==

luigi/parameter.py
test/execution_summary_test.py
==================
a4fce14a;bmaggard;2016-06-07 22:20:01 -0400;Can yield (not return) a list of tasks. (#1713)
Returning tasks from run(), even in a list, does not add dependencies.  yield does.
==

doc/tasks.rst
==================
c0c21c60;Erik Bernhardsson;2016-06-07 11:36:22 -0400;Merge pull request #1711 from tmu/custobar-talk-link
Added a link to Custobar Luigi slides to Who uses Luigi list
==
==================
e2840ce3;Teemu Kurppa;2016-06-07 14:20:23 +0300;Added a link to Custobar Luigi slides to Who uses Luigi list

==

README.rst
==================
690d136e;hudswideworld;2016-06-06 21:30:44 -0500;Updatat six to version 1.10.0 (#1709)
Six v.1.9.0 imports the _winreg module, which only works on Windows, and results in an ImportError when running on Linux machines. Six v.1.10.0 fixes that.
==

luigi/six.py
==================
61c7f72f;Ford Bohrmann;2016-06-05 22:47:09 -0400;Adds AWS session token support for redshift copy statements (#1702)
* adds session token to redshift connection for copy statements

==

luigi/contrib/redshift.py
==================
b274d164;Piotr Kaleta;2016-06-03 05:42:08 +0200;Fix docs for @inherits decorator. (#1679)

==

luigi/util.py
==================
71bb1155;Max Countryman;2016-06-02 20:40:59 -0700;Redshift: raise an error when no columns are found (#1676)
The method `create_table` uses the length of the first element of the `columns` property to determine how column names are formatted. Unfortunately this is not exhaustive case coverage. For instance, if a `columns` property is formatted improperly, `create_table` can fail silently, matching neither the first nor the second if clause. In such cases we should alert the user that something has gone awry.

To remedy this, here we raise a `ValueError` when neither if clause is met. This both alerts the user to the cause of the problem and halts the application from making erroneous and incorrect progress. If we prefer to make the `CREATE` query optional, we could instead log an error to stderr, however it seems unlikely that we would ever wish to not create our tables.

==

luigi/contrib/redshift.py
==================
18935d1e;Anthony Perot;2016-06-03 07:39:06 +0400;docs: Fix typo (#1703)

==

CONTRIBUTING.rst
==================
4faa9edc;Dave Buchfuhrer;2016-06-01 20:14:06 -0700;Allows package binaries to be passed to job runner (#1565)
I've recently started using Twitter's Pants Build System to produce binaries for
my pipelines for ease of deployment. This is incompatible with how the streaming
jobs work, but luckily the pre-compiled binary already contains everything I
need to run my streaming jobs.

This allows a package_binary to be specified in a streaming job task, which then
gets used in place of both mrrunner.py and packages.tar. To use this, I updated
my runner script to act like mrrunner.py when the first argument passed is map,
reduce, or combiner by adding the following lines at its start:

    if len(sys.argv) > 1 and sys.argv[1] in ('map', 'reduce', 'combiner'):
        return luigi.mrrunner.main(sys.argv)

Then I just need to add the package_binary to my streaming job base class. This
also has the benefit of removing my need to maintain an extensive extra_modules
list because they're already included in my pre-built pex file.
==

luigi/contrib/hadoop.py
test/contrib/streaming_test.py
==================
518023db;Arash Rouhani;2016-06-02 10:01:52 +0700;[docs] Bump sphinx version for tox builds (#1701)

==

tox.ini
==================
64f09a0e;Arash Rouhani;2016-06-01 11:22:33 +0700;Merge pull request #1700 from Houzz/fix_docs
Fixes Sphinx version for docs to 1.3b1
==
==================
c632fb51;Dave Buchfuhrer;2016-05-31 17:10:32 -0700;Accepts more arguments in overridden _warn_node function in doc conf
The latest version of sphinx has a different signature for warn_node than the
one we were using in our overridden version. By adding *args and **kwargs we now
have a more future-proof version of this override.

==

doc/conf.py
==================
84c5705e;Dave Buchfuhrer;2016-05-31 16:33:45 -0700;Fixes Sphinx version for docs to 1.3b1
The docs test is currently broken because it's incompatible with the latest
version of Sphinx. By fixing Sphinx to an exact version number, we avoid picking
up a newer version that breaks everything.

==

tox.ini
==================
2d2a7fb6;Erik Bernhardsson;2016-05-30 14:34:15 -0400;Merge pull request #1699 from adamchainz/readthedocs.io
Convert readthedocs link for their .org -> .io migration for hosted projects
==
==================
def9ecac;Adam Chainz;2016-05-29 15:22:01 +0100;Convert readthedocs link for their .org -> .io migration for hosted projects
As per their email ‘Changes to project subdomains’:

> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.

Test Plan: Manually visited all the links I’ve modified.

==

README.rst
luigi/contrib/ecs.py
luigi/contrib/external_program.py
luigi/contrib/hdfs/webhdfs_client.py
luigi/notifications.py
==================
514a3bda;Erik Bernhardsson;2016-05-25 22:34:43 -0400;Merge pull request #1696 from Houzz/ps_xo
Uses more thorough pid check for locking
==
==================
8c4708d4;Dave Buchfuhrer;2016-05-25 11:29:21 -0700;Uses more thorough pid check for locking
I was recently having issues where my jobs started failing once I scheduled
them in cron jobs on an osx machine. After investigating, I eventually found
that the PID wasn't being found using the standard "ps" command. Adding "-x"
brings in more PIDs and fixed my issue.

==

luigi/lock.py
==================
5f570ad8;Riccardo Magliocchetti;2016-05-20 04:05:54 +0200;Clarify file permission error message (#1692)
Make it clear that permission should either be 'r' or 'w'.
==

luigi/contrib/ftp.py
luigi/contrib/ssh.py
luigi/file.py
==================
2a0ff1fe;Damon P. Cortesi;2016-05-18 19:27:19 -0700;Add support for multiple results in salesforce batch jobs (#1686)
* #1685 Add support for multiple results in batch jobs
Adds a new method 'get_batch_result_ids' and maintains backwards compatibility
with the old method, adding a warning.

* Add the ability to merge result sets and basic testing.
Note that this only supports CSV since this is what the library does by default.
==

luigi/contrib/salesforce.py
test/contrib/salesforce_test.py
==================
41be6b67;jimmywan;2016-05-18 21:14:22 -0500;Fix worker configuration headings. (#1691)
"[worker]" was duplicated.
==

doc/configuration.rst
==================
187517b0;Erik Bernhardsson;2016-05-17 10:43:08 -0400;Merge pull request #1690 from bamdan/master
Add Hotels.com as user of Luigi to the README.rst
==
==================
eb954b7c;dan leahy;2016-05-17 15:00:31 +0100;Add Hotels.com as user of Luigi to the README.rst

==

README.rst
==================
73269bfd;Erik Bernhardsson;2016-05-16 17:02:17 -0400;Merge pull request #1689 from jeffcjohnson/master
allow sftp default port 22 to be overridden
==
==================
674c61d3;Jeff Johnson;2016-05-16 11:13:06 -0400;allow sftp default port 22 to be overridden

==

luigi/contrib/ftp.py
==================
e3c0d49a;Arash Rouhani;2016-05-16 09:24:43 +0700;tox.ini: Remove # comment, fixing travis breakage
That style of commenting is incompatible since tox 2.3.0. This fixes #1687.
==

tox.ini
==================
f158a756;Kevin Wurster;2016-05-10 23:28:27 -0400;Allow GCSTargets for Hadoop streaming jobs (#1664)
Allow GCSTarget's as input and GCSFlagTarget's as output for Hadoop jobs

* Allow GCSTarget()'s as Hadoop streaming input and output.
* Don't GCSFlagTarget doesn't support atomic move at end

==

luigi/contrib/hadoop.py
==================
89a6a0c2;Arash Rouhani;2016-05-10 09:35:54 +0700;Merge pull request #1677 from tusharbhat/rename-move-copy
Rename move copy functions added to FileSystem and FileSystemTarget child classes
==
==================
f6fe6131;Tushar Bhat;2016-05-09 13:18:36 -0700;Added rename and copy to FileSystem, removed rename from children

==

luigi/file.py
luigi/mock.py
luigi/s3.py
luigi/target.py
==================
ebfd0dd8;Arash Rouhani;2016-05-09 09:15:41 +0700;Merge pull request #1681 from jkukul/master
Two independent small fixes.
==
==================
1f1632ea;Jakub Kukul;2016-05-06 15:20:43 +0000;Compute the 'new_deps' variable only when it's needed.

==

luigi/worker.py
==================
6f50847a;Jakub Kukul;2016-05-06 15:19:18 +0000;Fix typo in a log message.

==

luigi/contrib/hive.py
==================
d8f9ce26;Tushar Bhat;2016-05-04 11:40:12 -0700;Removed redundant function

==

luigi/file.py
luigi/mock.py
==================
31d9d812;Max Countryman;2016-05-03 19:10:11 -0700;provide missing S3CopyJSONToTable INFO logging (#1674)

==

luigi/contrib/redshift.py
==================
4b6d43d0;Tushar Bhat;2016-05-03 18:21:41 -0700;Added rename/copy/move functions to FileSystem and FileSystemTarget classes where applicable

==

luigi/file.py
luigi/mock.py
test/file_test.py
test/mock_test.py
==================
7cbc0fe8;Erik Bernhardsson;2016-05-02 09:22:17 -0400;Merge pull request #1672 from gszjulcsi/master
Fix formatting of example configuration snippet
==
==================
96318e55;Julianna Gobolos-Szabo;2016-04-29 07:25:01 +0200;Fix formatting of example configuration snippet

==

doc/central_scheduler.rst
==================
c77224eb;Matt;2016-04-21 19:42:12 -0700;changed "visualizer" to "visualiser" to be consistent with the majority of occurrences (#1667)

==

README.rst
doc/central_scheduler.rst
test/server_test.py
==================
a3fe8179;Kyle Walker;2016-04-20 19:01:59 -0700;Fix running nose with xunit. (#1659)
When running nosetest with xunit, the tests would crash for external
projects using python 3.5 with something similar to:

Traceback (most recent call last):
  File "./lib/python3.5/site-packages/luigi/mock.py",
  line 128, in write
      stderrbytes = sys.stderr.buffer
      AttributeError: 'Tee' object has no attribute 'buffer'

This is becuase xunit overrides sys.stderr, and the class it uses does
not have a 'buffer' attribute.

Nose source:
  https://github.com/nose-devs/nose/blob/master/nose/plugins/xunit.py#L127-L147
==

luigi/mock.py
==================
1f402aa6;Travis;2016-04-20 19:01:49 -0700;Add contrib package for MSSQL (#1650)
This is primarily based off of the mysqldb.py module, but uses the _mssql library instead
==

luigi/contrib/mssqldb.py
==================
31f2dddb;Uldis Barbans;2016-04-20 15:09:45 +0200;Merge pull request #1612 from fabriziodemaria/exit-code
Luigi return codes
==
==================
11c525d2;Fabrizio Demaria;2016-04-20 10:57:01 +0200;Default return code set to 0 for 'scheduling_error'
This to maintain backwards compatibility.

==

luigi/retcodes.py
test/retcodes_test.py
==================
724af007;Fabrizio Demaria;2016-04-19 14:11:19 +0200;Set namespace for FailingTask
This fixes TaskClassAmbigiousException for 'retcodes_test.RetcodesTest'

==

test/scheduler_visualisation_test.py
==================
1a3aaff4;Fabrizio Demaria;2016-04-19 13:26:35 +0200;Revert "work around erroring (order sensitive) test"
This reverts commit baaf9cde5431e6c162c18bed604f7dc028fbfa67.

==

test/scheduler_visualisation_test.py
==================
cb86d300;Fabrizio Demaria;2016-04-19 13:09:38 +0200;Fix test_connection_error
Reraising exceptions in worker.py to handle internal luigi errors
made the test fail.

==

test/worker_test.py
==================
3a2eeb9b;Fabrizio Demaria;2016-04-18 15:25:07 +0200;Fix test_dep_graph_missing_deps
BadReqTask with deps() error is now scheduled but not run. This changes
the values in the 'dep_graph' for the task: the 'params' field now
contains the parameters passed to the task instead of the task_id.

==

test/scheduler_visualisation_test.py
==================
8d397150;Dillon Stadther;2016-04-18 22:48:59 -0400;Add GitHub PR template file (#1655)
This hopefully makes contributing to luigi easier. It adds a guide when submitting PRs.
==

PULL_REQUEST_TEMPLATE.md
==================
baaf9cde;Uldis Barbans;2016-04-15 09:16:47 +0200;work around erroring (order sensitive) test
Running `tox -e py27-nonhdfs -- test/retcodes_test.py test/execution_summary_test.py test/worker_test.py test/scheduler_visualisation_test.py` in our Docker environment, master at 7d14a7c was actually erroring retcodes_test.RetcodesTest:test_task_failed with "Task 'FailingTask' is ambiguous". It collided with scheduler_visualisation_test.FailingTask. The setup is sensitive to test collection/execution order.

==

test/scheduler_visualisation_test.py
==================
70ffc67a;Uldis Barbans;2016-04-14 16:07:35 +0200;use the same wording in email as in the log message

==

luigi/worker.py
==================
3b249492;Uldis Barbans;2016-04-14 15:21:46 +0200;name statuses more consistently

==

luigi/execution_summary.py
luigi/retcodes.py
test/execution_summary_test.py
==================
f8f46e8c;Uldis Barbans;2016-04-14 15:01:14 +0200;remove test_task_limit, to address in a separate PR

==

test/retcodes_test.py
==================
58d35606;Uldis Barbans;2016-04-14 13:38:01 +0200;fix failing tests

==

luigi/retcodes.py
test/retcodes_test.py
==================
5a22fc04;Erik Bernhardsson;2016-04-16 16:48:53 -0400;Merge pull request #1656 from e9t/patch-1
Fix typo
==
==================
04ae634d;Lucy Park;2016-04-16 21:21:05 +0900;Fix typo

==

luigi/mock.py
==================
7d14a7c7;Dillon Stadther;2016-04-14 22:00:31 -0400;bugfix: Don't crash when logging isn't specified
This fixes something that briefly broke the the other day.

Set default conf_file value to empty string within function setup_interface_logging such that logging will not try to using a logging.conf file which doesn't exist. (#1653)
==

luigi/interface.py
==================
0c04df2e;Erik Bernhardsson;2016-04-13 11:15:41 -0400;Merge pull request #1624 from dlstadther/warn_parameter
Warn user if Parameter parses something other than a string.
==
==================
345cb15c;Dillon Stadther;2016-04-13 07:32:40 -0400;Update test which uses logging_conf_file to default its value to an empty string rather than None.

==

test/cmdline_test.py
==================
23d2325d;Dillon Stadther;2016-04-13 07:32:05 -0400;Set scheduler_url, logging_conf_file, and module to '' by default, rather than None. Made appropriate conditional checking updates.

==

luigi/interface.py
==================
bced6d68;Dillon Stadther;2016-03-31 16:06:49 -0400;Warn user if Parameter serializes something other than a string.

==

luigi/parameter.py
==================
64d6b831;Erik Bernhardsson;2016-04-12 08:33:58 -0400;Merge pull request #1649 from trustyou/add_archives
Add the archive parameters to HadoopJobRunner
==
==================
78f21bb2;Miguel Cabrera;2016-04-12 11:06:48 +0200;move archives paramter to the end. use instance variable directly.

==

luigi/contrib/hadoop.py
==================
0bc6ddf6;Miguel Cabrera;2016-04-12 10:17:35 +0200;Add the archive parameters to HadoopJobRunner

==

luigi/contrib/hadoop.py
==================
9c164021;Erik Bernhardsson;2016-04-11 10:16:39 -0400;Merge pull request #1646 from stephenpascoe/dagre-d3-fix
Upgraded dagre-d3 to v0.4.17 to resolve issue #1604
==
==================
93fc48f7;Stephen Pascoe;2016-04-11 14:14:19 +0100;Upgraded dagre-d3 to v0.4.17 to resolve issue #1604

==

luigi/static/visualiser/index.html
luigi/static/visualiser/lib/d3/dagre-d3.js
luigi/static/visualiser/lib/d3/dagre-d3.min.js
==================
c204f959;Marcel R;2016-04-11 11:25:30 +0200;Make status_message optional in task serialization. (#1645)
When scheduler tasks are serialized, their status_message might not be present when using old state files.
==

luigi/scheduler.py
==================
03185658;Arash Rouhani;2016-04-11 09:00:06 +0700;luigid logging: Log less and change logger name (#1636)
I think it makes sense to log less, because currently I think INFO level
should not be verbose. In particular "No workers connected" message is
verbose and going to be said many more times than it will be actually
removed (when used with assistants).

Further, I think now is a sane time to change the name of the logger to
the "recommended" `getLogger(__name__)` style. Because PR
spotify/luigi#1633 was just merged and it's less likely that people have
relied on the logger name prior to that.
==

luigi/scheduler.py
==================
a8e64fe7;Chris Beaumont;2016-04-10 18:52:18 -0700;Fix bug in LocalFileSystem.move (#1643)

==

luigi/file.py
test/file_test.py
==================
3c90bcda;Spiro;2016-04-10 18:50:54 -0700;Changed task_history_override to task_history_impl (#1641)

==

luigi/scheduler.py
==================
c81e7cbc;Arash Rouhani;2016-04-11 08:49:03 +0700;scheduler: Remove unused prune_done_tasks option (#1640)

==

luigi/scheduler.py
==================
826cbfdd;Erik Bernhardsson;2016-04-10 12:34:44 -0400;Merge pull request #1644 from ej81/master
Raise Queue.Empty for get() on empty queue
==
==================
cce8bd11;Eric Jansen;2016-04-10 13:54:13 +0200;Raise Queue.Empty for get() on empty queue
Worker._handle_next_task() expects get() on an empty queue to raise Queue.Empty, but the dummy implementation DequeQueue raises IndexError instead. It probaly only shows up if you create custom workers that derive from Worker, but it is still inconsistent with multiprocessing.Queue.

==

luigi/worker.py
==================
927907cb;Erik Bernhardsson;2016-04-08 15:28:25 -0400;Merge pull request #1642 from jstoxrocky/jstoxrocky/grammer_in_docs
Updated grammer in target.AtomicLocalFile class
==
==================
828294a1;Joey Stockermans;2016-04-08 15:26:16 -0400;Updated grammer in target.AtomicLocalFile class

==

luigi/target.py
==================
8aa96c41;Erik Bernhardsson;2016-04-08 07:33:12 -0400;Merge pull request #1638 from Tarrasch/rename_internal_variable
parameter.py: Rename .__config to ._config_path
==
==================
b79bb931;Erik Bernhardsson;2016-04-08 07:32:54 -0400;Merge pull request #1639 from Tarrasch/scheduler_stop_crashing
Bugfix: Scheduler crashes for some configs
==
==================
ebab5b24;Neil Isaac;2016-04-08 04:43:32 -0400;Include sys.argv in error emails (#1637)
Sometimes my team shares base tasks. When we get an error email, it's sometimes unclear which upstream task requires() the one that failed.
==

luigi/notifications.py
luigi/worker.py
==================
43f2de26;Arash Rouhani;2016-04-08 15:27:31 +0700;Bugfix: Scheduler crashes for some configs
When the 'disable_hard_timeout' is set but 'disable_failures' is not.

The fix is simply to follow the "good" coding practice to not allow
IntParameters to have a None-value as default.

==

luigi/scheduler.py
test/central_planner_test.py
==================
032d2230;Arash Rouhani;2016-04-08 14:36:44 +0700;parameter.py: Rename .__config to ._config_path
It's easier to read now. The member name matches with the name of the
initalization paramter.

==

luigi/parameter.py
==================
f7219c38;Marcel R;2016-04-07 11:35:48 +0200;Add status message endpoints to RPC handler list.
This fixes a bug resulting from the interference of PR #1625 (Task status messages) and PR #1631 (Add explicit whitelist of RPC commands for luigid) task status messages.

To fix this, I simply added ``set_task_status_message`` and ``get_task_status_message`` to the white-listing.
==

luigi/server.py
==================
df4d3a4b;brianestlin;2016-04-07 00:31:51 -0700;Make luigid honor logging_conf_file
Previously the central scheduler implemented it's own non-configurable logging system. In particular there was a strict XOR between logging to stdout and logging to disk.

This patch also adds print() statements in the logging initialization informing what scheduling setup is being used.
==

luigi/cmdline.py
test/cmdline_test.py
==================
f46efc11;Marcel R;2016-04-07 09:25:38 +0200;Add GUI-visible status messages for tasks
This patch adds a primitive for set a "status message" for tasks that re being run(). The message will be visible from the web browser in the central scheduler page.

As was realized during the review for this patch, the multi-argument run() introduced in previous spotify/luigi#1298 doesn't scale, so it got deprecated with this patch.
==

doc/tasks.rst
luigi/contrib/hadoop.py
luigi/contrib/hadoop_jar.py
luigi/contrib/hive.py
luigi/contrib/scalding.py
luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/task.py
luigi/worker.py
test/task_status_message_test.py
test/worker_task_test.py
test/worker_test.py
==================
559df529;Arash Rouhani;2016-04-06 14:14:34 +0700;Release version 2.1.1

==

setup.py
==================
3ad5bbbd;Brian Wallace;2016-04-04 19:48:17 -0700;Add explicit whitelist of RPC commands for luigid

==

luigi/server.py
==================
bf2bd152;Erik Bernhardsson;2016-04-04 18:47:10 -0400;Merge pull request #1614 from dlstadther/add_parameters
Added ListParameter and TupleParameter.
==
==================
c8e1ead3;Fabrizio Demaria;2016-04-05 00:02:27 +0200;Merge pull request #1 from rouzwawi/exit-code
PR on PR
==
==================
50c4aa5a;Rouzbeh Delavari;2016-04-04 13:20:52 +0200;fix failing tests

==

luigi/retcodes.py
test/worker_parallel_scheduling_test.py
==================
20f7ce0e;Jeff Potter;2016-04-03 22:32:53 -0600;Add several extra options to bigquery load configuration
I have basically added missing configuration options that were not exposed for CSV usage.

https://cloud.google.com/bigquery/docs/reference/v2/jobs#configuration.load
==

luigi/contrib/bigquery.py
==================
8b3d2252;Joe Mészáros;2016-04-04 06:17:23 +0200;Clarify wording of "clean slate" in scheduler logging
Replace `clean slate` with `empty state`.

==

luigi/scheduler.py
==================
744febe5;Pete Weissbrod;2016-04-04 00:15:08 -0400;Bug fixes for Hive CLI and Beeline compatibility
When you use beeline instead of hive you can specify hive command in luigi config file but your command may have multiple options. For this reason the load_hive_cmd() method should return an array and not a single string.

When your task has parameters, [self.task_id] has parenthesis and this will cause shell.Popen issues (OsError). Fixed by wrapping [self.task_id] in quotes.
==

luigi/contrib/hive.py
==================
07c1d434;Erik Bernhardsson;2016-04-01 22:23:20 -0400;Merge pull request #1628 from drj42/master
Added module level documentation for a couple use cases of luigi.util
==
==================
a17bad90;Will Jones;2016-04-01 20:07:58 -0400;Added module level documentation for a couple use cases of luigi.util

==

luigi/util.py
==================
ab16e155;Uldis Barbans;2016-04-01 22:56:58 +0200;Merge pull request #1626 from spotify/ulzha/2.1.0
Release version 2.1.0
==
==================
31bcba42;Uldis Barbans;2016-04-01 21:45:16 +0200;2.1.0

==

setup.py
==================
9f0359b4;Dillon Stadther;2016-03-31 14:49:57 -0400;Added test for cli arg parse.

==

test/parameter_test.py
==================
3688c36e;Dillon Stadther;2016-03-31 07:57:45 -0400;Added comment explanation of parse() execution for TupleParameter.

==

luigi/parameter.py
==================
fd571c1c;Dillon Stadther;2016-03-30 15:28:31 -0400;Added tests for List/Tuple Parameter serialize/parse and config read.

==

test/parameter_test.py
==================
0b85daf9;Dillon Stadther;2016-03-30 15:27:42 -0400;Added ListParameter and TupleParameter.

==

luigi/__init__.py
luigi/parameter.py
==================
fb3d6426;Fabrizio Demaria;2016-03-30 12:47:05 +0200;Add tests for unwanted return code 0
Four cases:
- Fail in complete()
- Fail in requires()
- Fail in _validate_dependency()
- Exceed task limit

Luigi return value shouldn't be 0 in these cases.

==

test/retcodes_test.py
==================
3ec46d29;Fabrizio Demaria;2016-03-29 19:06:51 +0200;Re-raise exceptions to trigger "unhandled_exception"
When the error is not from complete() or requires()

==

luigi/worker.py
==================
f4a4821d;Fabrizio Demaria;2016-03-29 15:33:00 +0100;Return code for 'requires()' exception

==

doc/configuration.rst
luigi/execution_summary.py
luigi/retcodes.py
luigi/worker.py
test/execution_summary_test.py
==================
d7464bd5;Arash Rouhani;2016-03-31 17:18:46 +0700;Merge pull request #1620 from remind101/task-id-index
Add an index on task_events.task_id.
==
==================
19dbe2ad;Brian Estlin;2016-03-30 18:02:25 -0700;Add an index on task_events.task_id.

==

luigi/db_task_history.py
==================
5343d08c;Fabrizio Demaria;2016-03-24 11:16:27 +0100;Return code for 'check_complete' exception
If complete() check fails with an exception, the corresponding task
is scheduled with status UNKNOWN.
Downstream tasks' status would be: "upstream_unverifiable_dependency".
Luigi return code can be set for this particular case.

==

doc/configuration.rst
luigi/execution_summary.py
luigi/retcodes.py
luigi/worker.py
test/execution_summary_test.py
==================
a29078c1;Arash Rouhani;2016-03-29 17:23:04 +0700;Merge pull request #1610 from spotify/Tarrasch-patch-1
Fix spelling error in central_planner_test.py
==
==================
c9f50918;Arash Rouhani;2016-03-29 11:26:40 +0700;Fix spelling error in central_planner_test.py

==

test/central_planner_test.py
==================
d3d9b965;Arash Rouhani;2016-03-29 09:11:28 +0700;Merge pull request #1609 from Houzz/pickle_externalized_tasks
Sets task.run to None instead of NotImplemented in ExternalTasks
==
==================
85a64f49;Dave Buchfuhrer;2016-03-25 13:42:37 -0700;Sets task.run to None instead of NotImplemented in ExternalTasks
Using NotImplemented prevents externalized tasks from being pickled, preventing
the use of parallel scheduling due to pickle being the serializer used in
multiprocessing. This uses the picklable None instead, resolving #1608

==

luigi/task.py
luigi/worker.py
test/task_test.py
test/worker_test.py
==================
bf719409;Arash Rouhani;2016-03-25 09:00:47 +0700;Merge pull request #1606 from spotify/Tarrasch-patch-1
EnumParameter docs: Use Enum not IntEnum
==
==================
17db922c;Arash Rouhani;2016-03-24 17:13:47 +0700;EnumParameter docs: Use Enum not IntEnum
I think at some point IntEnum was preferable as you wouldn't run into the bug fixed by #1487, but that's not relevant any more. Let's change this example to avoid creating a misconception that you need to use IntEnums.
==

luigi/parameter.py
==================
a9fbf960;Arash Rouhani;2016-03-24 15:39:05 +0700;EnumParameter docs: Encourage singular enums
The official python docs use singular form everywhere. [1]

Also add another model, just to clarify that it's actually an enumeration.

[1]: https://docs.python.org/3/library/enum.html
==

luigi/parameter.py
==================
8cd2647d;Arash Rouhani;2016-03-23 10:02:06 +0700;Merge pull request #1603 from Tarrasch/refactor_scheduler
Fix pruning in the scheduler
==
==================
736c0f13;Arash Rouhani;2016-03-22 17:29:31 +0700;assistants bugfix: Also prune UNKNOWN tasks
I'll only motivate this lightly as I assume the previous mistake was a
(serious) oversight.  This bug is a bit hard to realize, because when
you visit the scheduler in the browser the UNKNOWN tasks are not shown
so you don't see them accumulating.  You only notice that the page loads
slower for each day.

In our scheduler instance, there are currently 90% UNKNOWN tasks, most
of which would be pruned after this patch is applied. 90% because its
current uptime is 10 days. The 9 previous days have almost exclusively
UNKNOWN tasks meanwhile today has almost exclusively known tasks.

==

luigi/scheduler.py
test/central_planner_test.py
==================
a822f55d;Arash Rouhani;2016-03-22 11:14:47 +0700;Scheduler: Refactor and bugfix task pruning
 * Seperate methods of logic and methods meant for side effects
   (See hard-to-catch bugfix in spotify/luigi#1500)
 * Funnily enough, spotify/luigi#1500 also introduced the bug of the
   scheudler logging info like "I'm now deleting task X" even though
   task X is never deleted.

For the later I didn't bother to write a test as logging is too hard
test.

==

luigi/scheduler.py
==================
38f7546f;Arash Rouhani;2016-03-21 17:41:41 +0700;scheduler.py: Refactor Scheduler.prune()
Split it into two methods. Making their symmetric structure a bit more
obvious and decreasing the average complexity per method.

==

luigi/scheduler.py
==================
cbe03183;Arash Rouhani;2016-03-22 09:08:28 +0700;Merge pull request #1601 from constantijn/master
Luigi tasks for google dataproc
==
==================
55b04a25;Constantijn Visinescu;2016-03-21 18:43:21 +0100;Updated the way asks get run and added more documentation

==

luigi/contrib/dataproc.py
test/contrib/dataproc_test.py
==================
f6d1600e;Erik Bernhardsson;2016-03-20 22:26:25 -0400;Merge pull request #1602 from dlstadther/ftp_fix
Fix ftp exists(...)
==
==================
bdfd2253;Dillon Stadther;2016-03-18 13:27:29 -0400;Fixed _ftp_exists(...) method. Previously called nlst(path) on full path including filename and extention. This only worked if the file existed.

==

luigi/contrib/ftp.py
==================
43b41f41;Constantijn Visinescu;2016-03-18 16:40:18 +0100;Luigi tasks for google dataproc

==

.travis.yml
luigi/contrib/dataproc.py
test/contrib/dataproc_test.py
tox.ini
==================
761ce2b2;Erik Bernhardsson;2016-03-18 10:48:30 -0400;Merge pull request #1596 from Fsero/s3_assume_role
attempt to give luigi s3 module assume role support
==
==================
75e0d45e;Fabian Selles Rosa;2016-03-15 12:49:31 +0100;Attempt to give luigi s3 module assume role support

==

luigi/s3.py
test/s3_test.py
==================
7db1cead;Erik Bernhardsson;2016-03-17 12:22:09 -0400;Merge pull request #1600 from dlstadther/temp_sf
Salesforce - Improve Matching and Remove Unnecessary Complication.
==
==================
59eb9dc5;Dillon Stadther;2016-03-17 08:08:14 -0400;Don't make every response an ordereddict. The order of the dictionary fields don't matter here.What matters is that the list of dicts is in the appropriate order if one specifies an order by within their SOQL. Since lists maintain order, this is good."
Rather than checking if the value is a string, check that it's not a data structure (by checking just for basestring, we miss ints and floats).

==

luigi/contrib/salesforce.py
==================
df8783bb;Erik Bernhardsson;2016-03-16 11:44:19 -0400;Merge pull request #1597 from dlstadther/sf-patch
Salesforce - Improved Reliability
==
==================
f6f3b80f;Dillon Stadther;2016-03-16 10:23:51 -0400;Updated to use iteration (over recursion) and TempFiles to avoid segmentation faults due to massive recursion and extremely large datasets from salesforce.

==

luigi/contrib/salesforce.py
==================
a43f374e;Arash Rouhani;2016-03-16 09:13:21 +0700;Merge pull request #1585 from dlstadther/sftp
Added support for SFTP.
==
==================
ff3ec135;Erik Bernhardsson;2016-03-15 12:11:06 -0400;Merge pull request #1595 from jewer/master
Add DJ/WSJ to list of companies.
==
==================
b78ef726;Joshua Ewer;2016-03-15 09:01:14 -0500;Add DJ/WSJ to list of companies.

==

README.rst
==================
eaed30b1;Arash Rouhani;2016-03-15 17:47:45 +0700;Merge pull request #1592 from Tarrasch/remove-scheduler-backwardcompats
Remove scheduler backwardcompats
==
==================
b8630cc5;Arash Rouhani;2016-03-15 09:43:26 +0700;Merge pull request #1593 from dlstadther/query-fix
Fix incorrect usage of Redshift/PostgresQuery 'query' property.
==
==================
aee63a30;Dillon Stadther;2016-03-14 10:31:06 -0400;Corrected usage of 'query' as it was defined as a property, but reference and used as if it were a method.

==

luigi/postgres.py
test/postgres_test.py
==================
6f0a843e;Arash Rouhani;2016-03-14 10:01:31 +0700;scheduler.py: Update comment
config_path or not is not related to underscores vs dashes afair.

==

luigi/scheduler.py
==================
29758a5c;Arash Rouhani;2016-03-14 09:55:35 +0700;Scheduler: Remove backward compatibility code
My motivation for this is

 * We've kept backward compatibility for almost a whole year for these
 * Code base becomes simpler and more enjoyable to read

==

luigi/scheduler.py
test/scheduler_test.py
==================
4b217caa;Arash Rouhani;2016-03-14 09:39:29 +0700;Merge pull request #1589 from Tarrasch/fix-python3-issues-scheduler
Scheduler UI: Fix python3 issues in resources view
==
==================
0a4dd631;Arash Rouhani;2016-03-11 16:10:55 +0700;Scheduler UI: Fix python3 issues in resources view
Previously there was an `AttributeError` stack trace in the logs of the
server and the resources view didn't work.

==

luigi/scheduler.py
==================
16146d7b;Arash Rouhani;2016-03-11 15:44:29 +0700;Merge pull request #1588 from oluies/master
correct example spark_als
==
==================
632d7990;Arash Rouhani;2016-03-11 09:22:28 +0700;Merge pull request #1583 from humanlongevity/s3_multipart_copy
Refactor s3 to s3 copying
==
==================
5cb5ff80;Jason Piper;2016-03-10 21:49:58 +0800;Add s3 directory copy tests
Note that I unfortunately can’t write tests that cover the copying of
multipart files within the directory due to a moto bug in multipart copy

==

test/s3_test.py
==================
a8e5f03d;oluies;2016-03-10 15:37:35 +0100;correct example spark_als

==

examples/spark_als.py
==================
58bd9b44;Jason Piper;2016-03-09 15:42:51 +0800;Refactor s3 to s3 copying

==

luigi/s3.py
test/s3_test.py
==================
490c7747;Arash Rouhani;2016-03-10 17:17:23 +0700;Merge pull request #1574 from enbritely/dict-parameter
Add DictParameter
==
==================
7560b0ad;Joe;2016-03-10 09:11:44 +0100;Update import in parameter, revert setup.py

==

luigi/parameter.py
setup.py
==================
3b0cdb8f;Dillon Stadther;2016-03-08 14:10:52 -0500;Added support for SFTP.

==

luigi/contrib/ftp.py
==================
5869bc58;Erik Bernhardsson;2016-03-09 08:11:47 -0500;Merge pull request #1584 from enbritely/enbritely-company-usage
Add enbrite.ly to companies that use Luigi
==
==================
9bbe43b3;Joe;2016-03-09 13:05:53 +0100;Add enbrite.ly to companies that use Luigi

==

README.rst
==================
0a1150ac;Joe;2016-03-09 11:35:09 +0100;Add parse-serialize test case
It checks whether the parsed input JSON string and the serialized JSON string are equal

==

test/dict_parameter_test.py
==================
8b7319af;Joe;2016-03-09 11:34:34 +0100;Update dict param docs with tag based exammple

==

luigi/parameter.py
==================
1208f86c;Joe;2016-03-08 09:50:59 +0100;Add test cases for DictParameter

==

test/dict_parameter_test.py
==================
5ff3ef5b;Joe;2016-03-03 12:38:53 +0100;Use immutable and ordered dict in DictParameter
- Add when-to-use guide doctsring
- Add FrozenOrderedDict implementation
- Reshaped dict parameter parsing and serialization to use ordered and immutable dictionaries

==

luigi/parameter.py
setup.py
==================
46ff8706;Joe;2016-03-01 12:53:06 +0100;Add DictParameter

==

luigi/__init__.py
luigi/parameter.py
setup.py
==================
d0e573c2;Erik Bernhardsson;2016-03-08 13:20:06 -0500;Merge pull request #1581 from enbritely/fix-doc-generation
Fix documentation generation
==
==================
4d90a6c7;Joe;2016-03-08 15:51:14 +0100;Fix documentation generation
- Specify language for each and every code block
- Use ini lexer for luigid config blocks
- Use prompt in console blocks everywhere

==

doc/central_scheduler.rst
doc/command_line.rst
doc/configuration.rst
doc/example_top_artists.rst
doc/execution_model.rst
doc/luigi_patterns.rst
doc/parameters.rst
luigi/notifications.py
luigi/parameter.py
==================
e864ff9b;Erik Bernhardsson;2016-03-07 10:53:50 -0500;Merge pull request #1579 from compete/topics/speedup_get_work
Speeds up get_work with a number of small tweaks
==
==================
4dfdbaf2;David Thompson;2016-03-02 17:03:22 -0500;Speeds up get_work with a number of small tweaks
Some profiling of get_work under different scheduler-state scenarios
showed some obvious areas for improvement without major algo changes.

The biggest contributor was in _upstream_status where the task_stack was
being re-allocated rather than appended-to (_upstream_status is used in
other places as well like task_list).

A remaining area for optimization is the sorting of pending tasks that
happens for each call; this would be a bigger change.

==

luigi/scheduler.py
==================
24ed6a42;Erik Bernhardsson;2016-03-03 20:33:10 -0500;Merge pull request #1577 from Houzz/task_id_str
Moves task id computation into a separate function in task.py
==
==================
45907078;Dave Buchfuhrer;2016-03-03 15:12:58 -0800;Moves task id computation into a separate function in task.py
This allows re-use of the task id logic if necessary in other places. This is
necessary because task ids need to be consistent everywhere for the same task
if we want consistency in the scheduler.
==

luigi/task.py
==================
87bd3779;Erik Bernhardsson;2016-03-01 07:54:04 -0500;Merge pull request #1572 from dlstadther/ftp
Added optional timeout to ftp connection. Default set to 60 seconds.
==
==================
e5e5328b;Erik Bernhardsson;2016-03-01 07:53:59 -0500;Merge pull request #1570 from Houzz/hide_done
Optionally hides DONE nodes in dependency graph
==
==================
b9a630ac;Erik Bernhardsson;2016-03-01 07:53:36 -0500;Merge pull request #1569 from Houzz/unknown_graph
Improves display of unknown tasks
==
==================
11cc68ac;Erik Bernhardsson;2016-02-29 11:22:04 -0500;Merge pull request #1564 from Houzz/disable_worker
Adds a disable worker button to the visualiser
==
==================
f0506ab6;Dillon Stadther;2016-02-29 09:03:06 -0500;Added optional timeout to ftp connection. Default set to 60 seconds.

==

luigi/contrib/ftp.py
==================
7ce144db;Erik Bernhardsson;2016-02-28 12:48:50 -0500;Merge pull request #1571 from Luiti/CompaniesUseLuigi
17zuoye.com is using luigi for more than 1 year.
==
==================
90744e62;David Chen;2016-02-28 17:09:30 +0000;17zuoye.com is using luigi for more than 1 year.

==

README.rst
==================
abc7bf02;Dave Buchfuhrer;2016-02-26 10:16:42 -0800;Optionally hides DONE nodes in dependency graph
Often when viewing the dependency graph, I'm trying to figure out why a
particular task hasn't run yet. This can be difficult due to the presence of
hundreds or even thousands of DONE tasks cluttering up the view. In order to aid
debugging, this adds a "Hide Done" checkbox to the dependency graph view in the
visualiser. When checked, the scheduler will ignore DONE tasks (other than the
root) when doing graph traversal (including inverse graph traversal).

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_visualisation_test.py
==================
09822353;Dave Buchfuhrer;2016-02-25 16:33:46 -0800;Improves display of unknown tasks
Rather than showing UNKNOWN as the family for an unknown task id in the
visualiser graph, we can usually successfully infer the family from the task id.
This is far preferable to just showing UNKNOWN, as it provides useful
information while looking at dependency graphs. Including the full task id in
the params dict allows for a little more information to be gleaned.

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
79fd9aee;Lucas Cimon;2016-02-25 17:12:50 +0100;Fallback process command name in lock.getpcmd

==

luigi/lock.py
==================
e5856880;Dave Buchfuhrer;2015-10-06 15:19:52 -0700;Adds a disable worker button to the visualiser
This allows workers to be stopped from the visualiser. Workers disabled in this
way will not be able to schedule new jobs or get_work, but they are able to
finish the jobs they're currently working on. This allows for clean transitions
to newly deployed code or safe shutdown of workers when things are going wrong.

A popup verifies the intent to disable the worker to help prevent accidental
disables.

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
test/central_planner_test.py
==================
2aa296c5;Erik Bernhardsson;2016-02-24 21:59:35 -0500;Merge pull request #1566 from Houzz/resources_tab
Adds a resources tab to the visualiser
==
==================
069653be;Dave Buchfuhrer;2015-09-29 16:21:54 -0700;Adds a resources tab to the visualiser
This tab allows a quick view of resource utilization in the visualiser. It also
shows which jobs are running for each resource, but this information is
collapsed by default. This is very helpful when jobs for debugging/tracking when
jobs for a particular resource are getting backed up.

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
4f7d082c;Erik Bernhardsson;2016-02-24 17:00:33 -0500;Merge pull request #1563 from Houzz/last_update_time
Shows last update time instead of start time in visualizer
==
==================
411926d1;Dave Buchfuhrer;2016-02-24 08:50:44 -0800;Shows last update time instead of start time in visualizer
The time field in the visualiser datatable not very helpful, as I don't really
need to know when a job was scheduled. I usually know that, as I control
scheduling. Instead, I want to know when the job finished or failed or was
disabled. In order to make the time column more useful, this sets the time as
the last time the status was changed. The old start_time field is kept in the
task_list api response for backward compatibility with any tools that might make
that api call.

==

luigi/scheduler.py
luigi/static/visualiser/js/visualiserApp.js
test/central_planner_test.py
==================
d95896c4;Erik Bernhardsson;2016-02-23 22:44:54 -0500;Merge pull request #1561 from qiao-meng-zefr/master
Fix: trim email address
==
==================
271a06f0;Vincent Meng;2016-02-23 18:49:31 -0800;Fix: trim email address

==

luigi/notifications.py
==================
a60521f9;Erik Bernhardsson;2016-02-23 11:13:50 -0500;Merge pull request #1484 from dlstadther/s3
Improved: S3 Copy (files, folders, buckets), optionally based on modified date
==
==================
0f03cba6;Erik Bernhardsson;2016-02-23 08:15:37 -0500;Merge pull request #1533 from rizzatti/metastore
Allows the usage of Hive Metastore
==
==================
7b925889;Erik Bernhardsson;2016-02-23 08:13:36 -0500;Merge pull request #1557 from ngr-t/win-lock
Fix of process locking functionality on Windows
==
==================
fc351333;Dillon Stadther;2016-01-08 09:16:32 -0500;Added multithreading to copy method.

==

luigi/s3.py
==================
abd0b057;NEGORO Tetsuya;2016-02-23 20:29:59 +0900;Fixed luigi.lock.getpcmd to work on Windows.

==

luigi/lock.py
==================
4b3c92ba;José Otávio Rizzatti Ferreira;2016-02-23 02:27:13 -0300;Fix flake8 error

==

luigi/contrib/hive.py
==================
42b2d805;Erik Bernhardsson;2016-02-22 23:06:25 -0500;Merge pull request #1515 from novilabs/use-temp-folder-with-ftp
put temp file into temporary directory and make it relative
==
==================
68d4af8c;Cameron Davison;2016-02-22 11:21:32 -0600;2 spaces for comments

==

luigi/contrib/ftp.py
test/_test_ftp.py
==================
19412fc6;Erik Bernhardsson;2016-02-21 22:03:59 -0500;Merge pull request #1542 from Houzz/viz_display_names
Fixes viz issues triggered by the task_id change
==
==================
a10ecad4;Erik Bernhardsson;2016-02-21 22:03:09 -0500;Merge pull request #1530 from KyleJamesWalker/master
Improve getpcmd
==
==================
485fec10;Erik Bernhardsson;2016-02-21 21:59:00 -0500;Merge pull request #1540 from MezianeMehdi/master
Issue #1539 Can't pass Spark property using the conf when the option contains an equals
==
==================
2feb1386;Erik Bernhardsson;2016-02-21 21:58:22 -0500;Merge pull request #1555 from KyleJamesWalker/opener-target-support
Add OpenerTarget Support.
==
==================
6a159acd;Erik Bernhardsson;2016-02-21 21:57:56 -0500;Merge pull request #1556 from spotify/erikbern/doc-fix
doc fix
==
==================
79f25c2e;Erik Bernhardsson;2016-02-21 21:55:47 -0500;doc fix

==

doc/conf.py
==================
cb389f33;Kyle Walker;2016-02-20 19:09:21 -0800;Add OpenerTarget Support.
Allow a single luigi target to open multiple file system types.  This
can allow for easier local testing, unit test, and greater flexability
of your luigi tasks.

==

luigi/contrib/opener.py
test/contrib/opener_test.py
==================
a50de8bb;Kyle Walker;2016-01-28 15:26:29 -0800;Improve getpcmd
Some versions of busybox's ps do not include the paramaters being used.
For example this function failed on Alpine linux.

Tested on base docker images of Ubuntu, and Apline.

==

luigi/lock.py
==================
abeed6a2;Erik Bernhardsson;2016-02-20 12:53:04 -0500;Merge pull request #1537 from dlstadther/redshift_prune_fix
Redshift Update - init_copy
==
==================
177f2076;Erik Bernhardsson;2016-02-19 11:36:02 -0500;Merge pull request #1554 from humanlongevity/s3_move_args_patch
Pass s3 move kwargs through to copy
==
==================
f9b832be;Jason Piper;2016-02-20 00:26:28 +0800;Pass s3 move kwargs through to copy

==

luigi/s3.py
==================
9e877d9b;Dillon Stadther;2016-01-06 15:30:11 -0500;Added support for listing s3 directories and copying directories based on a file's last modified date.

==

luigi/s3.py
==================
b6b68ae8;Dillon Stadther;2016-01-05 09:00:36 -0500;Added support for bucket copy. Previously only supported folder copy.

==

luigi/s3.py
==================
abd73584;Erik Bernhardsson;2016-02-19 07:34:09 -0500;Merge pull request #1469 from humanlongevity/master
Enable multipart S3 Copy
==
==================
d47b575d;Erik Bernhardsson;2016-02-12 10:24:11 -0500;Merge pull request #1545 from mewwts/patch-1
Add Schibsted to companies that use Luigi.
==
==================
00225ea8;Erik Bernhardsson;2016-02-12 10:23:31 -0500;Merge pull request #1544 from jeremyjjbrown/master
Issue #1535 Python is strongly but not statically typed.
==
==================
fc80728e;Mats Julian Olsen;2016-02-12 15:06:00 +0100;Add Schibsted to companys that use Luigi.

==

README.rst
==================
8fda6164;Jeremy Brown;2016-02-11 18:04:59 -0600;Issue #1535 Python is statically but not strongly typed.

==

doc/parameters.rst
==================
897c9d9b;Dave Buchfuhrer;2016-02-09 16:16:55 -0800;Uses display name for graph title in visualiser

==

luigi/scheduler.py
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_visualisation_test.py
==================
009f9b4c;Dave Buchfuhrer;2016-02-09 16:02:52 -0800;Shows display name in graph error popups

==

luigi/scheduler.py
luigi/static/visualiser/index.html
==================
cb043d9b;Dave Buchfuhrer;2016-02-09 16:01:47 -0800;Shows display name for first task in workers tab

==

luigi/scheduler.py
luigi/static/visualiser/index.html
==================
401b95ea;Dave Buchfuhrer;2016-02-09 15:17:14 -0800;Makes task display names consistent between scheduler and visualiser

==

luigi/scheduler.py
luigi/static/visualiser/index.html
==================
82ef1828;Dave Buchfuhrer;2016-02-09 14:12:08 -0800;Fixes server-side filtering of tasks in scheduler
Server-side filtering of tasks broke when task ids changed from the string
representation of a Task object to a truncated, cleaned up combination of
parameter values and a partial md5 hash. To fix this, we reconstruct a pretty
id more similar to the old value that was matched against for server-side task
filtering.

==

luigi/scheduler.py
test/central_planner_test.py
==================
1e706a89;Mehdi Meziane;2016-02-09 18:52:54 +0100;Add space after comma

==

luigi/contrib/spark.py
==================
dc50e908;Mehdi Meziane;2016-02-09 17:37:41 +0100;[Spark Configuration] Can't pass Spark property using the conf when the option contains an equals #1539

==

luigi/contrib/spark.py
==================
63e96196;Dillon Stadther;2016-02-08 11:11:30 -0500;Independently check the 3 possible init_copy paths, allowing multiple of them to execute, if applicable.

==

luigi/contrib/redshift.py
==================
4265ace9;José Otávio Rizzatti Ferreira;2016-02-02 19:15:57 -0200;Fix import statement

==

luigi/contrib/hive.py
==================
484a0e4e;José Otávio Rizzatti Ferreira;2015-12-02 10:07:43 -0200;And import the module

==

luigi/contrib/hive.py
==================
3a2fcc9c;José Otávio Rizzatti Ferreira;2015-12-02 10:06:50 -0200;Fix module path to exception

==

luigi/contrib/hive.py
==================
b1a12633;José Otávio Rizzatti Ferreira;2015-12-02 10:01:36 -0200;Rescue from not finding partition

==

luigi/contrib/hive.py
==================
3ce3c494;José Otávio Rizzatti Ferreira;2015-11-29 08:03:42 -0200;Add Metastore as possible client in config

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
e1aaa128;Jason Piper;2016-02-01 01:08:47 +0800;Add s3 copy tests

==

luigi/s3.py
test/s3_test.py
==================
de689875;Jason Piper;2016-01-31 18:45:28 +0800;Better documentation of copy_multipart and improved error checking

==

luigi/s3.py
==================
f771622f;Erik Bernhardsson;2016-01-30 15:41:26 -0500;Merge pull request #1525 from ehdr/rebase-spark-onto-external-program-task
Rebase SparkSubmitTask onto ExternalProgramTask
==
==================
324e4333;Erik Bernhardsson;2016-01-30 15:41:00 -0500;Merge pull request #1527 from chenzhan/master
Add RedshiftUnloadTask class
==
==================
bedbd528;Erik Bernhardsson;2016-01-30 15:40:36 -0500;Merge pull request #1528 from neilisaac/print-hadoop-errors
Add __str__ to HadoopJobError
==
==================
9d9f41b5;Erik Bernhardsson;2016-01-30 15:40:23 -0500;Merge pull request #1532 from master/fix-s3flagtarget
Make `S3FlagTarget` correctly pass `S3Client` to a parent class.
==
==================
8c88b161;chenzhan;2016-01-29 23:55:12 -0800;Fix formatting issues reporte by travis ci

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
56b7763e;chenzhan;2016-01-29 17:43:51 -0800;Clean up RedshiftUnloadTask and add test

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
81dd8a5b;Oleg Smirnov;2016-01-29 15:00:45 +0100;Make S3FlagTarget correctly pass S3Client to a parent class.

==

luigi/s3.py
==================
ec0539ea;Arash Rouhani;2016-01-29 14:38:59 +0700;Merge pull request #1531 from pfhayes/warning
Use updated message check
==
==================
773342b4;Patrick Hayes;2016-01-28 17:45:05 -0800;Use updated message check
The previous code triggers a DeprecationWarning

"""
DeprecationWarning: BaseException.message has been deprecated as of
Python 2.6
"""

==

luigi/worker.py
==================
3a95161c;Neil Isaac;2016-01-27 23:47:29 -0500;Add __str__ to HadoopJobError

==

luigi/contrib/hadoop.py
==================
943decdd;chenzhan;2016-01-27 17:17:59 -0800;Cleaned up RedshiftUnloadTask

==

luigi/contrib/redshift.py
==================
42b3d5fd;chenzhan;2016-01-27 14:04:20 -0800;Add RedshiftUnloadTask class
To export data from Redshift to s3. This is normally done by calling
a SQL command "UNLOAD". However it requires s3 credentials and some
other parameters. This class serves as a template for these tasks.

==

luigi/contrib/redshift.py
==================
a0417c64;Eric Hansander;2016-01-26 23:38:44 +0100;Rebase SparkSubmitTask onto ExternalProgramTask
The public interface of `SparkSubmitTask` remains as-is.

However, there will be subtle changes to the output to `stdout` and
logs (e.g. 'Program failed[...]' with this patch vs. 'Spark job
failed[...]' before). Also it will raise a `ExternalProgramRunError`
on execution errors instead of a `SparkJobError` as before.

==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
d8ed21f6;Eric Hansander;2016-01-23 15:53:05 +0100;spark: Test that environment is set correctly

==

test/contrib/spark_test.py
==================
927085f3;Eric Hansander;2016-01-23 15:56:20 +0100;spark: Remove unused HdfsJob from test
Seems to be an obsolete left-over from something.

==

test/contrib/spark_test.py
==================
f86700dd;Eric Hansander;2016-01-26 22:45:16 +0100;external_program: Optionally only log stderr on failure
Add a property to ExternalProgramTask, which can be overridden to
only log `stderr` when the program execution fails. The default remains
to always log `stderr`, even if execution succeeds.

==

luigi/contrib/external_program.py
test/contrib/external_program_test.py
==================
a69513de;Arash Rouhani;2016-01-25 11:54:33 +0700;Merge pull request #1524 from spotify/erikbern/copyright-fix
added copyright headers to some files
==
==================
7f7ccdd5;Erik Bernhardsson;2016-01-24 22:12:12 -0500;added copyright headers to some files

==

luigi/__main__.py
luigi/contrib/external_program.py
test/contrib/external_program_test.py
test/helpers_test.py
==================
41a13dbf;Erik Bernhardsson;2016-01-24 21:56:49 -0500;Merge pull request #1520 from ehdr/add-external-program-task
Add ExternalProgramTask for running external programs
==
==================
b1d63491;Eric Hansander;2016-01-24 19:27:39 +0100;external_program: Add module-level docs
Mention that plumbum may be a better alternative, if you need more
advanced shell-like features when executing external programs.

==

luigi/contrib/external_program.py
==================
257e07a9;Eric Hansander;2016-01-21 20:35:22 +0100;Add testcase that doesn't mock Popen

==

test/contrib/external_program_test.py
==================
60f20134;Eric Hansander;2016-01-21 12:48:48 +0100;Make ExternalPythonProgramTask params non-positional
Also improve argument naming.

==

luigi/contrib/external_program.py
==================
df182308;Eric Hansander;2016-01-21 07:40:03 +0100;Add ExternalProgramTask for running external programs
To be used for running any external application or script as a luigi
Task. The code is basically a generalization of `luigi.contrib.spark`.

Also add an `ExternalPythonProgramTask` that allows optionally setting
a virtualenv and extending the `PYTHONPATH`.

==

luigi/contrib/external_program.py
test/contrib/external_program_test.py
==================
1f947ac7;Arash Rouhani;2016-01-24 22:24:20 +0700;Merge pull request #1509 from casey-green/conditional-sigusr1-worker-shutdown
Provide the ability to conditionally install the SIGUSR1 hook on workers
==
==================
19cb4ca5;Arash Rouhani;2016-01-24 22:22:39 +0700;Merge pull request #1517 from casey-green/fix-worker-configs
Update configurations doc to reflect new configuration convention for workers
==
==================
d0df2e29;cgreen;2016-01-17 10:21:12 -0500;Update configurations doc to reflect new configuration convention

==

doc/configuration.rst
luigi/worker.py
==================
b56687aa;cgreen;2016-01-14 08:51:46 -0500;Provide the ability to conditionally install the SIGUSR1 hook on workers.
The reason for this is that we can only install signal hooks inside the main execution thread. So this change provides the ability to skip this if we are programatically launching jobs/creating workers outside the main execution thread.

==

doc/configuration.rst
luigi/worker.py
test/worker_test.py
==================
d5f4fa92;Arash Rouhani;2016-01-24 00:01:01 +0700;Merge pull request #1522 from casey-green/fix-external-task-email-test
Fix test: do not send an email if a task is external and retry-able
==
==================
5568acae;cgreen;2016-01-23 11:04:48 -0500;Do not send an email if a task is external and retry-able

==

luigi/worker.py
==================
b124243e;Arash Rouhani;2016-01-21 17:26:45 +0700;Merge pull request #1514 from benjixx/fix-travis-yml
fix .travis.yml errors reported by http://lint.travis-ci.org/
==
==================
fa25600a;Cameron Davison;2016-01-18 13:18:34 -0600;make sure that we can open the file for reading

==

test/_test_ftp.py
==================
8241c3d1;Cameron Davison;2016-01-18 13:08:39 -0600;changes to _test_ftp to setup an ftp server for the integration test, and then fixes to the recursive logic since that seems broken

==

luigi/contrib/ftp.py
test/_test_ftp.py
==================
88edff15;Arash Rouhani;2016-01-18 09:22:02 +0700;Merge pull request #1518 from pra85/patch-1
Update license year range to 2016
==
==================
6d1e8ccd;Prayag Verma;2016-01-17 23:52:36 +0530;Update license year range to 2016

==

LICENSE
==================
cd2fd168;Arash Rouhani;2016-01-16 07:42:21 +0700;Merge pull request #1513 from spotify/code-of-conduct
README: Add CoC
==
==================
2647b808;Cameron Davison;2016-01-15 13:01:42 -0600;put temp file into temporary directory and make it relative. fixes #1368

==

luigi/contrib/ftp.py
==================
ccfa4756;Benjamin Schwarze;2016-01-15 17:18:13 +0100;fix .travis.yml errors reported by http://lint.travis-ci.org/
Fixes the following reported errors:
- value for cache section is empty, dropping
- in cache section: unexpected key $HOME/.pip-cache, dropping
- specified jdk, but setting is not relevant for python
==

.travis.yml
==================
f2457970;Erik Bernhardsson;2016-01-15 09:27:43 -0500;Merge pull request #1449 from compete/topics/external_tasks_w_deps
Fix issue with complete external tasks having missing deps
==
==================
8c642170;Erik Bernhardsson;2016-01-15 09:26:25 -0500;Merge pull request #1502 from woojing/missing_post_copy
Make to call post_copy in postgres.CopyToTable.copy
==
==================
c200a8d6;Jyrki Pulliainen;2016-01-15 13:14:15 +0100;Move CoC to CONTRIBUTING.rst

==

CONTRIBUTING.rst
README.rst
==================
8ead5e5b;Jyrki Pulliainen;2016-01-15 11:42:40 +0100;README: Add CoC

==

README.rst
==================
36dace6d;Arash Rouhani;2016-01-15 17:31:44 +0700;Merge pull request #1510 from trustyou/sort_tasklist
Sort task families in sidebar alphabetically
==
==================
371bdb01;Arash Rouhani;2016-01-15 11:27:52 +0700;Merge pull request #1508 from thejens/master
Unpack parameter tuples on MixinNaiveBulkComplete
==
==================
4377660c;Arash Rouhani;2016-01-15 11:26:47 +0700;Merge pull request #1493 from hudl/Feature-RedshiftQuery
Add RDBMS Query abstract class, PostgresQuery and RedshiftQuery subclasses (revived)
==
==================
43c744b6;Erik Bernhardsson;2016-01-14 22:36:46 -0500;Merge pull request #1511 from lebolo/master
Allow deps.py tool to print tasks with multiple outputs
==
==================
eb672de3;lebolo;2016-01-14 19:49:14 -0500;Convert to Py3 print function and remove unicode strings

==

luigi/tools/deps.py
==================
eff1d763;lebolo;2016-01-14 16:34:00 -0500;Allow deps.py tool to print tasks with multiple outputs

==

luigi/tools/deps.py
==================
d7cca8cc;Johannes Huber;2016-01-14 15:48:10 +0100;Sort task families in sidebar alphabetically

==

luigi/static/visualiser/js/visualiserApp.js
==================
24ad191b;Jens Larsson;2016-01-13 21:49:26 +0100;Unpack parameter tuples on MixinNaiveBulkComplete

==

luigi/task.py
test/task_bulk_complete_test.py
==================
c09e4c89;Arash Rouhani;2016-01-14 09:06:34 +0700;Merge pull request #1503 from Tarrasch/disable-visualiser-tests
tests: Disable visualiser tests
==
==================
7a2be13f;woojing;2016-01-13 18:17:54 +0900;Merge remote-tracking branch 'luigi/master' into missing_post_copy

==
==================
c581bfd2;Arash Rouhani;2016-01-13 15:46:49 +0700;Merge pull request #1504 from Tarrasch/fix-flake8-issues
flake8: Comply to E731 and E402
==
==================
6a8ceb02;Arash Rouhani;2016-01-13 14:50:48 +0700;Merge pull request #1500 from casey-green/assistant-worker-task-retry
Assistant workers never retry failed tasks
==
==================
d78bcdc3;Arash Rouhani;2016-01-13 14:45:16 +0700;flake8: Comply to E731 and E402
This unbreaks the build too. For some reason, the world of internet
changed again and our `tox -e flake8` environment suddenly started to
check these new errors.

==

doc/conf.py
luigi/contrib/hadoop.py
luigi/contrib/hdfs/__init__.py
luigi/contrib/pig.py
luigi/scheduler.py
test/clone_test.py
test/visualiser/visualiser_test.py
==================
8564b7b8;Arash Rouhani;2016-01-13 14:28:14 +0700;tests: Disable visualiser tests
Caused so much maintainer pain due to intermittent failures.

==

.travis.yml
==================
96f2b5a9;cgreen;2016-01-12 14:56:22 -0500;bugfix: assistant workers not retrying failed tasks

==

luigi/scheduler.py
test/central_planner_test.py
==================
7c757afa;woojing;2016-01-13 13:43:18 +0900;Make to call post_copy in postgres.CopyToTable.copy

==

luigi/postgres.py
==================
e38392a1;Erik Bernhardsson;2016-01-10 19:40:05 -0500;Merge pull request #1497 from riga/fixLocalSchedTaskHist
Disable task history for local scheduler.
==
==================
c3992235;Erik Bernhardsson;2016-01-10 19:39:38 -0500;Merge pull request #1498 from nchammas/pickle-exception
Catch more specific pickling errors
==
==================
75986d68;Nicholas Chammas;2016-01-10 12:07:16 -0500;catch specific pickling errors

==

test/worker_parallel_scheduling_test.py
==================
73a2ccec;marcel;2016-01-10 15:57:24 +0100;Add test case for local scheduler with disabled task history.

==

test/scheduler_test.py
==================
6a7b9567;Erik Bernhardsson;2016-01-09 22:03:10 -0500;Merge pull request #1494 from nchammas/patch-1
Support Python 3.5
==
==================
370447f2;Nicholas Chammas;2016-01-08 15:05:12 -0500;Support Python 3.5

==

.travis.yml
README.rst
setup.py
test/worker_parallel_scheduling_test.py
tox.ini
==================
ce4e58bf;marcel;2016-01-09 20:05:20 +0100;Disable task history for local scheduler.

==

luigi/interface.py
==================
fbc25194;Alex DeBrie;2016-01-08 20:09:24 +0000;Fix test to new task_id format

==

test/postgres_test.py
==================
f211a5f6;Alex DeBrie;2016-01-08 18:45:44 +0000;Small tweaks and fix flake8

==

luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/postgres.py
test/postgres_test.py
==================
b19ae148;Andrew Mo;2015-10-10 22:56:37 -0700;Update postgres test

==

luigi/contrib/rdbms.py
luigi/contrib/redshift.py
test/postgres_test.py
==================
835cca03;Andrew Mo;2015-10-07 23:21:01 -0700;Add RDBMS abstract Query task and PostgresQuery / RedshiftQuery subclasses

==

luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/postgres.py
==================
ec0d61e4;Erik Bernhardsson;2016-01-08 10:34:08 -0500;Merge pull request #1480 from Tarrasch/make_move_operations_part_of_fs_target
Add move operations into the fs target interface
==
==================
a5046a90;Erik Bernhardsson;2016-01-08 10:33:25 -0500;Merge pull request #1456 from bmaggard/master
fix for 'allow binary opens'
==
==================
67b39ea6;Erik Bernhardsson;2016-01-08 10:32:35 -0500;Merge pull request #1404 from dlstadther/salesforce
Salesforce Bulk API Connection + Bulk and REST Query Implementations
==
==================
707f84f3;Erik Bernhardsson;2016-01-08 06:28:17 -0500;Merge pull request #1489 from palicand/do-not-force-tls
Added a config option to disable TLS in SMTP entirely.
==
==================
4427be9c;Andrej Palicka;2016-01-08 10:53:35 +0100;negated the new option implemented tests

==

doc/configuration.rst
luigi/notifications.py
test/notifications_test.py
==================
f01ac8c5;Arash Rouhani;2016-01-08 09:31:17 +0700;Merge pull request #1482 from Tarrasch/enable-webhdfs-for-cdh
Make webhdfs tests for for cdh and recent hdp
==
==================
29852f67;Erik Bernhardsson;2016-01-07 20:10:51 -0500;Merge pull request #1490 from blacker/blacker/flatten
allow for use of BigQuery's flatten results flag
==
==================
c4599c79;Ben Lacker;2016-01-07 18:32:27 -0500;test use of BigQuery's flatten results flag

==

test/contrib/bigquery_test.py
==================
9bc9a816;Ben Lacker;2016-01-07 11:20:45 -0500;allow for use of BigQuery's flatten results flag

==

luigi/contrib/bigquery.py
==================
95ac9062;Andrej Palicka;2016-01-07 16:55:54 +0100;Added a config option to disable TLS entirely.

==

doc/configuration.rst
luigi/notifications.py
test/notifications_test.py
==================
9d79cbd6;Erik Bernhardsson;2016-01-07 06:49:59 -0500;Merge pull request #1487 from Tarrasch/fix_execution_summary_for_unsortables
execution summary: Don't crash on uncomparables
==
==================
21fb9484;Erik Bernhardsson;2016-01-07 06:49:14 -0500;Merge pull request #1488 from Tarrasch/update_gitignore
gitignore: Ignore .hypothesis/
==
==================
39851060;Arash Rouhani;2016-01-07 17:35:52 +0700;gitignore: Ignore .hypothesis/
afaict it's the python quickcheck library that stores it's stuff.

==

.gitignore
==================
dd37d973;Arash Rouhani;2016-01-07 17:33:10 +0700;execution summary: Don't crash on uncomparables
This has become increasingly important since spotify/luigi#1479 where
EnumParameters have been introduced (which are normally not sortable)

==

luigi/execution_summary.py
test/execution_summary_test.py
==================
fb9c94c8;Arash Rouhani;2016-01-05 15:28:53 +0700;Make webhdfs tests work for cdh
The webhdfs tests were only working for hdp, which relied on a debug
output line from an old hdp version.

This commit:

  * Fixes port discovery for webhdfs tests for new hadoop versions
  * Updates hdp verion dependency (from Hadoop version 2.2 to 2.6)

==

scripts/ci/setup_hadoop_env.sh
test/contrib/hdfs/webhdfs_client_test.py
test/webhdfs_minicluster.py
==================
9d01d43b;Arash Rouhani;2016-01-06 09:11:48 +0700;Merge pull request #1486 from compete/topics/suppress_s3_boto_warning
Move s3 boto import to avoid un-needed warnings
==
==================
5bbad3ce;Brad Maggard;2016-01-05 14:14:56 -0500;fix previous mistake of removing whitespace

==

test/file_test.py
==================
47b45bb2;David Thompson;2016-01-05 10:45:56 -0500;Move s3 boto import to avoid un-needed warnings
Rather than warning, we can just fail if we try to actually use an S3
target without boto.  This allows for use cases where s3 module is
imported but an S3 target is not actually used.

Fixes #1485

==

luigi/s3.py
==================
e8c4c53a;Brad Maggard;2016-01-05 08:48:57 -0500;more stylistic compliance

==

test/file_test.py
==================
0bdb009a;Arash Rouhani;2016-01-04 14:57:28 +0700;Add move operations into the fs target interface
Also, make so that `rename_dont_move` reports success/failure by raising
exceptions instead of returning a bool value. As it's kind of
unexpected and unpythonic to return True/False based on success or not.

Other small changes:

 * Since we standardize on "move()" but all hdfs clients call their
   operation "rename()", we could capture this difference nicely in the
   common client.
 * Make aborted atomic writes delete (and not trash) the temporary data.
   This plays nice when you use the webhdfs client which doesn't support
   removing to trash.
 * Add tests for the "move()" and "rename_dont_move()" operations on the
   target level. Hopefully this will catch any breakage and increase
   code coverage as most file system implementations test against that
   mixin.

==

luigi/contrib/gcs.py
luigi/contrib/hdfs/abstract_client.py
luigi/contrib/hdfs/format.py
luigi/contrib/hdfs/hadoopcli_clients.py
luigi/contrib/hdfs/snakebite_client.py
luigi/contrib/hdfs/target.py
luigi/contrib/hdfs/webhdfs_client.py
luigi/file.py
luigi/s3.py
luigi/target.py
test/contrib/hdfs_test.py
test/contrib/test_ssh.py
test/file_test.py
test/snakebite_test.py
test/target_test.py
==================
1dc96538;Brad Maggard;2016-01-05 05:19:41 +0000;next time, I'll read pep8

==

test/file_test.py
==================
4460b98a;Arash Rouhani;2016-01-05 11:10:57 +0700;Merge pull request #1471 from Tarrasch/fix-email-colors
notifications: More emails with proper coloring
==
==================
c71801be;Brad Maggard;2016-01-04 21:45:39 +0000;fix flake8 formatting errors

==

luigi/file.py
test/file_test.py
==================
7da44202;Brad Maggard;2016-01-04 20:52:21 +0000;Merge remote branch 'upstream/master' resolve merge conflict in 'file' after squash Conflicts: 	luigi/file.py

==
==================
3ac680fa;Erik Bernhardsson;2016-01-03 18:42:55 -0500;Merge pull request #1479 from jimjh/add-enum
add EnumParameter
==
==================
b9f7ba60;J. Lim;2016-01-03 11:12:24 -0800;update docs for EnumParameter

==

luigi/parameter.py
==================
5e2edf68;J. Lim;2015-12-31 12:00:46 -0800;add EnumParameter

==

luigi/__init__.py
luigi/parameter.py
test/parameter_test.py
tox.ini
==================
bef4aef3;Erik Bernhardsson;2015-12-31 09:43:42 -0500;Merge pull request #1478 from allenlz/master
Clean inner counter after flush
==
==================
ce80736a;Dillon Stadther;2015-11-16 15:31:31 -0500;Added general support for Bulk Salesforce actions. Added specific support for SF bulk query.
Added support for REST API queries.

==

luigi/contrib/salesforce.py
==================
7d707628;Allen Lee;2015-12-31 17:58:37 +0800;Clean inner counter after flush

==

luigi/contrib/hadoop.py
==================
9e544e33;Jason Piper;2015-12-31 16:17:44 +0800;Fix for multipart folder copy

==

luigi/s3.py
==================
fbb0e1fa;Arash Rouhani;2015-12-31 11:13:28 +0700;Merge pull request #1473 from vine/datetime_normalize
Change the way chrono parameters (date/datetime) are handled.
==
==================
13db85d1;Arash Rouhani;2015-12-31 10:55:33 +0700;Merge pull request #1477 from ryantuck/master
fix code snippet example for Task.run doc section
==
==================
c9d7f9e3;Ryan Tuck;2015-12-30 22:47:19 -0500;fix code snippet example for Task.run doc section

==

doc/tasks.rst
==================
f9562627;Mike Kaplinskiy;2015-12-16 18:12:52 -0800;Change the way chrono parameters (date/datetime) are handled.
 - Split date & datetime - the similarities only work due to duck typing; dates & datetimes are different objects. It becomes much easier to reason about the implementation when you know whether the value is a date or a datetime.
 - Add interval & start to both date & datetime params to handle the "every N minutes/hours/days/months/years" case.
   - These are clamped in normalize() so even if you pass e.g. 3PM to an every 2 hours task, the actual value of the parameter will become 2PM.

==

luigi/parameter.py
test/parameter_test.py
==================
2df9d5fe;Arash Rouhani;2015-12-30 16:08:06 +0700;Merge pull request #1475 from allenlz/master
Remove redundant init_mapper/init_reducer calls in LocalJobRunner
==
==================
b0708dbb;Allen Lee;2015-12-30 16:10:40 +0800;Remove redundant init_mapper/init_reducer calls in LocalJobRunner

==

luigi/contrib/hadoop.py
==================
f93d614a;Arash Rouhani;2015-12-29 15:05:38 +0700;notifications: More emails and proper coloring
This commits contains the following changes:

 * Make luigi send emails for task timeouts
 * Make luigi send emails for when task process dies
 * When sending normal run() failures, do proper pygments coloring
 * Remove code duplication
 * Clean tests and tests what previously was not working

As an effect of properly rendering stack traces with pygments, the
"expl" field in the worker-internal result_queue will not contain
json encoded fields anymore. We instead encode the field just before
submitting it to the scheduler. I believe this should make sense.

==

luigi/worker.py
test/worker_task_test.py
test/worker_test.py
==================
2959b83f;Arash Rouhani;2015-12-29 17:33:16 +0700;Merge pull request #1472 from Tarrasch/fix-mysql-error
Unbreak build: Remove external mysql dependency
==
==================
aae86004;Arash Rouhani;2015-12-29 16:53:45 +0700;Unbreak build: Remove external mysql dependency
Lets merge asap, HEAD has been broken for many days!

==

tox.ini
==================
4c055877;Brad Maggard;2015-12-09 19:18:56 +0000;allow binary opens

==

luigi/file.py
test/file_test.py
==================
22dd0e00;Arash Rouhani;2015-12-28 13:34:18 +0700;Merge pull request #1463 from dlstadther/rdbms
Fixed: Rdbms and Redshift Properties
==
==================
e27aabda;Arash Rouhani;2015-12-28 13:32:56 +0700;Merge pull request #1461 from vine/normalize
Add normalize(v) to Parameter to do pre-processing on arguments passed to Task
==
==================
dd9718b7;Arash Rouhani;2015-12-28 10:00:05 +0700;Merge pull request #1464 from Tarrasch/notifications_fixes
Notifications fixes
==
==================
98999751;Jason Piper;2015-12-25 13:03:21 +0800;Enable multithreaded S3 copy

==

luigi/s3.py
==================
b8437d07;Jason Piper;2015-12-25 04:30:13 +0800;Enable multipart S3 Copy

==

luigi/s3.py
==================
a3428c76;Erik Bernhardsson;2015-12-24 11:48:04 -0600;Merge pull request #1468 from deuxpi/format-chunked-read
Format classes will not read whole files in memory
==
==================
ebeea8b5;Philippe Gauthier;2015-12-23 16:46:44 -0500;Format classes will not read whole files in memory
If an input pipe did not provide a file descriptor via a fileno()
method (such as a S3 key object), the whole input data was read in
memory to be written to a temporary file. To avoid using too much
memory and improve efficiency, the data is copied immediately by
chunks of the size of the file system blocks. This does not affect
most cases of Format classes which pass a file descriptor to the
subprocess.

Fixes issue #1467.

==

luigi/format.py
==================
8a4d523d;Arash Rouhani;2015-12-23 09:13:34 +0700;Merge pull request #1465 from mbruggmann/bq-create-view
bigquery: New task to create views.
==
==================
b4e3da67;Erik Bernhardsson;2015-12-22 06:07:34 -0500;Merge pull request #1466 from stephenpascoe/visualiser-params
Display parameters in visualiser as "k=v, ..." instead of raw JSON.
==
==================
b9ea531b;Stephen Pascoe;2015-12-21 18:39:56 +0000;Display parameters in visualiser as "k=v, ..." instead of raw JSON.

==

luigi/static/visualiser/js/visualiserApp.js
==================
8277559d;Marc Bruggmann;2015-12-21 13:19:48 +0100;bigquery: New task to create views.

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
acd5d578;Steven Sklar;2015-12-09 11:00:54 -0500;smtp: Check starttls support before using it
Previously you would get an error that the mail server does not support
starttls.

Original commit by @sklarsa. Squashed and reworded by @Tarrasch

Signed-off-by: Arash Rouhani <arashrk@vng.com.vn>

==

luigi/notifications.py
==================
7c18a95c;Arash Rouhani;2015-12-21 15:25:39 +0700;notifications.py: Update documentation
Hopefully this gives a little bit of direction for this module.

==

luigi/notifications.py
==================
40e66284;Arash Rouhani;2015-12-21 15:20:36 +0700;worker: Refactor usage of notifications module
This commit is to prepare for further cleanup. This commit should not
change behaviour.

==

luigi/worker.py
==================
1a29a62c;Arash Rouhani;2015-12-21 14:55:57 +0700;Add TestNotificationsTask helper task
Its purpose is described in pydocs. I managed to successfully use it as
described in the docs and I think it can be useful for others.

==

luigi/notifications.py
==================
7c1ed63a;Dillon Stadther;2015-11-18 09:46:48 -0500;Changed s3_load_path to @abc.abstractmethod as intended by PR #1096.

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
cc85c4d7;Dillon Stadther;2015-11-12 09:02:01 -0500;Changed Rdbms' update_id to a property. Appropriate changes were made to Redshift.py and Postgres.py. Changed Redshift's do_truncate_table and queries to properties. Fixed reference to properties as self.<property> rather than previous methods self.<property_method>().

==

luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/postgres.py
==================
acb66db4;Arash Rouhani;2015-12-17 23:23:22 +0700;Merge pull request #1453 from TodayTix/hotfix_redshift_table_creation
Fixed: Broken Redshift Table Creation
==
==================
8ec9963e;Mike Kaplinskiy;2015-12-16 18:12:30 -0800;Add normalize(v) to Parameter to do pre-processing on arguments passed to Task.
This can be used for validation as well, but for the sake of back-compat we'll just introduce the functionality. This starts fixing issue 1273.

==

luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
fc782afe;Arash Rouhani;2015-12-17 09:17:59 +0700;Merge pull request #1460 from adamgreenhall/change-multi-worker-logging
log scheduler updates with multi workers as DEBUG
==
==================
b88473e7;Adam Greenhall;2015-12-16 11:48:06 -0800;log scheduler updates with multi workers as DEBUG

==

luigi/worker.py
==================
f3dcb542;Erik Bernhardsson;2015-12-16 09:47:36 -0500;Merge pull request #1444 from stephenpascoe/task_id_hashing
Task id hashing
==
==================
66ff3c5f;Stephen Pascoe;2015-12-14 15:22:04 +0000;Simplify database migration.  Migration is automatic and does not rely on a version number.
Ensure working HTTPretty package

==

luigi/db_task_history.py
luigi/tools/migrate.py
tox.ini
==================
8b3988c4;Stephen Pascoe;2015-12-03 09:56:46 +0000;Implement only alphanumeric chars in task_id, with test
All chars not [A-Za-z0-9_] are converted to "_".

==

luigi/task.py
test/task_serialize_test.py
==================
82812f81;Stephen Pascoe;2015-11-23 10:25:04 +0000;Add task_id to the db_task_history schema.
Add a simple database migration script to add the task_id column.
This script will only upgrade, not downgrade, and assumes standad ALTER TABLE syntax is supported by
the database.

==

.travis.yml
luigi/contrib/sge.py
luigi/db_task_history.py
luigi/static/visualiser/index.html
luigi/tools/migrate.py
setup.py
test/notifications_test.py
==================
eaf8ea38;Stephen Pascoe;2015-11-20 15:04:00 +0000;Set task family to UNKNOWN if a dependency is not found in the scheduler during dependency graph generation.
Previously it was possible to guess the task family and params from the task_id but this is incompatible
with the new task_id scheme.

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
1ee3614d;Stephen Pascoe;2015-10-19 11:51:02 +0100;task_id serialisation which is readable, unique but difficult to decode into parameters
  task_id := <family>_<param_summary>_<hash>

Replaced Task.task_id with str(Task) where appropriate.
Replacing hard-coded task_ids in tests.
Changes to visualiser for hashed task_id.  This is confirmed compatible with visualiser URLs.

==

.travis.yml
luigi/contrib/sge.py
luigi/contrib/simulate.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
luigi/task.py
luigi/util.py
luigi/worker.py
test/contrib/esindex_test.py
test/contrib/redshift_test.py
test/customized_run_test.py
test/event_callbacks_test.py
test/namespace_test.py
test/parameter_test.py
test/postgres_test.py
test/range_test.py
test/scheduler_visualisation_test.py
test/task_history_test.py
test/task_serialize_test.py
test/visualiser/visualiser_test.py
test/worker_multiprocess_test.py
test/worker_parallel_scheduling_test.py
test/worker_test.py
==================
b547b5e2;Stephen Pascoe;2015-10-19 11:05:34 +0100;Hypothesis tests for serialising / deserialising tasks and comparing task_ids

==

.travis.yml
test/task_serialize_test.py
tox.ini
==================
97aa3fa8;Arash Rouhani;2015-12-15 09:53:46 +0700;Merge pull request #1440 from Tarrasch/range_honor_param_name
Range helpers: Honor param_name when inferring fs
==
==================
01c12c70;Erik Bernhardsson;2015-12-11 12:45:26 -0500;Merge pull request #1457 from jkukul/minor-frontend-improvements
Display decoded error message in graphs.
==
==================
2fe3898d;Jakub Kukul;2015-12-11 14:29:31 +0100;Display decoded error message in graphs.
Error message was incorrectly passed to decodeError function.

==

luigi/static/visualiser/js/visualiserApp.js
==================
76329129;Erik Bernhardsson;2015-12-09 16:59:27 -0500;Merge pull request #1452 from bmaggard/master
allow binary opens
==
==================
c32f25f1;Yuri Broze;2015-12-09 16:03:50 -0500;Test for create_table even more specific.

==

test/contrib/redshift_test.py
==================
ce235730;Yuri Broze;2015-12-09 15:42:21 -0500;Repair invocation of table_type and table_attributes.

==

luigi/contrib/redshift.py
==================
18935b11;Yuri Broze;2015-12-09 15:35:25 -0500;Add test demonstrating table_type bug.

==

test/contrib/redshift_test.py
==================
bec6bf37;Brad Maggard;2015-12-09 19:18:56 +0000;allow binary opens

==

luigi/file.py
==================
fa252fea;David Thompson;2015-12-08 15:50:23 -0500;Add error info for external task incomplete
From UI it is not clear what is going on with external tasks that fail.
This adds a message to explain the data-missing failure.

==

luigi/worker.py
==================
ddaf34be;David Thompson;2015-12-08 15:42:01 -0500;Fix issue with complete external tasks having missing deps
There are certain scenarios where an external task has actual deps,
such as when a task has been made external with externalize() method,
or if someone wants to simply subclass then set run = NotImplemented.

At runtime if the output exists for the external task but not for its
upstream dependencies, this should be OK (task success). However this
case was broken because we failed in the missing-dependencies check
before ever checking task.compete().

==

luigi/worker.py
test/worker_external_task_test.py
==================
aba63be6;Erik Bernhardsson;2015-12-08 07:36:01 -0500;Merge pull request #1435 from nresare/snakebite-respect-HADOOP_USER_NAME
Have snakebite HDFS client fallback to HADOOP_USER_NAME from env
==
==================
d373bd07;Noa Resare;2015-11-30 11:49:02 +0100;Have snakebite HDFS client fallback to HADOOP_USER_NAME from env

==

luigi/contrib/hdfs/config.py
==================
c0987f7d;Arash Rouhani;2015-12-02 15:52:37 +0700;Range helpers: Honor param_name when inferring fs
Range* allows you to specify the name of the parameter that is the date
the range is about. Another orthogonal feature is that you don't need to
provide a bulk_complete for the most common file system use case.

However, when using both these features doesn't work. This patch fixes
that.

While changing this code. I also realized that we're redundantly passing
around the task_cls even though `self` already contains it. We change
this and add a backward compatible wrapper that spews out a deprecation
warning to nudge users to update their code.

==

luigi/tools/range.py
test/range_test.py
==================
5a35cf5c;Arash Rouhani;2015-12-07 11:04:39 +0700;Merge pull request #1438 from Tarrasch/add_webhdfs_client
Integrate webhdfs with rest of hdfs module
==
==================
9e48dc8a;Erik Bernhardsson;2015-12-05 13:23:27 -0500;Merge pull request #1434 from mbruggmann/external-bq-task
bigquery: Add ExternalBigqueryTask.
==
==================
882c853d;Erik Bernhardsson;2015-12-05 13:22:41 -0500;Merge pull request #1442 from Tarrasch/spark_module_cleanups
spark: Remove deprecated classes
==
==================
82f7f09e;Erik Bernhardsson;2015-12-05 13:00:49 -0500;2.0.1

==

setup.py
==================
efab587c;Erik Bernhardsson;2015-12-02 21:17:44 -0500;Merge pull request #1441 from Tarrasch/dont_nest_stacktraces_for_run_failures
Don't print nested stack traces for run() failures
==
==================
01d96a89;Arash Rouhani;2015-12-03 08:52:08 +0700;Merge pull request #1439 from Tarrasch/list2command_spark_lines
spark: Print "Running <cmd>" using list2command
==
==================
a627e335;Arash Rouhani;2015-12-03 08:51:57 +0700;Merge pull request #1447 from jasonnance/jasonnance-1437
Allow scheduler to listen on unix socket normally
==
==================
d366a63d;Arash Rouhani;2015-12-03 08:51:16 +0700;Merge pull request #1446 from xbello/master
Added initgroups to work with python-daemon >= 2.1.0.
==
==================
40564a80;Erik Bernhardsson;2015-12-02 14:50:41 -0500;Merge pull request #1448 from Houzz/remote_symlink
Supports symbolic links in RemoteFileSystem.listdir
==
==================
d7a3dcdf;Dave Buchfuhrer;2015-12-02 11:11:18 -0800;Supports symbolic links in RemoteFileSystem.listdir
Without the -L flag in the find command, the listdir function will ignore
symlinks to directories, leading to an incorrect listdir result when a symlink
is involved.

==

luigi/contrib/ssh.py
==================
dd5cbf3a;Xabi Bello;2015-12-02 16:51:17 +0100;Added initgroups to work with python-daemon >= 2.1.0.

==

luigi/process.py
==================
fe4a25dd;Jason Nance;2015-12-02 10:58:53 -0500;Allow scheduler to listen on unix socket normally
Previously, the scheduler would only listen on a supplied unix
socket when run in the background.  When run normally, it would
ignore the given unix socket and serve on the default port.  This
is fixed by passing the given unix_socket to server.run when
the scheduler is run normally.

==

luigi/cmdline.py
==================
cb4c13c2;Arash Rouhani;2015-12-02 17:19:58 +0700;spark: Remove deprecated classes
They have been deprecated for over 6 months. So I think it's fair to
delete them to reduce maintenance.

==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
306bb6a2;Arash Rouhani;2015-12-02 15:00:22 +0700;Integrate webhdfs with rest of hdfs module
With this patch you can use normal HdfsTargets together with webhdfs.
The old WebHdfsTarget still exists but is deprecated.

See the documentation for the [hdfs] section for enabling webhdfs.

This will change the behavior of the existing implementation a bit.
The issue was that it was using [hdfs]namenode_port for the webhdfs
port. But the namenode port that for example snakebite and
hadoopcli uses is different from the webhdfs port.

==

doc/configuration.rst
luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hdfs/target.py
luigi/contrib/hdfs/webhdfs_client.py
luigi/contrib/webhdfs.py
test/contrib/hdfs/webhdfs_client_test.py
test/contrib/hdfs_test.py
test/minicluster.py
test/webhdfs_minicluster.py
tox.ini
==================
45195a86;Arash Rouhani;2015-12-02 16:16:15 +0700;Don't print nested stack traces for run() failures
In python3, stack traces seem to report if the raised exception happened
during another exception handling. It will then say something like
"exception happned during handling of above exception". This is nice,
but just cluttery in the case of our tracking_url_callback hack.

==

luigi/worker.py
test/cmdline_test.py
==================
f1928ee5;Arash Rouhani;2015-12-02 15:40:32 +0700;spark: Print "Running <cmd>" using list2command

==

luigi/contrib/spark.py
==================
32b2752b;Arash Rouhani;2015-12-01 09:33:05 +0700;Merge pull request #1433 from spotify/erikbern/context-mgrs
don't call context managers directly, use the with statement
==
==================
6a153f89;Erik Bernhardsson;2015-11-29 10:18:07 -0500;don't call context managers directly, use the with statement

==

test/worker_multiprocess_test.py
test/worker_test.py
==================
685c5ad1;Marc Bruggmann;2015-11-29 16:54:42 +0100;bigquery: Add ExternalBigqueryTask.
You can use ExternalBigqueryTask to refer to an existing table in
BigQuery, with bulk complete support.

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
02e968b9;Erik Bernhardsson;2015-11-29 10:31:13 -0500;Merge pull request #1386 from stroykova/map-reduce-format
Map reduce format
==
==================
236fdbcd;Erik Bernhardsson;2015-11-29 10:20:38 -0500;Merge pull request #1432 from mbruggmann/split-bigquery-test
bigquery: Split the testcases into unit and integration tests.
==
==================
603d498b;Erik Bernhardsson;2015-11-29 10:08:18 -0500;Merge pull request #1431 from Tarrasch/add_worker_context_manager
Make the Worker a context manager
==
==================
d4445187;Marc Bruggmann;2015-11-29 15:10:23 +0100;bigquery: Run unit tests on PR builds.
The gcs_test import would skip the test if the Google API client
is unavailable. Since we don't need it for the unit test we can
remove it, which should enable these tests on PR builds.

==

test/contrib/bigquery_test.py
==================
d552f3c8;Marc Bruggmann;2015-11-29 14:44:08 +0100;bigquery: Split the testcase into unit and integration tests.
The unit tests can now be run without local GCP credentials.

==

test/contrib/bigquery_gcloud_test.py
test/contrib/bigquery_test.py
==================
a770a4f5;Erik Bernhardsson;2015-11-28 12:42:33 -0500;Merge pull request #1429 from Tarrasch/honor_keyboardinterrupt_during_serial_scheduling
Honor keyboardinterrupt during serial scheduling
==
==================
12d017e5;Erik Bernhardsson;2015-11-27 08:52:02 -0500;Merge pull request #1430 from Tarrasch/mention_compatiblity_intent
docs: Exclpitly state version compatibility
==
==================
8c809b68;Arash Rouhani;2015-11-27 10:54:11 +0700;Make the Worker a context manager
This way, we will shut down the KeepAliveThread even when there is an
error during the scheduling phase.  And context managers is a more
pythonic construct than the invented stop() method. This was also a now
removed TODO in the code.

I also put the side effect of starting the KeepAliveThread into the
__enter__ block. I found it surprising that constructing a Worker()
would start a new thread.

A lot of test cases had to be rewritten. While at it, I cleaned up some
of the tests and also added many forgotten cleanups. Hopefully tests are
more stable from now on.

==

luigi/interface.py
luigi/worker.py
test/fib_test.py
test/instance_test.py
test/instance_wrap_test.py
test/interface_test.py
test/notifications_test.py
test/recursion_test.py
test/scheduler_visualisation_test.py
test/task_history_test.py
test/worker_external_task_test.py
test/worker_multiprocess_test.py
test/worker_test.py
==================
57621ceb;Arash Rouhani;2015-11-27 09:26:58 +0700;docs: Exclpitly state version compatibility
I just want to clarify that one should not use or depend on interface of
the Worker class.

==

luigi/interface.py
luigi/worker.py
==================
57de6971;Arash Rouhani;2015-11-26 15:15:37 +0700;Honor KeyboardInterrupts in serial scheduling
There is two benefits of this:

 * When using luigi interactively (for example trying out foo.py example
   for the first time), you want to be able to quit luigi with Ctrl+C.
 * When wanting to kill terminate luigi, SIGTERM should make luigi quit
   terminate as quickly as possible, even when scheduling. Before this
   patch, the behavior was oddly to skip that one single complete() and
   continue to check the next dependency.

==

luigi/worker.py
test/worker_test.py
==================
b3fdf875;Arash Rouhani;2015-11-26 14:54:13 +0700;tests: Move around worker tests
Tests related to keyboard interrupts now have a dedicated home.

==

test/retcodes_test.py
test/worker_test.py
==================
0e8e65e9;Erik Bernhardsson;2015-11-26 08:22:36 -0500;Merge pull request #1428 from Tarrasch/make_client_work_without_tornado
Make luigi client work without tornado
==
==================
06ef6296;Arash Rouhani;2015-11-26 16:33:27 +0700;Make luigi client work without tornado
If I download luigi without installing tornado, I still would like to
try it out using say the local scheduler or a scheduler that's running
somewhere else. Or as in my case, having a different python version
that has tornado running luigid.

This means that you now can just download the luigi source code and get
started quite quickly by just running:

    PYTHONPATH=. python3 -m examples.foo

or

    PYTHONPATH=. python3 -m luigi --module examples.foo examples.Foo --local-scheduler

==

luigi/cmdline.py
==================
0ccfdf27;Mark Grey;2015-11-25 15:24:52 -0500;Merge pull request #1421 from DeaconDesperado/remove_redundant_swaps
Remove redundant swap logic
==
==================
6359592d;Mark Grey;2015-11-23 11:11:39 -0500;remove redundant swap logic

==

luigi/contrib/bigquery.py
==================
2db757ac;Arash Rouhani;2015-11-25 11:34:34 +0700;Merge pull request #1425 from spotify/erikbern-1424
positional parameter qualification
==
==================
1409580a;Erik Bernhardsson;2015-11-24 07:42:31 -0500;positional parameter qualification
see #1424
==

luigi/parameter.py
==================
b9e105ca;Erik Bernhardsson;2015-11-23 22:33:28 -0500;Merge pull request #1422 from krise3k/master
Add missing event.BROKEN_TASK trigger
==
==================
1ffd5132;krise3k;2015-11-23 19:42:02 +0100;Add missing event trigger

==

luigi/worker.py
test/event_callbacks_test.py
==================
25661c95;igorbernstein;2015-11-23 10:08:55 -0500;Merge pull request #1419 from igorbernstein/fix-postgres-tests
fix postgres tests
==
==================
8c492d51;Arash Rouhani;2015-11-23 16:52:26 +0700;Merge pull request #1420 from DeaconDesperado/fix_gcloud_tests
Fix bigquery load tests
==
==================
992ef27b;Erik Bernhardsson;2015-11-22 22:24:36 -0500;Merge pull request #1411 from Tarrasch/mention_misspelled_task_name
cli: Mention incorrect taskname over missing args
==
==================
19e6cd6d;Mark Grey;2015-11-22 22:12:44 -0500;fix bigquery load tests

==

test/contrib/bigquery_test.py
==================
7240f98d;Arash Rouhani;2015-11-20 15:36:07 +0700;cli: Mention incorrect taskname over missing args
Currently, if you misspell your task in a invocation like this:

  luigi MyTaskk --my-param 123

Luigi will complain that `--my-param 123` isn't recognized. While that
is technically correct as well, it's more user friendly to first control
that the user entered a correct task name.

It was too hard implementation wise to get this working without any
change to current behavior.  Instead we say that the return code of
luigi is undefined whenever a task is misspelled.  This will only happen
when using luigi cli interactively, assuming that nobody relied on the
exit code when consciously misspelling a task name.

==

luigi/cmdline_parser.py
test/cmdline_test.py
test/retcodes_test.py
==================
dd40a102;Erik Bernhardsson;2015-11-22 14:32:49 -0500;Merge pull request #1418 from mbruggmann/bq-dataset-availability
bigquery: Ensure the dataset exists on bulk_complete.
==
==================
b88ffda1;Igor Bernstein;2015-11-22 13:54:52 -0500;fix nose postgres tag selector

==

test/postgres_with_server_test.py
==================
7f1e5431;Igor Bernstein;2015-11-22 14:29:18 -0500;tox needs to inherit postgres user env var set by .travis.yml

==

tox.ini
==================
27a6b695;Marc Bruggmann;2015-11-22 14:23:57 +0100;bigquery: Ensure the dataset exists on bulk_complete.
Without this patch checking for a range in a dataset that doesn't
exist would raise an Exception. Make sure we don't end up there
by only searching available datasets.

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
760e8d43;Erik Bernhardsson;2015-11-21 11:29:50 -0500;Merge pull request #1417 from wires/master
fix: `/history` referred to wrong Bootstrap URL
==
==================
c7241fb5;Jelle Herold;2015-11-21 15:59:08 +0100;fix: `/history` referred to wrong Bootstrap URL

==

luigi/templates/header.html
==================
d6196760;Erik Bernhardsson;2015-11-20 20:22:31 -0500;Merge pull request #1413 from humanlongevity/master
Add missing kwargs passing for S3 multipart upload
==
==================
6fa040ff;Erik Bernhardsson;2015-11-20 12:45:02 -0500;Merge pull request #1414 from mbruggmann/bq-query-requires
bigquery: Test the query task.
==
==================
691bbdaf;Marc Bruggmann;2015-11-17 19:44:05 +0100;bigquery: Test the query task.

==

test/contrib/bigquery_test.py
==================
29b03cb8;Jason Piper;2015-11-20 20:18:57 +0800;Add missing kwargs passing for S3 multipart upload

==

luigi/s3.py
==================
b976a56d;Erik Bernhardsson;2015-11-20 06:33:53 -0500;Merge pull request #1412 from Tarrasch/mention_tox_version_constraint
docs: Mention that you need a up to date tox
==
==================
9ea98d2c;Arash Rouhani;2015-11-20 15:42:06 +0700;docs: Mention that you need a up to date tox
In particular the version shipped with Ubuntu 14.04 doesn't recognize
the expansion syntax that we use a lot.

==

CONTRIBUTING.rst
==================
c4b930b1;Erik Bernhardsson;2015-11-19 06:42:24 -0500;Merge pull request #1405 from stephenpascoe/master
PhantomJS tests for the visualiser javascript.
==
==================
36d14fc8;Erik Bernhardsson;2015-11-19 06:40:50 -0500;Merge pull request #1382 from dangarthwaite/master
Use DequeQueue instead of multiprocess.Queue if worker_process==1
==
==================
8e0c50a5;Erik Bernhardsson;2015-11-19 06:38:45 -0500;Merge pull request #1406 from mbruggmann/bq-bulk-complete
bigquery: Enable range support by implementing bulk_complete.
==
==================
1db63453;Erik Bernhardsson;2015-11-19 06:38:09 -0500;Merge pull request #1410 from spotify/Tarrasch-patch-1
Configuration.rst: Update docs for hdfs tmp_dir
==
==================
71387118;Stephen Pascoe;2015-11-12 15:13:10 +0000;Adding phantomJS tests for the visualiser javascript.
These are run in the "visualiser" TOXENV
We run the tornado IOLoop in a separate thread to minimise time waiting for phantomjs to complete.

==

.travis.yml
CONTRIBUTING.rst
test/visualiser/__init__.py
test/visualiser/phantomjs_test.js
test/visualiser/visualiser_test.py
tox.ini
==================
e7b9f4df;Arash Rouhani;2015-11-19 10:03:00 +0700;Configuration.rst: Update docs for hdfs tmp_dir
The old path [core] tmp_dir was not even read. Nowadays [core] hdfs_tmp_dir is deprecated and [hdfs] tmp_dir is preferred. See:

https://github.com/spotify/luigi/blob/ef3a2b1b64e4be23ba145b34f0f9e2c7f12eba49/luigi/contrib/hdfs/config.py#L44
==

doc/configuration.rst
==================
ef3a2b1b;Erik Bernhardsson;2015-11-18 20:52:09 -0500;Merge pull request #1345 from Houzz/recover_from_bad_get_work
Retries get_work on null response
==
==================
02b3dd9a;Erik Bernhardsson;2015-11-18 20:51:59 -0500;Merge pull request #1315 from Houzz/limit_graph_size
Limit graph size
==
==================
0f7d768b;Erik Bernhardsson;2015-11-18 20:51:34 -0500;Merge pull request #1391 from samepage-labs/master
Add notification through Amazon SNS
==
==================
28f8ee15;Erik Bernhardsson;2015-11-18 20:38:22 -0500;Merge pull request #1408 from econchick/lynn/coverage-collectors
Fix scope when setting up multiprocessing with coverage
==
==================
64c02a8b;Lynn Root;2015-11-18 15:11:55 -0800;Fix scope when setting up multiprocessing with coverage

==

sitecustomize.py
==================
51cd2fc2;igorbernstein;2015-11-18 15:24:45 -0500;Merge pull request #1392 from spotify/Tarrasch-patch-1
examples: pyspark_wc: Make parameter insignificant
==
==================
25056a84;Marc Bruggmann;2015-11-18 09:30:53 +0100;bigquery: Reduce amount of paging when listing datasets/tables.

==

luigi/contrib/bigquery.py
==================
e50fdab3;Erik Bernhardsson;2015-11-17 19:49:20 -0500;Merge pull request #1384 from Luiti/update-version-number-to-lastest-automatically
Update luigi version number to lastest from setup.py automatically.
==
==================
d56b338c;David Chen;2015-11-18 08:35:46 +0800;Update luigi version number to lastest from setup.py automatically. http://stackoverflow.com/questions/17583443/what-is-the-correct-way-to-share-package-version-with-setup-py-and-the-package has the good way to read lastest version.

==

doc/conf.py
==================
eabfce5e;Marc Bruggmann;2015-11-17 16:41:47 +0100;bigquery: Enable range support by implementing bulk_complete.

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
95340982;Ksenia Stroykova;2015-11-17 18:21:08 +0300;docs clarification of mapper and combiner functions format

==

doc/example_top_artists.rst
==================
7828af6e;Arash Rouhani;2015-11-17 18:42:07 +0700;Merge pull request #1380 from spotify/erikbern-patch-1
Update docs for DateIntervalParameter
==
==================
be367094;Arash Rouhani;2015-11-17 18:38:22 +0700;Merge pull request #1395 from spotify/noa/tornado-minimal-version
Enforce at least tornado version 4.0
==
==================
92efbcfe;Arash Rouhani;2015-11-17 18:30:19 +0700;Merge pull request #1397 from SharangP/patch-1
Add packages item to spark configuration section
==
==================
b879c128;Arash Rouhani;2015-11-17 18:29:57 +0700;Merge pull request #1400 from nizox/fix/task_parameter
Add a serialize method to TaskParameter
==
==================
9b28044b;Arash Rouhani;2015-11-17 18:18:52 +0700;Merge pull request #1403 from humanlongevity/master
Tests for S3 put kwargs (SSE)
==
==================
b1787b14;Jason Piper;2015-11-16 22:39:08 +0800;Add S3 kwargs/SSE tests

==

test/s3_test.py
==================
14237b5b;Erik Bernhardsson;2015-11-16 08:54:29 -0500;Merge pull request #1402 from humanlongevity/master
Add kwargs for boto s3 writing
==
==================
e384d4ea;Jason Piper;2015-11-16 15:31:29 +0800;Add kwargs for boto s3 writing

==

luigi/s3.py
==================
13714eb6;Erik Bernhardsson;2015-11-15 15:14:04 -0500;Merge pull request #1399 from Luiti/fix-document-typo
Fixed document typo and trailing whitespaces.
==
==================
28adc984;Nicolas Vivet;2015-11-15 15:15:43 +0100;Add a serialize method to TaskParameter
Without this method it is not possible to program a task requiring
another task with a TaskParameter. This commit also provides a test
case for this scenario.

==

luigi/parameter.py
test/parameter_test.py
==================
1a31344e;David Chen;2015-11-15 20:37:57 +0800;Fixed document typo and trailing whitespaces.

==

CONTRIBUTING.rst
==================
75a0e964;Jakub Slovan;2015-11-13 13:18:02 +0100;Typo.

==

luigi/notifications.py
==================
788b1d0b;Sharang Phadke;2015-11-12 16:27:34 -0500;Add packages item to spark configuration section

==

doc/configuration.rst
==================
6d4a3c26;Noa Resare;2015-11-12 16:19:17 +0100;Enforce at least tornado version 4.0, less than 5
Otherwise luigid will fail every request with a KeyError. More
details here: https://github.com/spotify/luigi/issues/1394

==

setup.py
==================
653680c7;Jakub Slovan;2015-11-11 13:47:06 +0100;Refactor send_email_ses using boto3.

==

doc/configuration.rst
luigi/notifications.py
test/notifications_test.py
==================
2e81b9e4;Jakub Slovan;2015-11-11 12:14:07 +0100;Add notifications through Amazon SNS.

==

doc/configuration.rst
luigi/notifications.py
test/notifications_test.py
==================
1b97e290;Arash Rouhani;2015-11-12 11:11:03 +0700;examples: pyspark_wc: Make parameter insignificant
The parameter is clearly not significant, as the output path does not depend on it.
==

examples/pyspark_wc.py
==================
4967f353;Jakub Slovan;2015-11-10 07:52:51 +0100;Refactor notifications. Add tests of notifications.

==

luigi/notifications.py
test/notifications_test.py
==================
0d45a81d;Jakub Slovan;2015-11-11 15:55:09 +0100;Rename test file.

==

test/notifications_test.py
==================
bec17e28;Dave Buchfuhrer;2015-10-23 13:20:35 -0700;Retries get_work on null response
Sometimes the scheduler gives a null response to get_work, resulting in an error
when the worker tries to treat the response as a dict and killing the worker.
This change will retry up to 3 times upon receiving a null response, allowing
the worker to live and continue working.

==

luigi/rpc.py
test/rpc_test.py
==================
1e355ce5;Erik Bernhardsson;2015-11-11 13:45:41 -0500;Merge pull request #1388 from Houzz/disable_email
Allows disabling of worker e-mails via luigi.cfg
==
==================
1cda702c;Erik Bernhardsson;2015-11-11 13:45:02 -0500;Merge pull request #1390 from Houzz/fix_redshift_test
Fix broken redshift test
==
==================
6cf23b8b;Dave Buchfuhrer;2015-11-11 09:28:37 -0800;Fixes broken redshift test
The redshift test asserts that the output is only called once in run,
when run clearly called it twice. I fixed that by storing the output in
a local variable rather than calling it again.

The redshift test asserted that RedshiftTarget is called with arguments
table_type and sql that it does not accept, so I removed those. There
was also a typo in the update_id argument.

The redshift test verified the existence check by asserting that it was
the only redshift call. I fixed that by changing the assertion to verify
that the existence check was made, as the run makes two other calls
afterward.

It seems that this test is incomplete, but it at least no longer fails.

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
0596487b;Dave Buchfuhrer;2015-11-11 08:53:53 -0800;Fixes pep8 violations in redshift code

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
22bfae1e;Dave Buchfuhrer;2015-11-11 08:23:09 -0800;Allows disabling of worker e-mails via luigi.cfg
After a night of excessive failures, I found that my workers were dying
whenever a job failed and they weren't able to access the overloaded
smtp server. When I tried to find the configuration option to disable
emails and get things running again, I found that there wasn't one,
although error-email falsely claims to be ablo to do that in the
documentation.

I've updated the documentation for error-email to clarify that e-mails
will still be sent for jobs that have owners and added a "none" option
to email-type that disables email sends. I also cleaned up the logging
for why emails are disabled.

==

doc/configuration.rst
luigi/notifications.py
test/worker_test.py
==================
56298a05;Dan Garthwaite;2015-11-10 14:34:08 -0500;del the del statements

==

luigi/worker.py
==================
a1bc297d;Dan Garthwaite;2015-11-10 11:59:10 -0500;Explicitly throw out block and timeout kwargs

==

luigi/worker.py
==================
e3c6c9e5;Arash Rouhani;2015-11-10 12:43:30 +0700;Merge pull request #1376 from dhurlburtusa/master
Minor Documentation Fixes
==
==================
0e6bfd15;Dan Garthwaite;2015-11-09 15:42:48 -0500;Use DequeQueue instead of multiprocess.Queue if worker_process==1

==

luigi/worker.py
==================
94321e23;Erik Bernhardsson;2015-11-09 10:48:36 -0500;Update docs for DateIntervalParameter
Clarifying #1379
==

luigi/parameter.py
==================
ba135531;Danny Hurlburt;2015-11-06 14:26:31 -0700;Fixed some grammar and punctuation issues.

==

doc/design_and_limitations.rst
==================
0a1e6185;Danny Hurlburt;2015-11-06 14:16:32 -0700;Add links to API doc.

==

doc/luigi_patterns.rst
==================
c1317713;Danny Hurlburt;2015-11-06 13:57:11 -0700;Fixed minor grammar/typo issues.

==

doc/execution_model.rst
==================
347fb56f;Danny Hurlburt;2015-11-06 13:47:56 -0700;Fixed minor grammar/typo issues.

==

doc/central_scheduler.rst
==================
314cb710;Danny Hurlburt;2015-11-06 12:34:35 -0700;Fixed grammar and some broken links.

==

doc/tasks.rst
==================
f7f78c9d;Danny Hurlburt;2015-11-06 12:03:04 -0700;Fixed broken links.

==

doc/workflows.rst
==================
7d75fd77;Danny Hurlburt;2015-11-06 11:02:48 -0700;Changed doc Ref from HDFSTarget to LocalTarget
Changed document reference from HDFSTarget to LocalTarget to match the example code snippet.
==

doc/example_top_artists.rst
==================
950340f2;Danny Hurlburt;2015-11-06 10:12:56 -0700;Fixed typo.

==

README.rst
==================
c490432e;Erik Bernhardsson;2015-11-06 11:02:06 -0500;Merge pull request #1341 from Houzz/get_missed_work
Adds a current_tasks argument for retransmission in get_work
==
==================
9a4be306;Erik Bernhardsson;2015-11-06 11:00:35 -0500;Merge pull request #1340 from Houzz/kill_on_exception
Stops KeepAliveThread and subprocesses on exception in run
==
==================
fd860a02;Erik Bernhardsson;2015-11-06 10:59:36 -0500;Merge pull request #1352 from Houzz/disable_fixes
Fixes two small bugs with scheduler auto-disables
==
==================
3b5d3486;Erik Bernhardsson;2015-11-06 10:59:22 -0500;Merge pull request #1357 from Houzz/catch_req_exc
Properly handles errors in requires functions during scheduling
==
==================
bcbbcab7;Erik Bernhardsson;2015-11-06 10:58:47 -0500;Merge pull request #1367 from patricksmith/multiline-visualizer-fixes
Fixes to visualizer for tasks with multi-line parameters
==
==================
71c8b9ea;Erik Bernhardsson;2015-11-06 10:58:38 -0500;Merge pull request #1372 from matthewdu/s3target-get-path
add self.path to S3Target
==
==================
95d30b66;Erik Bernhardsson;2015-11-06 10:40:38 -0500;Merge pull request #1314 from dlstadther/rw-redshift
Redshift - Copy to temp table, prune table based on date, utilization of init_copy and post_copy
==
==================
b8211e60;Matthew Du;2015-11-05 19:28:58 -0800;add self.path to S3Target
With an S3Target, we can load data into S3 at a specific path.
Being able to get back the path makes it more useful in
subsequent tasks.

==

luigi/s3.py
test/s3_test.py
==================
f9859267;Erik Bernhardsson;2015-11-05 15:21:24 -0500;Merge pull request #1370 from dlstadther/rw-email
Notification.py Authenticating Gmail
==
==================
6f7b7192;Dillon Stadther;2015-11-05 14:06:52 -0500;Added smtp.ehlo_or_helo_if_needed() and smtp.starttls() in order to successfully authenticate gmail.

==

luigi/notifications.py
==================
08c03e4f;Erik Bernhardsson;2015-11-05 08:46:31 -0500;Merge pull request #1369 from hlawrenz/doc-fix
Minor edits to parameters.rst
==
==================
d6d8b718;Hans Lawrenz;2015-11-05 08:39:12 -0500;Minor edits to parameters.rst

==

doc/parameters.rst
==================
9cb29134;Patrick Smith;2015-11-04 10:21:55 -0500;URI encode taskId when putting taskId in the URL
This will allow linking to the dependency graph of tasks with special
characters in their ID.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
f8781716;Erik Bernhardsson;2015-11-04 08:48:13 -0500;Merge pull request #1366 from alexeygrigorev/master
Temporary pig properties file is not flushed
==
==================
82ef8fd9;Alexey Grigorev;2015-11-04 14:11:29 +0100;flushed pig properties temp file

==

luigi/contrib/pig.py
==================
71dd8973;Patrick Smith;2015-11-03 15:06:06 -0500;Use `[\s\S]` instead of `*` when parsing task id
The `*` character does not match newline characters, which will cause
the UI to not behave correctly when a task parameter contains newlines.
Use `[\s\S]` instead (see http://stackoverflow.com/a/1068308).

==

luigi/static/visualiser/js/visualiserApp.js
==================
1bb1d498;Erik Bernhardsson;2015-11-01 18:59:51 -0500;Merge pull request #1331 from dlstadther/feature/config
LUIGI_CONFIG_PATH Warning Message - File doesn't exist
==
==================
1a482973;Erik Bernhardsson;2015-11-01 18:59:24 -0500;Merge pull request #1319 from stevepeak/master
Use Codecov for uploading code coverage reports
==
==================
07192fbc;Erik Bernhardsson;2015-11-01 18:59:01 -0500;Merge pull request #1338 from lungetech/no-forward-agent
do not forward SSH agent
==
==================
60beb92a;Erik Bernhardsson;2015-11-01 18:58:55 -0500;Merge pull request #1337 from lungetech/fix-ssh-multiplexing
allow SSH multiplexing
==
==================
baaab4c4;Erik Bernhardsson;2015-11-01 18:58:40 -0500;Merge pull request #1348 from Tarrasch/fix_docs_for_parameters
docs: Correct order of parameter resolution
==
==================
39c1210c;Erik Bernhardsson;2015-11-01 18:58:27 -0500;Merge pull request #1347 from pillowdev/master
Closes #1346: Dependency graph failing on firefox
==
==================
f3107291;Mark Grey;2015-10-29 13:02:38 -0400;Merge pull request #1363 from Houzz/signal_windows
Handles missing signal.SIGUSR1 when registering a handler in worker
==
==================
ea1cad7e;Dave Buchfuhrer;2015-10-29 07:02:13 -0700;Handles missing signal.SIGUSR1 when registering a handler in worker
Windows machines don't have a signal.SIGUSR1. In order to avoid the
problems that come with registering a SIGTERM handler instead, we just
disable the SIGUSR1 handler on Windows machines. This resolves #1360.

==

luigi/worker.py
test/worker_test.py
==================
f8e97a4c;Dave Buchfuhrer;2015-10-27 18:28:30 -0700;Properly handles errors in requires functions during scheduling
We had a test that bugs in requires were properly caught and dealt with,
allowing scheduling to continue with other tasks. Unfortunately, this test
didn't really work properly because it assumed a depth-first scheduling but used
the breadth-first single-threaded scheduling. After adjusting the test to throw
an exception before the rest of the tasks were done scheduling, it failed.

In order to fix this, we wrap the call to deps in Worker._add to catch any
exceptions and log, e-mail, and not schedule the task or its dependencies. This
matches the behavior of errors in the complete function and prevents one bad
task from blocking an entire pipeline.

==

luigi/worker.py
test/worker_test.py
==================
bb387a2b;Rouzbeh Delavari;2015-10-27 19:57:11 +0100;Testing test flakyness

==

README.rst
==================
c521d59c;Dave Buchfuhrer;2015-10-26 11:20:56 -0700;Overrides scheduler disable with manual disable by worker
When the scheduler disables a task, we then ignore most other status changes
requested by the worker until re-enable. This had a weird result for me recently
when a group of tasks were repeatedly failing and many of them were disabled.
In order to stop the repeated runs, I marked them all as disabled. A few hours
later when the disable period expired for the automatic scheduler disables,
many of the tasks became PENDING again and started running. It took a while
before enough of them were scheduled with the right timing to become permanently
disabled.

To fix this, we now allow the permanent disable requested by the worker to
override the temporary disable triggered within the scheduler. Note that this
was the original behavior but it wasn't enforced in unit tests and got lost in a
refactor.
==

luigi/scheduler.py
test/central_planner_test.py
==================
6cffbf43;Dave Buchfuhrer;2015-10-26 11:16:30 -0700;Fixes a bug with auto-reenable when disable_failures is 1
When disable_failures is 1, there was a bug in which the re-enable would cause
an immediate disable because re-enable is achieved by setting the task to
FAILED. This fixes the bug by not counting a failure toward the number needed
for a disable if the task is disabled.
==

luigi/scheduler.py
test/central_planner_test.py
==================
3d2f7522;Dave Buchfuhrer;2015-10-26 11:13:49 -0700;Check that scheduler_disable_time is not None before re-enables
Checking that scheduler_disable_time does not evaluate to False in a boolean
context is a bit unsafe, as I discovered when setting it to 0 in unit tests.
This checks whether it is None which is what was actually desired.
==

luigi/scheduler.py
==================
f5700be5;Dillon Stadther;2015-10-15 14:47:49 -0400;Added support for redshift copy to temp, prune table (delete some amount of records based on date), init copy, post copy (also added to rdbms.py)
Added docstrings to prune variables. Updated do_prune() to raise an exception when only a subset of prune variables are implemented (needs to be all or none). Updated docstring accordingly.

Added decorator @property to prune_*, table_type, and table_attributes.

==

luigi/contrib/rdbms.py
luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
11b896ae;Arash Rouhani;2015-10-26 16:09:32 +0100;Merge pull request #1298 from Houzz/wire_up_tracking
Wire up tracking
==
==================
5d6b196b;Dillon Stadther;2015-10-21 09:27:07 -0400;Added warning if LUIGI_CONFIG_PATH does not exist.
Extracted os.environ['LUIGI_CONFIG_PATH'] to a variable.

Updated warning message to specifically note that the file doesn't exist.

==

luigi/configuration.py
==================
ffc1f2a2;Arash Rouhani;2015-10-26 09:49:25 +0100;docs: Correct order of parameter resolution
There were some changes in #1274 and #1320 in which I forgot to update
the docs.

==

luigi/parameter.py
==================
ea3c1a8b;Zadkiel Aslafy-Aharonian;2015-10-24 18:47:01 +0200;Closes #1346: Dependency graph failing on firefox

==

luigi/static/visualiser/js/visualiserApp.js
==================
eb4930da;Arash Rouhani;2015-10-23 14:30:18 +0200;Releasing 2.0.0

==

RELEASE-PROCESS.rst
setup.py
==================
ca78b1a8;Arash Rouhani;2015-10-23 14:14:05 +0200;Merge pull request #1343 from Tarrasch/luigi_packaging_changes
Luigi packaging changes
==
==================
32a4509d;Arash Rouhani;2015-10-23 13:32:57 +0200;readthedocs: Dont require python-daemon for rtd
See issues in spotify/luigi#1342

==

setup.py
==================
6a04a128;Arash Rouhani;2015-10-23 13:30:45 +0200;setup.py: Remove pyparsing as dependency
Not used since spotify/luigi#1309

==

setup.py
==================
21acf07e;Arash Rouhani;2015-10-23 11:09:27 +0200;Merge pull request #1342 from Tarrasch/unbreak_rtd_build
docs: Unbreak readthedocs build
==
==================
37b6b4c8;Arash Rouhani;2015-10-23 11:05:52 +0200;docs: Unbreak readthedocs build
I apparently broke, see:

https://readthedocs.org/projects/luigi/builds/3418481/

==

doc/conf.py
==================
f9f85c12;Arash Rouhani;2015-10-23 11:02:48 +0200;Merge pull request #1310 from Houzz/run_and_track_tests
Adds tests for run_and_track_hadoop_job
==
==================
ffe44e07;Dave Buchfuhrer;2015-10-22 16:05:59 -0700;Adds a current_tasks argument for retransmission in get_work
Sometimes a worker will not receive the result of a get_work call from the
scheduler. This leaves the scheduler thinking that the worker is running tasks
that the worker is not running. In order to safely clear up the misunderstanding
we let the scheduler know which tasks the worker is running with each get_work
call. If the scheduler finds that the worker isn't aware of a task that it
should be running, the scheduler will send it to the worker.

In order to maintain backward compatibility and not have to rewrite every unit
test, leaving out current_tasks from the get_work call will be treated as
equivalent to sending every currently running task.

Note that this does not check that every task sent in the currently running
list is actually running.

==

luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
test/execution_summary_test.py
test/retcodes_test.py
test/scheduler_visualisation_test.py
test/worker_test.py
==================
1b934e19;Dave Buchfuhrer;2015-10-22 15:18:53 -0700;Stops KeepAliveThread and subprocesses on exception in run
If run throws an exception with multiple workers, the KeepAliveThread and any
subprocesses will keep running until all subprocesses are complete. This can
cause communication inconsistencies with the scheduler, so we solve it here by
killing all subprocesses to immediately terminate the worker.

==

luigi/interface.py
luigi/worker.py
test/interface_test.py
test/worker_test.py
==================
ff1582bd;Brian;2015-10-22 15:29:44 -0400;do not forward SSH agent
Luigi should not be forwarding SSH agents.  Beyond that, not when performing file transfers, as 'scp' does not have the ability to create new sessions from the remote server.  Beyond that still, forwarding agents when when connecting to hosts without verifying the host keys first (no_host_key_check) means a MITM could remotely authenticate as the origin user.

Note, this change does not prevent the use of SSH agents.  This change prevents remote servers from automatically getting agent forwards during file transfers.

This is the warning from OpenSSH's ssh_config mainpage with regards to ForwardAgent:

    Agent forwarding should be enabled with caution.  Users with the ability to
    bypass file permissions on the remote host (for the agent's Unix-domain
    socket) can access the local agent through the forwarded connection.  An
    attacker cannot obtain key material from the agent, however they can
    perform operations on the keys that enable them to authenticate using the
    identities loaded into the agent.

==

luigi/contrib/ssh.py
==================
4701bd6f;Brian;2015-10-22 14:50:24 -0400;allow SSH multiplexing
The SSH option for multiplexing, ControlMaster, was previously forcibly disabled in Luigi.

If a user's ssh configurations includes 'ControlMaster auto', the "weird behavior" as previously described in comment is when the 'ssh' instance spawned by Luigi happens to be the control master, the ssh forks a new process to keep the session alive.  The newly forked process does not close stderr, which prevents process.communicate() from returning.

As such, it is important to not allow luigi's SSH sessions to act as a control master.  However, the current mechanism prevents session multiplexing in its entirety rather than preventing the spawned ssh instances from becoming the control master, preventing the gain of session multiplexing benefits.

By switching luigi.contrib.ssh.RemoteContext._prepare_cmd to use "-o ControlMaster=no" rather than "-S none", the "weird behavior" discussed above is avoided without preventing the use of session multiplexing.  Users wishing to use session multiplexing can then spawn a control master outside of the context of Luigi, using a command such as "ssh -MNn user@server" started elsewhere.

NOTE: luigi.contrib.ssh.RemoteFileSystem._scp already uses ControlMaster=no, rather than disabling the use of session multiplexing without issue.

==

luigi/contrib/ssh.py
==================
6aae26f9;Arash Rouhani;2015-10-22 17:05:59 +0200;Merge pull request #1325 from Tarrasch/rename_more_info_section
docs: Clean and rename more_info section
==
==================
ccd41caf;Arash Rouhani;2015-10-22 17:04:19 +0200;Merge pull request #1327 from mortardata/upstream
Delete the marker file (_$folder$) when removing a directory
==
==================
2bd56ff6;Quentin Francois;2015-10-20 18:10:27 -0400;Delete the directory marker file (_$folder$) if it exists when calling remove on an S3Target pointing to a "directory"

==

luigi/s3.py
test/s3_test.py
==================
cee1169e;Arash Rouhani;2015-10-22 15:20:40 +0200;Merge pull request #1317 from outlierbio/ecs
AWS EC2 Container Service support
==
==================
4544bd19;Arash Rouhani;2015-10-22 13:42:01 +0200;Merge pull request #1329 from Tarrasch/docs_cmdline_fixes_markup
docs: Fix markup in command_line.rst
==
==================
edfe90cd;Arash Rouhani;2015-10-22 13:40:09 +0200;Merge pull request #1330 from Tarrasch/docs_regarding_server_and_visualiser
Docs regarding server and visualiser
==
==================
47f52793;Arash Rouhani;2015-10-22 13:39:49 +0200;Merge pull request #1332 from Tarrasch/docs_cleanup_in_parameters
Docs cleanup in parameters
==
==================
604e83db;Arash Rouhani;2015-10-22 13:38:51 +0200;Merge pull request #1336 from Tarrasch/fix_task_as_parameter_name
cli: Allow for --task as a parameter name
==
==================
7644f5fd;Arash Rouhani;2015-10-22 11:55:32 +0200;cli: Allow for --task as a parameter name
Note that this does not make --task specify the task name as it did with
the old OptParser.

I didn't find a general solution, with this implementation, the name
--root-task still fails to parse. I could chose an arbitrary string, but
I figured it's kind of "good" to prohibit users from calling a parameter
--root-task, as it would be confusing that won't be the actual root
task.

This fixes spotify/luigi#1335.

==

luigi/cmdline_parser.py
test/parameter_test.py
==================
bf363b29;Arash Rouhani;2015-10-22 10:21:39 +0200;Merge pull request #1324 from Tarrasch/add-more-range-docs
docs: Document the Range + class parameters trick
==
==================
6b83201e;Arash Rouhani;2015-10-21 16:44:27 +0200;Merge pull request #1326 from Tarrasch/make_parameter_render_nicely_in_docs
Add __repr__() to Parameter for nicer docs
==
==================
49f98184;Arash Rouhani;2015-10-21 15:17:54 +0200;Remove (hide) DateParameterBase
It was never in any released version. I think of it both as an
implementation detail that users don't care about

==

luigi/parameter.py
==================
f7a348ba;Arash Rouhani;2015-10-21 15:15:33 +0200;docs: Clean up docs for Bool[ean]Parameter
 * Mention that BooleanParameter is deprecated in docs
 * Remove old outdated implementation details from __init__

==

luigi/parameter.py
==================
95c767d3;Arash Rouhani;2015-10-21 14:59:45 +0200;docs: Squeeze in the client-server gif

==

doc/execution_model.rst
==================
774f17b1;Arash Rouhani;2015-10-21 14:26:23 +0200;docs: Screenshot with new svg layout algorithm

==

doc/central_scheduler.rst
doc/dependency_graph.png
==================
fe345afa;Arash Rouhani;2015-10-21 14:25:38 +0200;docs: Add new visualiser screenshot in README

==

README.rst
doc/visualiser_front_page.png
==================
787e6dcd;Arash Rouhani;2015-10-21 13:27:48 +0200;docs: Fix markup in command_line.rst
Also remove $ since it was it wasnt used in luigi_patterns.rst

==

doc/command_line.rst
==================
bea370db;Arash Rouhani;2015-10-20 17:12:24 +0200;Add __repr__() to Parameter when generating docs
Currently, the documentation page for Range doesn't look nice. One
reason is that the parmeters are documented like this:

     start = <luigi.parameter.DateParameter object>

This patch makes it look like this:

     now = IntParameter (defaults to None): set to override current time. In seconds since epoch

Also see the screenshots in the upcoming PR.

==

doc/conf.py
==================
0cee5e60;Arash Rouhani;2015-10-20 16:22:16 +0200;docs: Clean and rename more_info section
 * The future ideas are really outdated
 * The tests section is superseded by CONTRIBUTING.rst
 * I've never heard of luigi@spotify.com

==

doc/design_and_limitations.rst
doc/index.rst
==================
71f3c70b;Arash Rouhani;2015-10-20 16:06:38 +0200;docs: Document the Range + class parameters trick

==

doc/luigi_patterns.rst
doc/parameters.rst
==================
1d450c11;Erik Bernhardsson;2015-10-20 07:14:25 -0400;Merge pull request #1323 from Tarrasch/fix_1322_luigi_interface
Instantiate logging before logging error messages
==
==================
aff208a4;Arash Rouhani;2015-10-20 12:10:40 +0200;Merge pull request #1320 from Tarrasch/consolidate_param_parsing
Distingiush local and global cli params [#1304]
==
==================
09aa6c6a;Arash Rouhani;2015-10-20 12:05:24 +0200;Instantiate logging before logging error messages
This fixes spotify/luigi#1322

==

luigi/retcodes.py
test/cmdline_test.py
==================
efd89934;Arash Rouhani;2015-10-17 11:24:34 +0200;Distingiush local and global cli params [#1304]
Since the command line overhaul in #1182. One unexpected behavior
was introduced, namely that --x and --MyTask-x would mean the same
thing. As a consequence, `--x 123` would set parameter x to 123 not only
for the parsed root Task specified on the command line. But for all
parmeters x of that task family. Since even Dave from Houzz was confused
by this, we decided to revert that behavior in issue #1304.

While at it. I also made these changes:

 * I decided to do a quite big refactoring. Including finally
   removing the `is_bool` kwarg from the Parameter constructor.
 * I added a test for deps.py script, as I've already been close to
   breaking it twice.

==

luigi/cmdline_parser.py
luigi/interface.py
luigi/parameter.py
luigi/tools/deps.py
test/cmdline_test.py
test/date_interval_test.py
test/date_parameter_test.py
test/helpers.py
test/parameter_test.py
==================
855909db;Dave Buchfuhrer;2015-10-08 17:05:18 -0700;Passes tracking_url_callback from BaseHadoopJob.run to run_and_track_hadoop_job
This allows tracking urls for mapreduce jobs to be shown in the visualiser.

==

luigi/contrib/hadoop.py
luigi/contrib/hadoop_jar.py
luigi/contrib/hive.py
luigi/contrib/scalding.py
test/contrib/hadoop_jar_test.py
==================
9ef9d4ef;Dave Buchfuhrer;2015-10-08 16:44:02 -0700;Wires up tracking_url_callback from run to vis
This passes an optional tracking_url_callback parameter into the run function of
tasks. The worker passes a callback that updates the scheduler with the url. The
scheduler can then display the url in the visualiser.

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
luigi/worker.py
test/central_planner_test.py
test/worker_test.py
==================
87378ff6;Dave Buchfuhrer;2015-10-15 13:39:21 -0700;Adds documentation for max-graph-nodes

==

doc/configuration.rst
==================
c78d5fbc;Dave Buchfuhrer;2015-10-15 11:30:55 -0700;Displays truncated graph nodes in visualiser
When the scheduler sends a truncated graph, some nodes may have dependencies
that are not displayed. In order to not give a false impression to the end
user, these nodes are added back and marked as TRUNCATED status. These nodes
show that more dependencies exist and can be clicked on for more information
but mostly preserve a smaller graph.

In order to distinguish these nodes from UNKNOWN status nodes, I added UNKNOWN
and TRUNCATED to the legend. UNKNOWN remains black while TRUNCATED is given a
light purple in the svg graph. In the D3 graph TRUNCATED is not given a color.

==

luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/visualiserApp.js
==================
4dcdc38f;Dave Buchfuhrer;2015-10-15 11:30:24 -0700;Allows limiting of graph size returned by scheduler
Like with task lists, excessively large graphs can render the visualiser
unusable. To prevent this issue, we've added a max-graph-nodes parameter that
cuts off the graph after enough nodes are seen.

In order to achieve this, the graph recursion had to be re-written as a an
iterative breadth-first traversal. The inverse dependency graph function was
re-written to be able to call this same traversal, resulting in greatly improved
complexity. Rather than scanning the entire graph once per node to find its
reverse neighbors, we scan the whole graph exactly once and store the reverse
edges in a lookup table. This improves the complexity from number of nodes times
size of graph to just number of nodes.

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
48b85d16;Dave Buchfuhrer;2015-10-13 14:06:10 -0700;Tracks yarn application ids and kills them on interrupt
hadoop_context is used in track_and_run_hadoop_job to ensure that jobs are
killed on interrupt, but the kill method is deprecated under yarn. This updates
the tracking to extract application ids and preferentially kill the application
when possible.

==

luigi/contrib/hadoop.py
test/contrib/hadoop_test.py
==================
a435870d;Dave Buchfuhrer;2015-10-13 13:48:29 -0700;Adds tests for run_and_track_hadoop_job
As requested in #1299. This tests extraction of information from stderr
and raising an error on non-zero exit codes.

==

test/contrib/hadoop_test.py
==================
a9bca5fa;Jake Feala;2015-10-17 16:22:25 -0400;AWS EC2 Container Service support
From the AWS website,

> Amazon EC2 Container Service (ECS) is a highly scalable, high
performance
> container management service that supports Docker containers and
allows you
> to easily run applications on a managed cluster of Amazon EC2
instances.

To use ECS, you create a "task definition" JSON that defines the
`docker run`
command for one or more containers in a task or service, and then
submit this
JSON to the API to run the task.

This wrapper allows you to create Luigi Tasks to submit ECS
`taskDefinition`s.
You can either pass a dict (mapping directly to the `taskDefinition`
JSON) or an
Amazon Resource Name (arn) for a previously registered `taskDefinition`.

Testing was performed on the default cluster created through the ECS
console
[first run wizard](https://console.aws.amazon.com/ecs/home#/firstRun)

Requires boto3, configured with valid AWS credentials

==

luigi/contrib/ecs.py
test/contrib/ecs_test.py
==================
1f416149;Arash Rouhani;2015-10-19 13:35:16 +0200;tests: Remove Register state leakage in tests
It caused build failures in #1320

==

test/date_interval_test.py
test/task_history_test.py
test/worker_task_test.py
==================
3b117120;Arash Rouhani;2015-10-19 14:01:36 +0200;Merge pull request #1309 from stephenpascoe/remove_id_to_name_and_params
Remove id to name and params
==
==================
2cb7db08;Arash Rouhani;2015-10-19 13:57:34 +0200;Merge pull request #1300 from Tarrasch/make-add-task-always-emit-info
Make luigi always log task status changes
==
==================
27c23917;Arash Rouhani;2015-10-19 13:47:22 +0200;Merge pull request #1316 from Houzz/more_accurate_graph_columns
Computes number of columns per graph level more accurately
==
==================
a133c5b4;Stephen Pascoe;2015-10-13 17:12:51 +0100;Optimise DbTaskHistory.find_all_by_parameters() by including the parameter constraints in the SQL query.

==

luigi/db_task_history.py
==================
e6a82cfe;Stephen Pascoe;2015-10-13 15:56:14 +0100;Remove the id_to_to_name_and_params() function.
The TaskHistory API now passes round insteances of luigi.scheduler.Task() instead.
I retain the task_history.Task() class as a wrappera round scheduler.Task().

Added test for blank parameter values.  This test would have failed when
id_to_task_name_and_params was in use.

==

luigi/db_task_history.py
luigi/scheduler.py
luigi/task.py
luigi/task_history.py
luigi/tools/parse_task.py
test/db_task_history_test.py
test/task_history_test.py
test/task_test.py
==================
e4714696;Steve Peak;2015-10-19 08:26:38 +0200;use Codecov for uploading code coverage reports

==

README.rst
tox.ini
==================
29f2715c;Erik Bernhardsson;2015-10-18 15:33:58 -0400;Merge pull request #1318 from spotify/erikbern/elasticsearch-fix
Travis fixes (mostly ElasticSearch)
==
==================
0b8666d3;Erik Bernhardsson;2015-10-17 23:16:37 -0400;bulk_index -> bulk

==

luigi/contrib/esindex.py
==================
cf4651cd;Erik Bernhardsson;2015-10-17 23:14:14 -0400;Fixing elasticsearch import
Problem was that bulk_index wasn't defined so the whole import failed

==

luigi/contrib/esindex.py
==================
6f6879af;Erik Bernhardsson;2015-10-17 22:45:57 -0400;Don't force Python 3.4 on Travis
Looking at output like https://travis-ci.org/spotify/luigi/jobs/85983702 implies all tests are currently run using Python 3.4. That's no good.

==

.travis.yml
==================
e5229381;Erik Bernhardsson;2015-10-17 22:26:15 -0400;don't create Target in global scope

==

test/contrib/esindex_test.py
==================
81ed9482;Erik Bernhardsson;2015-10-17 22:25:27 -0400;moved esindex_test to contrib subdir

==

test/contrib/esindex_test.py
==================
3c354c95;Dave Buchfuhrer;2015-10-15 19:55:23 -0700;Computes number of columns per graph level more accurately
The number of columns per level was computed to be the minimum of the
number of columns allowed in the viewport and the number of items in the
row. This is an overestimate, however, due to the way that columns are
filled in. Suppose we have 6 columns and 7 items. We'll put two items in
each column, as ceil(7 / 6) = 2. Because there are only 7 items, we only
end up using 5 columns. Because we are laying out for 6, this means we
don't use enough horizontal space.

To fix this, we can either use a variable number of items per column or
adjust the layout to display the number of columns actually used. I opt
for the second choice here, as the code is simpler and it looks nicer
with the binary tree example graph I was using.

==

luigi/static/visualiser/js/graph.js
==================
de0421b4;Arash Rouhani;2015-10-15 12:23:26 +0200;Merge pull request #1311 from Houzz/refresh_indication
Shows spinner on status info boxes while loading
==
==================
1bf7c8bb;Dave Buchfuhrer;2015-10-14 15:18:23 -0700;Shows spinner on status info boxes while loading
It can be a little confusing to tell whether the info boxes on the visualiser
tasks tab have been updated yet or not when using Filter on Server in the
datatables search box. This makes it more clear by resetting the number to a
question mark on updates and also turning the icon into a spinner while it's
waiting to load.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
e9ddb018;Erik Bernhardsson;2015-10-14 10:56:44 -0400;Merge pull request #1291 from Tarrasch/various-doc-fixes
Various doc fixes
==
==================
76846c18;Arash Rouhani;2015-10-13 22:43:02 +0200;Merge pull request #1308 from Luiti/support_json_deserialization
Remove cached_property extraneous dependency
==
==================
bceec515;David Chen;2015-10-13 20:39:17 +0800;Remove cached_property extraneous dependency, refer to https://github.com/spotify/luigi/pull/939#issuecomment-147663679

==

luigi/contrib/hadoop.py
setup.py
==================
3d83a187;Arash Rouhani;2015-10-13 11:47:27 +0200;Merge pull request #1293 from Tarrasch/make_task_arg_positional
cli: Fail on unknown param and show TASK in --help
==
==================
9cfd8bfd;Erik Bernhardsson;2015-10-12 22:09:01 -0400;Merge pull request #1305 from deathbymochi/add-s3client-get
Add get methods to S3Client
==
==================
9785aa91;Erik Bernhardsson;2015-10-12 22:08:15 -0400;Merge pull request #1306 from Houzz/target_copy
Add copy function to HdfsTarget
==
==================
a88dddec;Kunming Qu;2015-10-12 17:26:21 -0700;Add copy function to HdfsTarget
Allows copy function of underlying file system to be accessed
by HdfsTarget

==

luigi/contrib/hdfs/target.py
==================
131c2f54;Tiffany Hu;2015-10-12 19:04:03 -0400;Add get methods to S3Client

==

luigi/s3.py
test/s3_test.py
==================
4ae97988;Arash Rouhani;2015-10-08 16:47:41 +0200;cli: Fail on unknown param and show TASK in --help
This commit solves two different but implementation wise related issues:

 * When you do `luigi --help`, it does not even mention that you should
   supply a positional task argument. I also wonder if it's better to
   just mark it as a named argument (like OptParser had with --task)
 * Make luigi fail when one passes an unrecognized argument. It's a
   serious problem when the argument has a default value, since then the
   task will get instantiated anyway. For example, today somebody
   mentioned that they misspelled --hours-back to --hours_back in the
   luigi user group. This bug was probably introduced during the
   pretty recent command line parsing overhaul.

==

luigi/cmdline_parser.py
test/cmdline_test.py
==================
119fa920;Arash Rouhani;2015-10-09 20:15:35 +0200;Merge pull request #1302 from thatneat/patch-1
clarify #569 multiple workers limitation
==
==================
6805d094;Arash Rouhani;2015-10-09 20:14:48 +0200;Merge pull request #1303 from Houzz/fix_graphs
Reverts #1296 "Makes computeDepth take linear time"
==
==================
b6685c30;Dave Buchfuhrer;2015-10-09 11:02:04 -0700;Reverts #1296 "Makes computeDepth take linear time"
There was a bug in the assumptions of #1296, as it treated depth and height as
having a 1-1 relationship. This is only true with balanced trees. For example,
consider the following tree:

      A
     / \
    B   C
         \
          D

In this tree, B has height 0 and depth 1 while D has height 0 and depth 2. So
the graph will be laid out weirdly if we compute the depth of B and D by
subtracting their heights from the height of A.

There seems to be another bug in the implementation that can actually throw
B off of the graph, but I'm not sure exactly why that was happening.
==

luigi/static/visualiser/js/graph.js
==================
e5e2f09e;thatneat;2015-10-09 09:50:28 -0700;clarify #569 multiple workers limitation
I stumbled over this for a while - updated docs to help the next person:
- added mention of the name of the config item (dashed not underscored was another stumbling point)
- multiple workers caveat is important
- mention of config file name wasn't the whole story so removed it
==

luigi/task.py
==================
7c1ef3ec;Arash Rouhani;2015-10-09 17:39:31 +0200;Merge pull request #1294 from lungetech/wait-jitter
make the wait_interval jitter configurable
==
==================
a1cc1ff2;Brian;2015-10-08 11:01:00 -0400;make the wait_interval jitter configurable
This change allows for the configuration of how much a randomness to add to the
sleep value for a worker.

updates per comments:
* don't specify config_path, per request
* add unit tests to verify jitter
* use mock rather than allowing actual sleeps to occur

==

doc/configuration.rst
luigi/worker.py
test/worker_test.py
==================
1ff70aa6;Arash Rouhani;2015-10-09 11:44:10 +0200;Make luigi always log task status changes
I find debugging luigi logs a bit hard. Most task status changes are
emitted when luigi client says "Scheduler MyTask() (DONE)". But not all
status changes are logged (but I still expect them to be). I've made it
output what it does on every call to /api/add_task.

==

luigi/worker.py
==================
ea0f85e0;Arash Rouhani;2015-10-09 10:58:57 +0200;Merge pull request #1250 from Tarrasch/remove_SUSPENDED_status
Deprecate SUSPENDED status
==
==================
23d4d392;Arash Rouhani;2015-10-08 14:19:43 +0200;docs: Rename headings, move and remove content
 * I see no need for the current "Getting Started" since we already have
   the left pane in the RTD page.
 * Documentation section can be melded into previous section. Like it
   partially already is.
 * There was two "background" sections. I renamed one to philosophy, as
   it is the concepts of luigi that strongly distinguishes it from say
   Apache Oozie.

Also, the documentation links had to be anonymized:
http://stackoverflow.com/a/14067756/621449

==

README.rst
==================
b0e3aa2c;Arash Rouhani;2015-10-08 13:35:00 +0200;docs: Remove "Getting Help" section
I checked that the #luigi freenode channel is dead.

As for the mailing list, there is already a link there. Were I briefly
added it's purpose.

==

README.rst
==================
bf303d1f;Arash Rouhani;2015-10-08 13:31:51 +0200;docs: Don't link to "Configuration"
It's already fully visiable on the left pane of the read the docs page.

==

README.rst
==================
2638b2ec;Arash Rouhani;2015-10-08 13:31:16 +0200;docs: Simplify "Getting Luigi" section

==

README.rst
==================
5899a3d2;Arash Rouhani;2015-10-08 13:27:21 +0200;docs: delete doc/README.md and save what's useful
The interesting parts are not put into CONTRIBUTING.rst. the old file
wasn't referenced from anywhere, but CONTRIBUTING.rst is automatically
highlighted whenever somebody is about to open a PR from GitHub. Also,
it migrates .md docs into .rst docs.

==

CONTRIBUTING.rst
doc/README.md
==================
9deb77be;Arash Rouhani;2015-10-08 12:53:39 +0200;Update "Who Uses Luigi" section

==

README.rst
==================
de4f9a37;Arash Rouhani;2015-10-09 10:38:07 +0200;Merge pull request #1264 from Tarrasch/semantic-error-codes
Add semantic exit codes
==
==================
c894a7db;Arash Rouhani;2015-10-09 09:55:59 +0200;Merge pull request #1263 from lungetech/exec_summary_cleanup
normalize execution summary (addresses #1260 and #1261)
==
==================
32716d6a;Arash Rouhani;2015-10-09 09:40:47 +0200;Merge pull request #1299 from Houzz/track_newer_hadoop
Captures tracking urls more broadly
==
==================
ca7b3ba2;Arash Rouhani;2015-10-09 09:38:25 +0200;Merge pull request #1296 from Houzz/better_complexity
Makes computeDepth take linear time
==
==================
b320921e;Dave Buchfuhrer;2015-10-08 17:07:52 -0700;Captures tracking urls more broadly
Tracking url lines in my current hadoop job runner don't look like

   tracking url: http://whatever

so in order to be able to match how they're output in different systems, I've
broadened the matching to use a regex.

==

luigi/contrib/hadoop.py
==================
5996a693;Arash Rouhani;2015-10-08 22:02:59 +0200;Merge pull request #1281 from lungetech/debian-remove-pip
remove python-pip as a build or install requirement
==
==================
541b5d83;Arash Rouhani;2015-10-08 22:02:01 +0200;Merge pull request #1279 from lungetech/debian-setuptools
add setuptools as a build prereq
==
==================
031b8a42;Brian;2015-10-01 14:04:21 -0400;normalize execution summary (addresses #1260 and #1261)
* allow configuration of the number of tasks to show in the execution summary (using luigi.Config)
* always preface each task in the execution summary with the number of times the task was called
* cleanup spacing for flake8
* cleanup expected results to take into account task sorting
* updates per comments for #1263
* sort the tasks before printing multiple tasks (sorted based on str, which allows python3.4 tests to pass too)

==

doc/configuration.rst
luigi/execution_summary.py
test/execution_summary_test.py
==================
75b9681f;Dave Buchfuhrer;2015-10-08 12:21:13 -0700;Makes computeDepth take linear time
computeDepth takes quadratic time because it needs to find the maximum depth of
each node and this can require repeated traversal as longer paths are found. In
order to compute this in linear time, we instead compute the height of each node
and then subtract this from the height of the root node. Heights can be computed
in linear time by a straightforward recursive algorithm with memoization.

Using a test example with a 400-task dependency chain with each task in the
chain depending on a task with 10000 dependencies the time necessary for
computeDepth on my laptop was reduced from about 5 seconds to about 13ms. This
is in line with the expected 400x speedup from removing quadratic behavior.

==

luigi/static/visualiser/js/graph.js
==================
3b5a5520;Erik Bernhardsson;2015-10-08 12:41:01 -0400;Merge pull request #1295 from Houzz/remove_log
Removes console.log statement accidentally left in code from debugging
==
==================
e1616ed2;Dave Buchfuhrer;2015-10-08 09:36:03 -0700;Removes console.log statement accidentally left in code from debugging

==

luigi/static/visualiser/js/graph.js
==================
435186d4;Brian;2015-10-08 10:22:31 -0400;only use setuptools per discussion

==

setup.py
==================
8e9b439c;Arash Rouhani;2015-09-24 19:58:13 +0200;Add semantic exit codes
This commits adds a long requested feature, to be able to tell what the luigi
client did (or didn't) based on its exit code. This closes spotify/luigi#687.

==

doc/configuration.rst
luigi/cmdline.py
luigi/interface.py
luigi/retcodes.py
test/retcodes_test.py
test/server_test.py
==================
37777e65;Arash Rouhani;2015-10-08 12:47:40 +0200;Merge pull request #1290 from Tarrasch/fix-docs-tox-env
Make `tox -e docs` so doesn't create temp-files
==
==================
c4d708f6;Arash Rouhani;2015-10-08 11:33:29 +0200;Make `tox -e docs` so doesn't create temp-files
Otherwise your directory becomes unclean, and the tox logic is much
simpler and safer now.

==

doc/conf.py
tox.ini
==================
71fdc076;Arash Rouhani;2015-10-08 10:47:52 +0200;Merge pull request #1288 from Houzz/cleanup_popover
Removes leftover popovers when updating graph data
==
==================
b327bb8d;Arash Rouhani;2015-10-08 10:45:23 +0200;Merge pull request #1287 from Houzz/denser_graphs
Displays SVG graphs in visualiser more densely
==
==================
73da7a02;Arash Rouhani;2015-10-08 10:14:48 +0200;Merge pull request #1286 from Houzz/better_graphs
Shortens task graphs by counting each node only once
==
==================
4239be05;Arash Rouhani;2015-10-08 09:55:56 +0200;Merge pull request #1285 from lungetech/mkdir-dont-lbyl
EAFP rather than LBYL for os.makedirs 
==
==================
c08f2c5b;Dave Buchfuhrer;2015-10-07 18:23:25 -0700;Removes leftover popovers when updating graph data
This is necessary because the popover that's visible when you click on a node
to view its subgraph does not go away on its own. When it remains, it cannot be
removed through normal user actions. It can either obscure the graph or linger
outside of the bounds of the new graph, causing the page to scroll below where
it normally would to display the popover. By destroying the popovers, this
problem is solved.
==

luigi/static/visualiser/js/graph.js
==================
40594145;Dave Buchfuhrer;2015-10-07 16:09:26 -0700;Displays SVG graphs in visualiser more densely
The SVG graphs only show one item on each horizontal line, which can result in
very tall graphs. This shows multiple items per line in order to compress the
amount of vertical space needed to display a graph. Each node is given 200
pixels width to display names in order to minimize overlaps.

==

luigi/static/visualiser/js/graph.js
==================
4bf7b221;Dave Buchfuhrer;2015-10-07 15:05:48 -0700;Shortens task graphs by counting each node only once
In computeDepth in graph.js, the entire dependency tree is traversed and each
node is given a depth and position within its depth. This computation is a bit
off, however, as a node may be encountered multiple times during traversal. This
could be easily fixed by stopping the recursion when we hit a seen node, but
then we could end up with a node depending on a node at a higher level than
itself.

Instead, I turn this into a two-stage affair. In the first stage, we do the full
traversal and only remember the maximum depth for each node. In the second stage
we traverse the whole tree again and only place nodes when we hit them for the
first time at the right depth. The second step requires a tree traversal rather
than just iterating over the nodes array because it groups child nodes together
and results in a much more readable and nicer-looking graph.

This shrinks each level's height by a factor of about the average in-degree.
==

luigi/static/visualiser/js/graph.js
==================
86fd91b9;Brian;2015-10-07 17:42:53 -0400;EAFP rather than LBYL for os.makedirs  Addresses spotify/luigi#1284

==

luigi/contrib/hadoop.py
luigi/contrib/ssh.py
luigi/file.py
luigi/process.py
==================
d9bc6460;Arash Rouhani;2015-10-07 16:05:28 +0200;Merge pull request #1271 from dhruvg/remove_bool_assertion
Allow default BoolParameter to be True.
==
==================
c27cc4a6;Dhruv Garg;2015-10-05 18:00:31 -0400;Allow default BoolParameter to be True.

==

luigi/parameter.py
test/parameter_test.py
==================
b4656dcc;Arash Rouhani;2015-10-07 15:10:19 +0200;Merge pull request #1272 from Houzz/reserve_after_get
Only reserves resources for workers that have recently called get_work
==
==================
af397d89;Arash Rouhani;2015-10-07 14:26:12 +0200;Merge pull request #1276 from Tarrasch/make_help_not_suck
cli: Make --help useful and add --help-all
==
==================
188ebcee;Arash Rouhani;2015-09-26 03:39:13 +0200;Deprecate SUSPENDED status
The reason is just to simplify the code, it's confusing when there are
so many statuses. And it's not obvious at all how it's utilized and that
it's only associated with the new_deps parameter.

This makes so new clients will not send the status SUSPENDED. Server
will still just convert it to PENDING as previously.

Hence, it will work for "old client new server", but not vice verse.

==

luigi/scheduler.py
luigi/task_status.py
luigi/worker.py
==================
68ae22b5;Arash Rouhani;2015-10-06 17:25:45 +0200;cli: Make --help useful and add --help-all
Before this commit, running `luigi --help` is going to print 300 lines
of probably not useful flags, mostly being about all the combinations of
the registered various versions of the Range flags. Instead, I changed
--help to just print.

    $ ./bin/luigi --help
    usage: luigi [--local-scheduler] [--module CORE_MODULE] [--help] [--help-all]

    optional arguments:
      --local-scheduler     Use a in-memory central scheduler. Useful for testing.
      --module CORE_MODULE  Used for dynamic loading of modules
      --help                Show most common flags and all task-specific flags
      --help-all            Show all command line flags
    Exiting due to --help was passed

And when you're interested in an actual tasks parameter, they will be
displayed when specifying that task.

    $ ./bin/luigi --module examples.foo examples.Bar --help
    ...
    --num EXAMPLES.BAR_NUM, --examples.Bar-num EXAMPLES.BAR_NUM
    ...

==

luigi/cmdline_parser.py
luigi/interface.py
luigi/parameter.py
test/cmdline_test.py
==================
e8451d54;Arash Rouhani;2015-10-07 10:42:32 +0200;Merge pull request #1277 from Yoone/feature/runanyway-fix
Cleaned up temp_dir function in test/simulate (branch renamed)
==
==================
69ae444f;Arash Rouhani;2015-10-07 09:28:43 +0200;Merge pull request #1265 from Tarrasch/fix-assertEquals-usages
tests: Rename assertEquals --> assertEqual
==
==================
46cebbe1;Brian;2015-10-06 16:03:01 -0400;remove python-pip as a build or install requirement
'pip' should not be used to install prereqs, these should be done via debian
packages, both during build time as well as runtime

==

debian/control
==================
4a16d265;Brian;2015-10-06 13:58:55 -0400;add setuptools as a build prereq

==

debian/control
==================
2e39bb45;Erik Bernhardsson;2015-10-06 12:37:50 -0400;Merge pull request #1249 from Tarrasch/remove_unneeded_code
worker.py: Remove unnecessary (== RUNNING) check
==
==================
9c3594e5;Arash Rouhani;2015-10-02 14:31:32 +0200;tests: Rename assertEquals --> assertEqual
Otherwise you get deprecation warnings thrown at you in Python 3.

==

test/cmdline_test.py
test/contrib/gcs_test.py
test/contrib/test_ssh.py
test/date_interval_test.py
test/parameter_test.py
test/rpc_test.py
test/s3_test.py
test/task_test.py
test/worker_test.py
==================
51a6c8e9;Dave Buchfuhrer;2015-10-02 15:55:25 -0700;Only reserves resources for workers that have recently make a get_work request
This presents workers that are scheduling or being phased out from
holding on to resources that they're not ready to use yet or will never
request. To accomplish this, we only reserve resources for workers that
have recently made a get_work request. We define recently by being
within the worker_disconnect_delay. Really this should be the
wait_interval, but the scheduler doesn't have access to that value.

==

luigi/scheduler.py
test/central_planner_test.py
==================
f1471d2e;Yoann Bentz;2015-10-06 09:58:32 -0400;Cleaned up temp_dir function in test/simulate

==

test/simulate_test.py
==================
ffad9e80;Arash Rouhani;2015-10-06 14:21:36 +0200;Merge pull request #1274 from Tarrasch/make_help_not_suck
cli: Merge local and global cli parser flags
==
==================
3ef961f3;Arash Rouhani;2015-10-06 11:02:56 +0200;cli: Merge local and global cli parser flags
This patch is all about using argparse in a more native way.  This
doesn't change luigi much. But users of --help will now notice that
flags like `--of` and `--RangeHourly-of` are not merged. Like this:

    ./bin/luigi --local-scheduler RangeHourly --help
    ...
      --of RANGEHOURLY_OF, --RangeHourly-of RANGEHOURLY_OF
                             RangeHourly.of task name to be completed. The task
                             must take a single datetime parameter
    ...

Further, it has these advantages:

 * Less logic, internals are simpler
 * Slightly less output in --help
 * In the future. It could help us leverage the built in conflict
   handling in argparse

==

luigi/cmdline_parser.py
luigi/parameter.py
==================
4c539ae9;Arash Rouhani;2015-10-06 10:48:54 +0200;Merge pull request #1245 from Yoone/feature/runanyway
Target that makes a task run everytime
==
==================
31173d5c;Yoann Bentz;2015-09-23 15:31:57 -0400;Added contrib.simulate.RunAnywayTarget with test in test/simulate_test.py
RunAnywayTarget: added new test, checking tasks output

RunAnywayTarget: added test and a reset function called in each test

Fixed coding style and documentation errors

RunAnywayTarget: Made some changes to the custom temp directory and fixed some problems related to travis' tests

RunAnywayTarget: complied with the sphinx documentation syntax

Fixed unused import and used absolute paths for custom temp dirs in simulate_test

RunAnywayTarget: changed the way it works, now deleting files at the end of the execution

Removed a test than made no sense with the new changes, and adapted the other ones

Revamped luigi.contrib.simulate module using a shared value containing a PID as an unique identifier

Changed tests for luigi.contrib.simulate and removed the inconsistent ones

Fixed test_output in simulate_test, and removed Travis specific file removal

Potentially bypassed tests for environments that don't allow file creation in a temporary directory

Fixed coding style and added is_writable decorator in simulate_test

Fixed is_writable decorator, now creating parent directories and handling exceptions

Made changes to the RunAnywayTarget (changed comments, used task_id) and added a test ran in another process

==

luigi/contrib/simulate.py
test/simulate_test.py
==================
982617f1;Arash Rouhani;2015-10-05 09:41:36 +0200;Merge pull request #1267 from dhruvg/task_process_helpers
Move error notification and task process creation logic into separate…
==
==================
d23e5e54;Dhruv Garg;2015-10-02 14:13:09 -0400;Move error notification and task process creation logic into separate methods for easier extendability.

==

luigi/worker.py
==================
af9b1b0d;Erik Bernhardsson;2015-10-02 12:11:56 -0400;Merge pull request #1266 from Tarrasch/docs-remove-trailing-whitespace
docs: Remove trailing whitespace
==
==================
2f9b7618;Arash Rouhani;2015-10-02 14:26:43 +0200;docs: Remove trailing whitespace

==

doc/configuration.rst
doc/example_top_artists.rst
doc/execution_model.rst
doc/parameters.rst
doc/workflows.rst
==================
13b065d7;Arash Rouhani;2015-10-02 13:42:34 +0200;Merge pull request #1252 from Tarrasch/various-doc-fixes
Various doc fixes
==
==================
e006ec9c;Arash Rouhani;2015-10-02 10:57:10 +0200;Merge pull request #1243 from jkukul/master
Use default number of attempts (3) for get_work rpc method.
==
==================
17fbd9ef;Arash Rouhani;2015-10-01 09:42:38 +0200;Merge pull request #1262 from Carevoyance/gce_target_typo
Change S3 references to GCS
==
==================
ca28261e;Daniel Imfeld;2015-09-30 20:39:53 -0500;Change S3 references to GCS

==

luigi/contrib/gcs.py
==================
49153929;Arash Rouhani;2015-09-30 19:07:51 +0200;Merge pull request #1259 from JackDanger/patch-2
Typo in rdbms docs
==
==================
b3776b85;Jack Danger Canty;2015-09-30 10:02:58 -0700;Typo in rdbms docs

==

luigi/contrib/rdbms.py
==================
7a64fbbb;Arash Rouhani;2015-09-30 10:43:06 +0200;Merge pull request #1258 from Houzz/sorted_worker_tasks
Sorts running tasks on worker page by running time
==
==================
0a573bd2;Arash Rouhani;2015-09-30 10:42:53 +0200;Merge pull request #1257 from Houzz/nicer_worker_page
Makes the worker page look nicer
==
==================
9aa32c45;Arash Rouhani;2015-09-30 10:42:29 +0200;Merge pull request #1256 from Houzz/buck/remove_show_worker
Removes showWorker argument from taskToDisplayTask
==
==================
ba122496;Arash Rouhani;2015-09-30 10:41:46 +0200;Merge pull request #1255 from Houzz/remove_status_selectors
Removes status selectors from graph and worker viz tabs
==
==================
470dc177;Dave Buchfuhrer;2015-09-29 12:40:30 -0700;Sorts running tasks on worker page by running time
This makes it easier to keep track with what workers are doing over time.

==

luigi/static/visualiser/js/visualiserApp.js
==================
0434881e;Dave Buchfuhrer;2015-09-28 18:56:54 -0700;Makes the worker page look nicer
This applies some AdminLTE styling to the worker page so that it's more readable
and fits in more with the look of the rest of the visualiser.

==

luigi/static/visualiser/index.html
==================
b8d8236a;Dave Buchfuhrer;2015-09-29 12:30:20 -0700;Removes showWorker argument from taskToDisplayTask
This argument is no longer used, but was causing a bug because maps were passing
indices to it, causing it to evaluate to true when this is never intended.
==

luigi/static/visualiser/js/visualiserApp.js
==================
9b535f36;Dave Buchfuhrer;2015-09-28 16:22:56 -0700;Removes status selectors from graph and worker viz tabs
The status selectors aren't used on these tabs, so they serve only to confuse.

==

luigi/static/visualiser/index.html
==================
ead418a3;Arash Rouhani;2015-09-28 18:17:15 +0200;docs: Settle on luigi.contrib.hdfs re-exporting
So I changed on my mind on this. It would have been too much pain for
all luigi users to change their imports.

==

luigi/contrib/hdfs/__init__.py
==================
0adb5ca6;Arash Rouhani;2015-09-28 18:12:48 +0200;docs: Remove chapter about programmatic execution
The first section is just old and discouraged advice. The second section
is things that one might just as well find from the module-level docs of
interface.py

==

doc/index.rst
doc/programmatic_execution.rst
==================
0740fb93;Arash Rouhani;2015-09-28 18:02:55 +0200;docs: Remove old outdated --help example
The --help is currently extremely verbose. Has to be fixed.

==

doc/example_top_artists.rst
==================
689e7b92;Arash Rouhani;2015-09-28 18:02:17 +0200;docs: Prefer luigi binary style in examples
Trying to evangelize the declarative like way of using luigi.

==

doc/command_line.rst
doc/example_top_artists.rst
doc/parameters.rst
==================
154c283e;Arash Rouhani;2015-09-28 15:59:35 +0200;Merge pull request #1182 from Tarrasch/big-parameters-refactoring
Major command line parsing overhaul (internal)
==
==================
c88dc560;Arash Rouhani;2015-09-26 19:23:21 +0200;Merge pull request #1248 from Tarrasch/fixes_for_execution_summary
Fixes for execution summary
==
==================
11fa54b4;Arash Rouhani;2015-09-26 02:45:09 +0200;worker.py: Remove unnecessary (== RUNNING) check
It must be from old times or something. RUNNING is only a concept of
luigid, you never add_task(status=RUNNING) so to say.  The status is
taken from the task queue, and the task queue is of course only
populated from the client.

==

luigi/worker.py
==================
6802a808;Arash Rouhani;2015-09-25 22:32:08 +0200;Add tests for "unknown" in execution summary
Also simplify the logic itself a tiny bit

==

luigi/execution_summary.py
test/execution_summary_test.py
==================
370c388f;Arash Rouhani;2015-09-25 22:27:55 +0200;tests: exe summary: One more already_running test

==

test/execution_summary_test.py
==================
5a559454;Arash Rouhani;2015-09-25 17:14:55 +0200;Merge pull request #1246 from lungetech/output_pipe_recursion
prevent infinite recursion for _input_pipe and _output_pipe
==
==================
a8dc4760;Brian;2015-09-25 10:28:19 -0400;add unittest to verify the getattr recursion error has been corrected

==

test/contrib/test_ssh.py
==================
3e26d0da;Brian;2015-09-24 16:29:10 -0400;prevent infinite recursion for _input_pipe and _output_pipe
Basically, the same problem corrected for _process in 9f6c33f5c9247e931e9993f1146632d2f651d63a

==

luigi/format.py
==================
8af06583;Arash Rouhani;2015-09-24 14:46:30 +0200;Merge pull request #1242 from moandcompany/fix_example
Fix examples: foo_complex.py luigi run arguments to include task namespace
==
==================
3a7d1c38;Erik Bernhardsson;2015-09-24 07:09:12 -0400;Merge pull request #1244 from compete/topics/fix_pickling_for_hdfs_target
fix pickling for HdfsTarget
==
==================
29290051;Andrew Mo;2015-09-23 20:08:05 -0700;Add hello world example

==

examples/hello_world.py
==================
4a13077c;David Thompson;2015-09-18 17:43:15 -0400;fix pickling for HdfsTarget
Standard instances of HdfsTarget could not be pickled after aab71dac.

==

luigi/contrib/hdfs/format.py
test/contrib/hdfs_test.py
==================
6dfe9af9;Jakub Kukul;2015-09-22 18:49:07 +0200;Use default (3) number of attempts for get_work rpc method.
Just one attempt result in many intermediate failures.

I can't see a reason why get_work would have different retry behaviour.

==

luigi/rpc.py
test/rpc_test.py
==================
d2dac794;Arash Rouhani;2015-09-23 13:51:47 +0200;Merge pull request #1241 from tuulos/patch-1
add AdRoll to the list of Luigi users
==
==================
8c05df24;Andrew Mo;2015-09-22 23:50:48 -0700;Fix luigi run arguments to include task namespace

==

examples/foo_complex.py
==================
a96bbd57;Ville Tuulos;2015-09-22 22:45:39 -0700;add AdRoll to the list of Luigi users
we published a blog article about our stack that is based on Luigi and Docker today at http://tech.adroll.com/blog/data/2015/09/22/data-pipelines-docker.html
==

README.rst
==================
7488536e;Arash Rouhani;2015-09-22 21:30:01 +0200;Merge pull request #1240 from joeshaw/range-param-name
add parameter name parameter to RangeBase
==
==================
9c7bfa15;Joe Shaw;2015-09-22 10:40:44 -0400;add parameter name parameter to RangeBase
When set, use this name as a keyword argument for the parameterized
value (date, hour, whatever) instead of using the first positional
argument.

==

luigi/tools/range.py
test/range_test.py
==================
08e542ed;Arash Rouhani;2015-09-21 22:49:08 +0200;Merge pull request #1222 from SkyTruth/gcs-doc-fix
Allow gcs._DeleteOnCloseFile().close() to be called multiple times
==
==================
b3701d7a;Kevin Wurster;2015-09-16 17:52:10 -0400;Ensure gcs._DeleteOnCloseFile().close() can be called multiple times.
Fix a bug where the tempfile would never be deleted.

flake8 compliance

==

luigi/contrib/gcs.py
test/contrib/gcs_test.py
==================
ffffecc9;Arash Rouhani;2015-09-21 17:45:05 +0200;Merge pull request #1234 from Houzz/svg_popover
Uses popovers instead of tooltips for svg graph
==
==================
0d3217e9;Erik Bernhardsson;2015-09-21 08:43:09 -0400;Merge pull request #1179 from graingert/patch-4
route out some python 3.4 errors
==
==================
bba1ef2e;Arash Rouhani;2015-09-07 22:37:35 +0200;Major command line parsing overhaul (internal)
This patch sets out to clean up the logic for command line parsing
currently used in luigi. The intent is

 * Make the code much more readable
 * Cleaner APIs and docs (expose less for Parameters)
 * Make the command line parsing extendable, as there are a couple of
   patches I would like to add.

The new architecture adds a global CmdlineParser instance, which
Parameters will query when they get instantiated to see if they have a
value set through command line options or not. The previous behavior was
to set the `Parameter().__global` object member after parsing the
arguments.  That behavior is of course buggy since there's nothing
stopping Parameter objects from being reused (even through inheritance).
The other problem is when you have a python script with two different
`luigi.run` roudtrips. There's nothing cleaning up the __global setting
side effects after the first `luigi.run`.

There's also a lot of related documentation fixes going in this patch as
well.

==

doc/configuration.rst
luigi/cmdline_parser.py
luigi/interface.py
luigi/parameter.py
luigi/task.py
luigi/tools/deps.py
test/cmdline_test.py
test/date_interval_test.py
test/date_parameter_test.py
test/dynamic_import_test.py
test/helpers.py
test/parameter_test.py
==================
41221748;Arash Rouhani;2015-09-19 13:44:28 +0200;Merge pull request #1235 from spotify/Tarrasch-patch-2
tests: Disable HAS_REQUESTS test on travis
==
==================
0665a1ab;Arash Rouhani;2015-09-19 04:02:33 +0200;tests: Disable HAS_REQUESTS test on travis

==

test/server_test.py
==================
dbd1e9e5;Dave Buchfuhrer;2015-09-18 15:08:42 -0700;Uses popovers instead of tooltips for svg graph
The graph tooltips don't display very well for long names. This splits up the
names and puts them in a popover for a nicer display.

==

luigi/static/visualiser/js/graph.js
==================
bab0427b;Erik Bernhardsson;2015-09-18 14:50:48 -0400;Merge pull request #1233 from Houzz/revert_exception_pickling
Revert exception pickling
==
==================
1b6d2df9;Dave Buchfuhrer;2015-09-18 10:53:15 -0700;Updates WorkerTest.test_fail to use an unpicklable exception
This catches the bug in #1227

==

test/worker_test.py
==================
55fd5e50;Dave Buchfuhrer;2015-09-18 10:48:54 -0700;Revert "Merge pull request #1205 from belevtsoff/master"
This reverts commit 4acd09586f5563b27bbe6a3d3776f7d95b741299, reversing
changes made to 79146b7e7061fcc26bccf8ae72364813b354f140.

==

luigi/worker.py
test/worker_task_test.py
test/worker_test.py
==================
3c260409;Arash Rouhani;2015-09-18 14:34:59 +0200;Merge pull request #1228 from toidi/visualizer-sentitive-leak
fix task tooltip in svg visualizer
==
==================
6a4cae7c;Искандаров Эдуард;2015-09-18 13:17:30 +0300;fix task tooltip in svg visualizer

==

luigi/static/visualiser/js/graph.js
==================
9889f11b;Arash Rouhani;2015-09-17 16:48:37 +0200;Merge pull request #1086 from stephenpascoe/master
New theme for luigi visualiser
==
==================
4521ea43;Stephen Pascoe;2015-09-15 18:08:12 +0100;Handle json encoded error messages.  Fall back to raw message on error.

==

luigi/static/visualiser/js/visualiserApp.js
==================
ea4276d7;Arash Rouhani;2015-09-16 20:23:29 +0200;Merge pull request #1219 from SkyTruth/gcsclient-chunks
Parameterize GCSClient chunksize for better control when uploading or downloading data
==
==================
80143f1b;Kevin Wurster;2015-09-16 10:07:19 -0400;Set default chunksize in global variable rather than class.

==

luigi/contrib/gcs.py
==================
70915b38;Arash Rouhani;2015-09-16 15:59:49 +0200;Merge pull request #1220 from Tarrasch/fix_worker_ping_action
tests: Fix intermittent failures
==
==================
ade2f140;Arash Rouhani;2015-09-16 13:50:20 +0200;Merge pull request #1211 from moritzschaefer/master
Fixing escape for null sequence in postgres COPY FROM
==
==================
3729402d;Arash Rouhani;2015-09-16 13:49:24 +0200;Merge pull request #1207 from Tarrasch/audit_1206
worker: Document the wait_interval lower bound
==
==================
7a7f69a2;Arash Rouhani;2015-09-16 06:48:41 +0200;tests: Fix intermittent failures
The actually tests that are fixed are those (that are not even disabled)
in remote_scheduler_test.py. But the errors are easily reproduceable by
increasing the number of DummyTasks and decreasing the default value of
ping_interval.

==

test/server_test.py
==================
70f42357;Arash Rouhani;2015-09-16 03:31:02 +0200;Merge pull request #1214 from Tarrasch/refactor_server_tests
tests: Refactor (and actually test) server tests
==
==================
57e9eb5e;Stephen Pascoe;2015-09-11 16:34:25 +0100;Keep "Show Upstream Dependencies" checkbox consistent on reload.
The behaviour is different on Firefox to Chrome/Safari.  For some reason firefox remembers the state of the checkbox on reload but the others reset it.  Either way, this update keeps the UI consistent.

==

luigi/static/visualiser/js/visualiserApp.js
==================
514ac31d;Stephen Pascoe;2015-09-11 16:25:45 +0100;Fixed cookie management.  Please clear cookies before retesting.

==

luigi/static/visualiser/js/visualiserApp.js
==================
7958bb4e;Stephen Pascoe;2015-09-11 11:30:03 +0100;Make SVG box smaller relative to window.  Remove scrollbar.  Fixes https://github.com/stephenpascoe/luigi/issues/6.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
24be7a9b;Stephen Pascoe;2015-09-11 11:20:38 +0100;Remember visType across reloads.  Initial default is SVG.  Fixes https://github.com/stephenpascoe/luigi/issues/5.

==

luigi/static/visualiser/js/visualiserApp.js
==================
8ec83b74;Stephen Pascoe;2015-09-10 17:32:52 +0100;Combine server-side and client-side filter box.
remember visType across reloads.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
1e3d1398;Stephen Pascoe;2015-09-10 16:24:06 +0100;Better feedback on current search.  Fixes https://github.com/stephenpascoe/luigi/issues/8.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
81c9f9e8;Stephen Pascoe;2015-09-09 15:51:49 +0100;Add tooltips to action buttons.  Fixes https://github.com/stephenpascoe/luigi/issues/4.

==

luigi/static/visualiser/index.html
==================
1775d8d6;Stephen Pascoe;2015-09-09 15:35:42 +0100;Change skin to green-light, giving pale sidebar.  Upgraded AdminLTE.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/lib/AdminLTE/css/skin-green-light.min.css
luigi/static/visualiser/lib/AdminLTE/js/AdminLTE-app.min.js
luigi/static/visualiser/lib/AdminLTE/js/app.min.js
==================
42edf837;Stephen Pascoe;2015-09-09 15:23:31 +0100;Hide sidebar when on Graph or Workers tab.  Fixes https://github.com/stephenpascoe/luigi/issues/10.

==

luigi/static/visualiser/js/visualiserApp.js
==================
5a13fc13;Stephen Pascoe;2015-09-09 14:28:08 +0100;Displaying resources and priority.  Fixes https://github.com/stephenpascoe/luigi/issues/12

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
88d9b2cc;Stephen Pascoe;2015-09-09 13:54:59 +0100;Don't use sidebar-mini style.  Fixes https://github.com/stephenpascoe/luigi#9.

==

luigi/static/visualiser/index.html
==================
d9da78fe;Stephen Pascoe;2015-09-09 10:24:10 +0100;Allow filtering server-side with a separate filter box.  Requred for constraining below max-shown-tasks.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
569c9ddc;Stephen Pascoe;2015-09-08 17:39:02 +0100;Display a warning when max-shown-tasks is exceeded.
Towards resolving https://github.com/stephenpascoe/luigi/issues/2

The API is queried on a per-category basis (PENDING, UPSTREAM_FAILED, etc.).  Therefore we can calculate
the real number of tasks for each category but cannot keep the per-family counts accurate if max-shown-tasks
is exceeded.  The warning tries to make this clear.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
c0b7b18c;Stephen Pascoe;2015-09-07 16:19:24 +0100;Fixing disabled tasks https://github.com/stephenpascoe/luigi/issues/3

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
a4b54d51;Stephen Pascoe;2015-08-29 14:14:09 +0100;Make error message visible in modal when clicking on a D3 node.

==

luigi/static/visualiser/js/visualiserApp.js
==================
2c0b91fd;Stephen Pascoe;2015-08-29 11:40:48 +0100;Removed css hiding modals.

==

luigi/static/visualiser/index.html
==================
0ce11db0;Stephen Pascoe;2015-08-29 11:04:23 +0100;Fixed missing css style for FAILED

==

luigi/static/visualiser/index.html
==================
368655da;Stephen Pascoe;2015-08-28 15:31:51 +0100;Replaced [+] collapse icon with an icon on the right, only displayed with error state.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
15604c34;Stephen Pascoe;2015-08-28 14:53:34 +0100;Fix duplicate table entries for UPSTREAM_* and *

==

luigi/static/visualiser/js/visualiserApp.js
==================
9608949f;Stephen Pascoe;2015-08-28 11:48:55 +0100;Fixed not filtering on UPSTREAM_FAILURE.
Changed how status categories are labelled inside the DOM.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
71231259;Stephen Pascoe;2015-08-27 12:13:34 +0100;Support scrolling of sidebar when it is longer than the main content.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/lib/jquery.slimscroll.min.js
==================
f90c4a50;Stephen Pascoe;2015-08-24 14:11:14 +0100;Adding missing visualiser resources

==

luigi/static/visualiser/fonts/glyphicons-halflings-regular.eot
luigi/static/visualiser/fonts/glyphicons-halflings-regular.svg
luigi/static/visualiser/fonts/glyphicons-halflings-regular.ttf
luigi/static/visualiser/fonts/glyphicons-halflings-regular.woff
luigi/static/visualiser/lib/AdminLTE/css/AdminLTE.min.css
luigi/static/visualiser/lib/AdminLTE/css/skin-green.min.css
luigi/static/visualiser/lib/AdminLTE/js/AdminLTE-app.min.js
==================
2bee23a8;Stephen Pascoe;2015-08-21 13:47:46 +0100;Fixed bug in filter by task status that was introduced during refactoring.

==

luigi/static/visualiser/js/visualiserApp.js
==================
5d0debc7;Stephen Pascoe;2015-08-20 14:27:11 +0100;Remove theme configuration logic.  There is now only one visualiser style.

==

doc/configuration.rst
luigi/scheduler.py
luigi/server.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
luigi/static/visualiser/lib/d3/dagre-d3.js
luigi/static/visualiser/theme/retro/index.html
luigi/static/visualiser/theme/retro/visualiserApp.js
==================
849856a7;Stephen Pascoe;2015-08-17 17:18:08 +0100;Enable switching between D3 and SVG visualisations within the web app.
Also several graph rendering fixes:
 - fix inverse dependency graph for D3.
 - fixes a bug in getFinishTime().

==

luigi/static/visualiser/theme/default/index.html
luigi/static/visualiser/theme/default/visualiserApp.js
==================
17640bbb;Stephen Pascoe;2015-08-17 16:59:52 +0100;Added D3 files missed due to .gitignore settings.

==

.gitignore
luigi/static/visualiser/lib/d3/d3.min.js
luigi/static/visualiser/lib/d3/dagre-d3.js
==================
fadef3d9;Stephen Pascoe;2015-08-17 14:41:21 +0100;Use faster node ranking algorithm.  Removed timer to reload the graph every 5s.
This caused problems with drag/drop and huge lag when drawing took longer than 5s.

==

luigi/static/visualiser/theme/default/visualiserApp.js
==================
139a6ad7;Stephen Pascoe;2015-07-24 10:59:17 +0100;Make the new theme default and remove the "d3" theme.  The default theme includes the d3 visualization.
Removed luigi.d3.js, referencing luigi.js instead.  I see only trivial differences between luigi.d3.js and the original file.  It looks like the former has got out of date and there is no need to maintain separate files.

Make the theme configurable by introducing a new config option "visualizer_theme".

This option overlaps with the "visualization_graph" option.  The lte theme uses the d3 visualization but it is more accurate to call
it a theme as it changes a lot more than the graph.  I make "visualizer_theme" take precedence but retain "visualization_graph" for
backward compatibility.

Removed option "visualization_graph".

You can select between themes with the "visualization_theme" option which is now documented in configuration.rst.

==

doc/configuration.rst
luigi/scheduler.py
luigi/server.py
luigi/static/visualiser/css/AdminLTE.min.css
luigi/static/visualiser/css/skin-green.min.css
luigi/static/visualiser/index.d3.html
luigi/static/visualiser/js/AdminLTE-app.min.js
luigi/static/visualiser/js/dagre-d3.js
luigi/static/visualiser/js/luigi.d3.js
luigi/static/visualiser/js/visualiserApp.d3.js
luigi/static/visualiser/lib/bootstrap/css/bootstrap.css
luigi/static/visualiser/lib/bootstrap/css/bootstrap.min.css
luigi/static/visualiser/lib/bootstrap/img/glyphicons-halflings-white.png
luigi/static/visualiser/lib/bootstrap/img/glyphicons-halflings.png
luigi/static/visualiser/lib/bootstrap/js/bootstrap.js
luigi/static/visualiser/lib/bootstrap/js/bootstrap.min.js
luigi/static/visualiser/theme/default/index.html
luigi/static/visualiser/theme/default/visualiserApp.js
luigi/static/visualiser/theme/retro/index.html
luigi/static/visualiser/theme/retro/visualiserApp.js
==================
07284015;Stephen Pascoe;2015-07-22 16:01:08 +0100;Display task names in the sidebar with counts and make them selectable to filter.

==

luigi/static/visualiser/index.lte.html
luigi/static/visualiser/js/visualiserApp.lte.js
==================
90d88b8f;Stephen Pascoe;2015-07-22 11:11:43 +0100;Make info boxes clickable to filter table on task category.

==

luigi/static/visualiser/index.lte.html
luigi/static/visualiser/js/visualiserApp.lte.js
==================
ff0ecd90;Stephen Pascoe;2015-07-01 14:34:49 +0100;Alternative style for the visualiser using DataTables and the AdminLTE dashboard style.
Displays all tasks in a single DataTable which can be filtered and ordered using the
search field.  Info boxes display totals for running/failed/pending/etc. tasks.

Exceptions are displayed in child rows that can be accessed using the RHS control.

==

luigi/static/visualiser/css/AdminLTE.min.css
luigi/static/visualiser/css/font-awesome.min.css
luigi/static/visualiser/css/skin-green.min.css
luigi/static/visualiser/fonts/FontAwesome.otf
luigi/static/visualiser/fonts/fontawesome-webfont.eot
luigi/static/visualiser/fonts/fontawesome-webfont.svg
luigi/static/visualiser/fonts/fontawesome-webfont.ttf
luigi/static/visualiser/fonts/fontawesome-webfont.woff
luigi/static/visualiser/fonts/fontawesome-webfont.woff2
luigi/static/visualiser/index.lte.html
luigi/static/visualiser/js/AdminLTE-app.min.js
luigi/static/visualiser/js/visualiserApp.lte.js
luigi/static/visualiser/lib/bootstrap3/css/bootstrap-theme.min.css
luigi/static/visualiser/lib/bootstrap3/css/bootstrap.min.css
luigi/static/visualiser/lib/bootstrap3/js/bootstrap.min.js
luigi/static/visualiser/lib/datatables/css/jquery.dataTables.min.css
luigi/static/visualiser/lib/datatables/images/Sorting icons.psd
luigi/static/visualiser/lib/datatables/images/favicon.ico
luigi/static/visualiser/lib/datatables/images/sort_asc.png
luigi/static/visualiser/lib/datatables/images/sort_asc_disabled.png
luigi/static/visualiser/lib/datatables/images/sort_both.png
luigi/static/visualiser/lib/datatables/images/sort_desc.png
luigi/static/visualiser/lib/datatables/images/sort_desc_disabled.png
luigi/static/visualiser/lib/datatables/js/jquery.dataTables.min.js
setup.py
==================
4cc1d7fa;Kevin Wurster;2015-09-15 12:45:22 -0400;Parameterize GCSClient chunksize for better control when downloading or uploading data.  For #1218.

==

luigi/contrib/gcs.py
==================
ec19dde3;Moritz Schäfer;2015-09-15 20:53:28 +0800;Fixing escape for null sequence in postgres COPY FROM

==

luigi/postgres.py
test/postgres_with_server_test.py
==================
06f177b8;Arash Rouhani;2015-09-14 14:16:11 +0200;Merge pull request #1194 from toidi/local_package
Add main module for luigi package
==
==================
148876c7;Arash Rouhani;2015-09-13 14:17:50 +0200;tests: Refactor (and actually test) server tests
This commit contains:

 * Removal of pretty much redundant tests in rpc_test
 * Moved tests from bin_test.py to server_test.py, as they were rendered
   useless after the refactoring in spotify/luigi#1129, probably
   forgotten since they were put in their own file in the first place.
 * Added test case 'test_with_cmdline'
 * Don't use any "random port", always use port 8083. Randomness like
   that leads to intermittent and irreproducible test failures.
 * Add a sanity check in INETURLLibServerTest that the HAS_REQUESTS
   mocking actually is meaningful.
 * Other small cleanups

==

luigi/cmdline.py
test/bin_test.py
test/rpc_test.py
test/server_test.py
==================
7836325e;Arash Rouhani;2015-09-12 06:35:23 +0200;Merge pull request #1210 from Houzz/readme_pr
update README to include link to hubot-luigi
==
==================
f21140e6;Kyle Sun;2015-09-11 14:23:55 -0700;update README to include link to hubot-luigi

==

README.rst
==================
51b2c90f;Arash Rouhani;2015-09-11 21:50:08 +0200;Merge pull request #1209 from dhruvg/state_getter_setter
Refactor getter / setter of scheduler state to their own methods.
==
==================
5ac2c241;Dhruv Garg;2015-09-11 11:35:27 -0400;Refactor getter / setter of scheduler state to their own methods.

==

luigi/scheduler.py
==================
7c089a91;Arash Rouhani;2015-09-11 10:46:15 +0200;worker: Document the wait_interval lower bound

==

luigi/worker.py
==================
8e07ac72;Arash Rouhani;2015-09-11 09:36:34 +0200;Merge pull request #1206 from Tarrasch/various_worker_fixes
Various worker fixes
==
==================
8c53246c;Arash Rouhani;2015-09-11 01:14:34 +0200;worker: Change wait_interval to FloatParameter
In all uses, the wait_interval is a floating point value. It's also more
natural since it's specifies a duration in seconds. It's also useful for
tests to be able to specify low positive values so tests can run faster.

I also added a guard that wait_interval shouldn't be close to zero, as
the multiprocessing.Queue.get() has an undefined behavior when timeout
is set to zero. For me, it worked on 2.7 but not 3.4, meanwhile Travis
failed both of them.

Since all ints are also floats, this change is backward compatible.

==

luigi/worker.py
test/worker_external_task_test.py
test/worker_test.py
==================
2646e581;Arash Rouhani;2015-09-10 10:27:39 +0200;tests: Various fixes for external task tests
I found a lot of errors and irrelevant code when I started to
investigate why these tests were failing for me in spotify/luigi#1182.
This patch basically splits an existing test into two tests and also
clarifies how keep_alive and retry_external_tasks differ.

==

test/worker_external_task_test.py
==================
4acd0958;Arash Rouhani;2015-09-11 01:27:36 +0200;Merge pull request #1205 from belevtsoff/master
Add an option to prevent Worker from catching exceptions from Task.run()
==
==================
ef5a7876;Dmytro Bielievtsov;2015-09-10 20:38:38 +0300;added option to raise on error
updated tests for optional raising on error

removed obvious comment

==

luigi/worker.py
test/worker_task_test.py
test/worker_test.py
==================
79146b7e;Arash Rouhani;2015-09-10 10:08:43 +0200;Merge pull request #1202 from Ddper/patch-1
Update central_scheduler.rst
==
==================
a7eaef33;Ddper;2015-09-10 13:51:22 +0800;Update central_scheduler.rst
change wrong state-path to state_path
==

doc/central_scheduler.rst
==================
9fd3aadb;Искандаров Эдуард;2015-09-03 15:59:14 +0300;Add main module for luigi package

==

luigi/__main__.py
test/cmdline_test.py
==================
0fb4ff6a;Arash Rouhani;2015-09-05 01:24:29 +0200;Merge pull request #1191 from ChrisBeaumont/cleanup_test
Test for orphaned subprocesses
==
==================
f7ef9f5a;Arash Rouhani;2015-09-05 00:51:13 +0200;Merge pull request #1198 from Tarrasch/dont-print-selfworker-in-summary
Various Execution Summary fixes
==
==================
5818dce4;Arash Rouhani;2015-09-04 14:56:36 +0200;Execution summary: Don't print own worker
Previously you would see your own worker being printed among the list of
other workers when running with `--workers 2` or higher.

==

luigi/execution_summary.py
test/execution_summary_test.py
==================
b91dca8a;Arash Rouhani;2015-09-04 16:30:38 +0200;Merge pull request #1173 from spiside/update_redshift_copy_command
Removed hardcoded delimiter option from base copy method
==
==================
e25384db;Arash Rouhani;2015-09-04 11:14:17 +0200;tests: Minor typo in Execution Summary

==

test/execution_summary_test.py
==================
9613abbf;Arash Rouhani;2015-09-04 11:10:54 +0200;tests: Clean up Execution Summary tests
I noticed a lot of code repetition and unnecessary code blocks. Tests
still tests the same things so this is just to make the code denser and
easier to follow.

==

test/execution_summary_test.py
==================
0455c5fb;Arash Rouhani;2015-09-04 11:08:55 +0200;tests: Add test helper RunOnceTask
For cases where we want a task to be complete after it's first run.

==

test/helpers.py
test/helpers_test.py
==================
57dcf363;Chris Beaumont;2015-09-02 14:46:48 -0700;Add test that task subprocesses aren't orphaned

==

luigi/worker.py
test/worker_task_test.py
==================
f85fa0af;Arash Rouhani;2015-09-03 21:53:36 +0200;Merge pull request #1196 from Tarrasch/unbreak-1192
Unbreak 1192 and another execution summary bugfix
==
==================
8e846011;Arash Rouhani;2015-09-03 18:17:01 +0200;bugfix: Missing serialize() in Execution Summary
Essentially you would see something like

    2 Bar(month=1998-05-22 00:00:00,1998-03-23 00:00:00)

Instead of

    2 Bar(month=1998-05,1998-03)

==

luigi/execution_summary.py
test/execution_summary_test.py
==================
66a2dd3b;Arash Rouhani;2015-09-03 18:14:41 +0200;bugfix: Add DateHourParameter._timedelta
It was missing, causing the Execution Summary code to fail, see issue
spotify/luigi#1192.

==

luigi/parameter.py
test/execution_summary_test.py
==================
0abc88f7;Arash Rouhani;2015-09-03 15:49:41 +0200;Merge pull request #1186 from dhruvg/fix_error_message
Fix error message naming / docs. Set task.expl earlier.
==
==================
334388f9;Arash Rouhani;2015-09-03 15:48:00 +0200;Merge pull request #1193 from Tarrasch/lazify-hdfs-fs-operations
Remove luigi.contrib.client, lazify fs operations
==
==================
f5267517;Dhruv Garg;2015-09-03 08:41:20 -0400;Fix error message naming / docs. Set task.expl earlier.

==

luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/worker_task_test.py
==================
065e9cb5;Arash Rouhani;2015-09-03 09:15:32 +0200;Remove luigi.contrib.client, lazify fs operations
This patch makes two related changes. It removes luigi.contrib.client
and turns the functions luigi.contrib.{exists,remove,...} into
functions that creates a new autoconfigured hdfs client for each
invocation.

The problem with the luigi.contrib.client convenience object is that it
requires effects when you load the module. That is bad not only because
of the side effects, but it also means that it'll ignore command line
parameters. That is considered a bug. It'll mean that for example
`--hdfs-client hadoopcli` will not be honored. This is also why I
lazified the file system operations, so that the configs are read after
the command line parameters have been parsed (as opposed to at module
load time)

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hdfs/config.py
test/minicluster.py
==================
bb86074a;Arash Rouhani;2015-09-02 14:27:42 +0200;Merge pull request #1187 from ChrisBeaumont/worker_subprocess_cleanup
Clean up worker subprocesses on timeout
==
==================
db1a72aa;Arash Rouhani;2015-09-02 14:26:53 +0200;Merge pull request #1188 from spotify/Tarrasch-patch-1
tests: Disable test_ping
==
==================
aaf6f571;Arash Rouhani;2015-09-02 10:29:02 +0200;tests: Disable test_ping

==

test/server_test.py
==================
12fbdc4b;Arash Rouhani;2015-09-02 10:27:43 +0200;Merge pull request #1178 from spotify/Tarrasch-patch-1
tests: Disable test_raw_ping
==
==================
8607588b;Chris Beaumont;2015-09-01 15:33:06 -0700;Clean up worker subprocesses on timeout

==

luigi/worker.py
==================
bc39359e;Arash Rouhani;2015-09-01 00:26:12 +0200;Merge pull request #1180 from Tarrasch/simplify-interfaces
Simplify interface.py
==
==================
938e9a0f;Arash Rouhani;2015-08-31 23:21:17 +0200;Merge pull request #1181 from dhruvg/retry_time_method
Move retry_time logic to its own method.
==
==================
77e03b82;Dhruv Garg;2015-08-31 16:26:44 -0400;Move retry_time logic to its own method.

==

luigi/scheduler.py
==================
fe1e5261;Thomas Grainger;2015-08-31 13:22:10 +0100;Fix some python 3.4 errors

==

.travis.yml
luigi/contrib/hdfs/snakebite_client.py
luigi/contrib/hdfs/target.py
luigi/date_interval.py
==================
f2eba49d;Arash Rouhani;2015-08-31 14:55:50 +0200;Simplify interface.py
Previous code had unnecessary OOP abstractions. Also there were
countless of unrelated occurrences of the method "run".

==

luigi/interface.py
==================
f41397ae;Arash Rouhani;2015-08-31 14:20:47 +0200;Merge pull request #1172 from toidi/master
pass pig parameters by file
==
==================
e7e07a11;Arash Rouhani;2015-08-31 13:39:07 +0200;tests: Disable test_raw_ping

==

test/server_test.py
==================
7d40658c;Arash Rouhani;2015-08-31 13:30:28 +0200;Merge pull request #1176 from graingert/patch-4
Support unix sockets for faster internal connections (MK II)
==
==================
e5b9084b;Arash Rouhani;2015-08-31 13:29:12 +0200;Merge pull request #1177 from Tarrasch/deprecate-use_dynamic_argparse
Deprecate 'use_dynamic_argparse' keyword
==
==================
1faa3cee;Искандаров Эдуард;2015-08-28 13:14:36 +0300;pass pig parameters by tempfile

==

luigi/contrib/pig.py
test/contrib/pig_test.py
==================
21e70184;Arash Rouhani;2015-08-31 11:07:31 +0200;Deprecate 'use_dynamic_argparse' keyword
Dynamic argparse is the feature enabling `--module` command line option.

The motivation is that there probably is no real use case where you want
it to be False. From now on assume it to be True.

This commit also changes the behavior of luigi.run (which is discouraged
as direct invocation anyway) in that now we always allow dynamic
argparse.

==

luigi/cmdline.py
luigi/interface.py
==================
7b0d98a7;Arash Rouhani;2015-08-31 10:27:37 +0200;Merge pull request #1175 from toidi/more-flake8-compliant
Make luigi package more flake8 compliant
==
==================
a0930c8e;Thomas Grainger;2015-08-30 22:10:16 +0100;fix unixsocket implimentation

==

luigi/rpc.py
==================
4d1d78f9;Thomas Grainger;2015-08-30 22:09:19 +0100;actually test Unix socket implementation

==

.travis.yml
test/server_test.py
tox.ini
==================
35d1b104;Eduard Iskandarov;2015-08-30 19:56:37 +0300;Make luigi package more flake8 compliant

==

luigi/date_interval.py
luigi/execution_summary.py
luigi/task.py
luigi/tools/range.py
luigi/worker.py
test/_test_ftp.py
test/central_planner_test.py
test/cmdline_test.py
test/contrib/_webhdfs_test.py
test/contrib/bigquery_test.py
test/contrib/hadoop_jar_test.py
test/contrib/hadoop_test.py
test/contrib/hdfs_test.py
test/contrib/hive_test.py
test/contrib/pig_test.py
test/create_packages_archive_root/package/submodule.py
test/create_packages_archive_root/package/submodule_with_absolute_import.py
test/create_packages_archive_root/package/subpackage/submodule.py
test/db_task_history_test.py
test/dynamic_import_test.py
test/event_callbacks_test.py
test/execution_summary_test.py
test/file_test.py
test/helpers.py
test/instance_test.py
test/interface_test.py
test/lock_test.py
test/parameter_test.py
test/range_test.py
test/recursion_test.py
test/server_test.py
test/snakebite_test.py
test/subtask_test.py
test/worker_test.py
tox.ini
==================
8fa712f5;Arash Rouhani;2015-08-30 17:48:40 +0200;Merge pull request #1174 from toidi/flake8-complaint
Make luigi package flake8 compliant
==
==================
71929004;Eduard Iskandarov;2015-08-29 21:49:48 +0300;Make luigi package flake8 compliant

==

.travis.yml
CONTRIBUTING.rst
doc/conf.py
doc/settings.py
examples/execution_summary_example.py
luigi/__init__.py
luigi/contrib/hadoop.py
luigi/contrib/hive.py
luigi/contrib/pig.py
luigi/contrib/webhdfs.py
luigi/execution_summary.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/rpc.py
luigi/scalding.py
luigi/scheduler.py
luigi/server.py
luigi/task.py
luigi/util.py
luigi/webhdfs.py
luigi/worker.py
setup.py
test/cmdline_test.py
test/contrib/hadoop_test.py
test/contrib/sqla_test.py
test/parameter_test.py
test/redshift_test.py
test/server_test.py
test/worker_test.py
tox.ini
==================
85f4b2d8;Spiro Sideris;2015-08-28 07:17:46 -0700;Removed hardcoded delimiter option from base copy method

==

luigi/contrib/redshift.py
==================
72b3eb46;Arash Rouhani;2015-08-28 11:08:55 +0200;Merge pull request #1164 from Tarrasch/increase_luigid_backwardcomp
luigid: Add format conversion code for #916
==
==================
ac4f6e68;Arash Rouhani;2015-08-27 22:22:39 +0200;Merge pull request #1170 from Tarrasch/always-require-task-and-param-name
Simplify Parameter internals
==
==================
ec32aee7;Arash Rouhani;2015-08-27 16:55:14 +0200;Simplify Parameter internals
It's now possible (since spotify/luigi#1169) to assume that task_name
and param_name are given when doing `_get_value()`.

==

luigi/parameter.py
==================
1596c06e;Arash Rouhani;2015-08-27 16:52:31 +0200;Merge pull request #1169 from Tarrasch/remove-parameter-_value
Remove Parameter.{_value,_has_value}
==
==================
60a3fc94;Arash Rouhani;2015-08-27 16:20:00 +0200;Remove Parameter._has_value
With the same motivation as the commit where _value was deleted.

==

luigi/parameter.py
test/parameter_test.py
==================
e4814baa;Arash Rouhani;2015-08-27 14:49:58 +0200;Remove Parameter._value, as it can only be misused
There is no way to tell if a Parameter has a value or not. Instantiating
parameters only make sense in the context of Task instantiations. See
spotify/luigi#1157

==

luigi/parameter.py
test/parameter_test.py
==================
84d2e675;Arash Rouhani;2015-08-27 11:02:37 +0200;Merge pull request #1167 from Tarrasch/refactor-parameter-get-value
Refactor Parameter._get_value()
==
==================
ba39b4d3;Arash Rouhani;2015-08-27 09:29:52 +0200;Merge pull request #1159 from Yoone/patch-2
Clarified the purpose of the configuration files
==
==================
9baf88b1;Arash Rouhani;2015-08-26 18:52:45 +0200;Refactor Parameter._get_value()
The purpose is to clarify where in the code the actual ordering happens.

==

luigi/parameter.py
==================
2f7043b6;Arash Rouhani;2015-08-26 22:46:45 +0200;Merge pull request #1166 from spotify/Tarrasch-patch-1
Update comments
==
==================
72a53ec2;Arash Rouhani;2015-08-26 18:37:05 +0200;Update comments
The keyword arguments do not need to be optional. For example if there is no default.
==

luigi/task.py
==================
bd0bbdb1;Arash Rouhani;2015-08-26 18:19:56 +0200;Merge pull request #1165 from Tarrasch/luigid-refactoring
luigid: Simplify has_excessive_failures logic
==
==================
66d01b42;Uldis Barbans;2015-08-25 15:38:46 +0200;Merge pull request #1153 from Tarrasch/use-list2command
Prefer list2command over ' '.join()
==
==================
8c9f1917;Arash Rouhani;2015-08-25 15:19:55 +0200;luigid: Simplify has_excessive_failures logic

==

luigi/scheduler.py
==================
07f59adb;Arash Rouhani;2015-08-25 15:14:36 +0200;luigid: Add format conversion code for #916
In spotify/luigi#916 all (scheduler) tasks started to have the
disable_hard_timeout attribute which the code assumes. But the scheduler
will crash if you load an old pickle file.

Yea I know it was ages ago we merged that PR but Spotify still runs some
luigid with old state files.

I did test that this works. But I did not add any unit test, as this is
not any compatibility we want to maintain in the long run. To make the
code base a bit cleaner, I dated all the format conversion code.

==

luigi/scheduler.py
==================
5c924a52;Yoann Bentz;2015-08-24 09:56:49 -0400;Clarified the purpose of the configuration files
Added info about the fact that both the client and `luigid` load configuration files.
==

doc/configuration.rst
==================
aa56b7a4;Arash Rouhani;2015-08-22 09:26:55 +0200;Merge pull request #1157 from Tarrasch/unexport-parameters-stuff
Unexport parameters stuff
==
==================
f26a4514;Arash Rouhani;2015-08-22 09:26:49 +0200;Merge pull request #1154 from Tarrasch/hide-private-exports
Unexport private parts of interface.py
==
==================
b526db56;Arash Rouhani;2015-08-21 19:33:42 +0200;Merge pull request #1156 from spotify/Tarrasch-patch-1
tests: Skip intermittently failing test
==
==================
d8e8c5a2;Arash Rouhani;2015-08-21 19:29:29 +0200;Hide buggy parts of Parameter object API
The current implementation of Parameters is flawed and there are some
bugs. The main issue is that the Parameter objects contains state and
the same object are sometimes reused (for example by inheritance)
between task classes.

This patch doesn't solve this, but at least tries to discourage the bad
usages of parameters people might start relying on.

Users who did `MyTask.my_parameter.value` should switch over to
something like `MyTask().value`. As it's only during the instantiation
of a task that you know the task family and can match config and
parameters names (for example `--MyTask-my-parameter 123`).

==

luigi/parameter.py
test/parameter_test.py
==================
3b696f49;Arash Rouhani;2015-08-21 18:12:02 +0200;tests: Skip intermittently failing test

==

test/worker_test.py
==================
4604d7d0;Arash Rouhani;2015-08-21 16:52:15 +0200;Merge pull request #1155 from bmaggard/master
Use ExternalTask for a external Target objects
==
==================
78f1afe6;bmaggard;2015-08-21 10:34:47 -0400;Use ExternalTask for a external Target objects
Using 'Task' results in 'Unfulfilled dependency at run time'
==

doc/tasks.rst
==================
f2d16cfc;Arash Rouhani;2015-08-21 15:54:14 +0200;parameter.py: Remove Parameter.serialize_to_input
I couldn't find any place it was referenced from. Not even from anywhere
in Spotify's internal code base.

==

luigi/parameter.py
==================
ae53e21d;Arash Rouhani;2015-08-21 15:41:15 +0200;Unexport private parts of interface.py
The purpose is to make the documentation page pleaner[1] and to not make
it easy for users of luigi to misuse luigi and start relying on things
so we don't dare changing it later.

This will of course break for people who've considered those exports to
be sane to use, but I think that's fine since we're making proper
releases of the luigi package.

[1]: http://luigi.readthedocs.org/en/latest/api/luigi.interface.html

==

luigi/interface.py
luigi/tools/deps.py
test/cmdline_test.py
test/date_interval_test.py
test/date_parameter_test.py
test/decorator_test.py
test/dynamic_import_test.py
test/interface_test.py
==================
ad4c885f;Arash Rouhani;2015-08-21 13:45:23 +0200;Prefer list2command over ' '.join()
Just a nice convenienve. The motivation is that it becomes easier to
copy these logs and paste directly into the terminal without manually
escaping spaces and whatnot.

==

luigi/contrib/hadoop.py
luigi/contrib/hdfs/hadoopcli_clients.py
luigi/contrib/pig.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
==================
85ce122e;Arash Rouhani;2015-08-19 23:05:28 +0200;Merge pull request #1147 from upworthy/fix-url-join-in-remotescheduler
RemoteScheduler: use urljoin on base URL & suffix to form a full URL
==
==================
11a41bab;Pavel Repin;2015-08-19 11:54:53 -0700;Use urljoin on base url & suffix to form a full url.

==

luigi/rpc.py
test/rpc_test.py
==================
0af0011e;Arash Rouhani;2015-08-19 21:32:30 +0200;CONTRIBUTING.rst: Document how to test single file

==

CONTRIBUTING.rst
==================
7bfe4d38;Arash Rouhani;2015-08-19 21:27:54 +0200;Merge pull request #1146 from graingert/patch-3
Fix error when connecting to the central luigi scheduler
==
==================
072c2132;Thomas Grainger;2015-08-19 18:49:47 +0100;Fix error when connecting to the central luigi scheduler

==

luigi/rpc.py
==================
0a6e2dc6;Arash Rouhani;2015-08-19 10:56:13 +0200;Merge pull request #1142 from Tarrasch/execution_summary_docs
Clean up docs for the execution_summary module
==
==================
ddbf24d2;Erik Bernhardsson;2015-08-18 16:33:59 -0400;Merge pull request #1143 from penelopy/patch-1
Typo "exists" > "exist"
==
==================
bcc21f9f;Penelope Hill;2015-08-18 13:15:54 -0700;Typo "exists" > "exist"

==

luigi/task.py
==================
3fb66921;Arash Rouhani;2015-08-18 16:34:24 +0200;Clean up docs for the execution_summary module

==

luigi/execution_summary.py
==================
533d7ee6;Arash Rouhani;2015-08-18 13:30:34 +0200;Merge pull request #1091 from nicolehedblom/execution_summary
Print an execution summary at end of task runs
==
==================
ef76e7cb;Arash Rouhani;2015-08-10 17:32:54 +0200;Simplify execution summary logic

==

luigi/execution_summary.py
==================
c25e2629;Nicole Hedblom;2015-07-24 17:12:39 +0200;Print an execution summary at end of task runs
See docs in luigi/execution_summary.py for example of output.

This squashed commit is joint work between Nicole and Arash.

Signed-off-by: Arash Rouhani <arash@spotify.com>

==

examples/execution_summary_example.py
luigi/execution_summary.py
luigi/interface.py
luigi/parameter.py
luigi/worker.py
test/execution_summary_test.py
==================
eed7a330;Arash Rouhani;2015-08-18 10:28:22 +0200;Merge pull request #1047 from Houzz/kyle_owner_pr
Add owner to luigi.task so we can send additional error emails
==
==================
bf68f3c7;Arash Rouhani;2015-08-18 10:26:19 +0200;Merge pull request #1139 from Houzz/kyle_fix_ssh_pr
Properly handle space in ssh command for remote hadoop jar job
==
==================
62e7a9e3;Kyle Sun;2015-08-17 17:22:51 -0700;Add a test for remote hadoop job with 2+ params

==

test/contrib/hadoop_jar_test.py
==================
b01297ac;Kyle Sun;2015-06-29 16:38:57 -0700;add owner to luigi.task so we can send out additional error emails to owners

==

luigi/notifications.py
luigi/task.py
luigi/worker.py
test/email_test.py
==================
ba7cf689;Arash Rouhani;2015-08-17 23:03:06 +0200;Merge pull request #1137 from Houzz/take_lock
Enables disabling of old workers while allowing them to finish currently running tasks
==
==================
a4da8691;Arash Rouhani;2015-08-17 23:02:27 +0200;Merge pull request #1136 from Houzz/run_orphaned_tasks
Allows assistant to work on orphaned tasks
==
==================
0035c878;Arash Rouhani;2015-08-17 23:00:46 +0200;Merge pull request #1060 from stephenpascoe/improved-email-pr
More detailed error emails.
==
==================
4d3d0e98;Dave Buchfuhrer;2015-07-29 15:40:09 -0700;Adds --take-lock argument to kill old workers
I only want one assistant running at a time, and I want it running the latest
code. In order to simplify deployment of new assistants, this adds a --take-lock
command-line argument which will have the worker send SIGUSR1 to all other
workers being run with the same command. This prevents other assistants run on
the same machine with the same command from getting new jobs after this one
starts. I've been using this to launch a new assistant alongside code deploys in
order to ensure that old code stops getting run.

==

luigi/interface.py
luigi/lock.py
test/lock_test.py
==================
3800a986;Dave Buchfuhrer;2015-07-29 13:48:22 -0700;Allows workers to be phased out by sending a SIGUSR1
When updating worker code, I often want to kill the currently running workers so
that they won't run the old code anymore. However, I'm usually ok with them
finishing what they're currently working on, as that will often include long
running jobs that aren't related to the changes I'm deploying. Killing these
jobs throws away a lot of work. Instead, we can send SIGUSR1 to the worker and
it will stop requesting new work and die when it's done running its current
jobs.

==

luigi/worker.py
test/worker_test.py
==================
f7e120e1;Dave Buchfuhrer;2015-08-11 14:29:39 -0700;Allows assistant to work on orphaned tasks
Assistants keep PENDING tasks alive in order to work on them, but aren't
actually able to work on them because we check whether tasks have live workers
before we give them to assistants. This is to prevent assistants from working on
external tasks. In order to allow assistants to work on tasks with no live
workers but not work on external tasks, we store whether a task is runnable in
the scheduler.

To keep compatibility with old pickle files, we treat tasks without runnable set
as runnable. This should minimize the problems caused be the changed schema.
==

luigi/scheduler.py
test/central_planner_test.py
==================
f442784e;Stephen Pascoe;2015-07-17 11:32:17 +0100;Use Pygments to colorize the traceback if html email is enabled.
Only format error strings as they are emailed, not as they are pushed onto the result_queue.

==

luigi/notifications.py
luigi/worker.py
test/email_test.py
tox.ini
==================
e6ce89a3;Stephen Pascoe;2015-07-10 15:50:14 +0100;More detailed error emails.
Itemise task parameters in the email.

==

luigi/notifications.py
luigi/worker.py
test/email_test.py
==================
f42595c5;Arash Rouhani;2015-08-17 17:20:52 +0200;Merge pull request #1124 from jfeala/sungrid-engine
SunGrid Engine support
==
==================
5f276506;Jake Feala;2015-08-12 07:53:30 -0400;SunGrid Engine support
- Submits luigi tasks to a SunGrid Engine cluster using qsub
- Executes "work" function on pickled task class
- Monitors task completion using qstat

==

luigi/contrib/sge.py
luigi/contrib/sge_runner.py
test/contrib/sge_test.py
==================
e24f3a50;Arash Rouhani;2015-08-17 13:56:00 +0200;Merge pull request #1134 from Houzz/remote_fs_error
More informative error messages for RemoteContext commands
==
==================
1903fb83;Arash Rouhani;2015-08-17 13:55:01 +0200;Merge pull request #1135 from Houzz/fail_assisted_tasks
Enables task failure on worker death while assistant is running
==
==================
0e6ce306;Arash Rouhani;2015-08-17 13:43:09 +0200;Merge pull request #1133 from Tarrasch/remove_is_list
Remove is_list support for Parameters
==
==================
58418dd4;Arash Rouhani;2015-08-16 19:57:24 +0200;Merge pull request #1138 from graingert/cleanup-files-created-during-tests
Cleanup files created during tests
==
==================
0a379791;Arash Rouhani;2015-08-16 19:55:29 +0200;Merge pull request #1129 from graingert/support-unix-sockets
Add support for Unix sockets #1118
==
==================
fb9a0a23;Thomas Grainger;2015-08-15 23:42:53 +0100;Cleanup files created during tests

==

test/bin_test.py
test/server_test.py
==================
fadf2827;Thomas Grainger;2015-08-15 23:14:02 +0100;Document Unix sockets and TLS support

==

doc/central_scheduler.rst
doc/configuration.rst
==================
6bc2a544;Dave Buchfuhrer;2015-08-11 14:30:27 -0700;Enables task failure on worker death while assistant is running
We avoid pruning PENDING and RUNNING tasks while an assistant is live, as the
assistant is considered a stakeholder for all runnable tasks. Unfortunately,
the prune function is where we fail RUNNING tasks for which the running worker
has died. So when an assistant is alive, it becomes impossible for a RUNNING
task whose worker has died to ever change status.

This fixes the issue by separating the function to mark RUNNING tasks as FAILED
from the pruning function and ensuring that it gets called regardless of the
presence of assistants.

==

luigi/scheduler.py
test/central_planner_test.py
==================
23ab31eb;Dave Buchfuhrer;2015-08-13 14:27:23 -0700;More informative error messages for RemoteContext commands
When I get an error e-mail with text like Command '['test', '-e', 'filename']'
returned non-zero exit status 255 from a remote filesystem operation, it's a bit
difficult to debug without knowing which machine the command was run on. This
improves the situation by adding the hostname to the error message.
==

luigi/contrib/ssh.py
==================
ecc591be;Thomas Grainger;2015-08-13 11:38:49 +0100;Add support for Unix sockets Fixes #1118
This also adds support for TLS!

Simply use https://exmaple.com/ for TLS or
http+unix://%2Fvar%2Frun%2Fluigid%2Fluigid.sock/ for Unix sockets

==

.travis.yml
luigi/cmdline.py
luigi/interface.py
luigi/process.py
luigi/rpc.py
luigi/server.py
test/customized_run_test.py
test/db_task_history_test.py
test/rpc_test.py
test/server_test.py
test/worker_test.py
tox.ini
==================
3d70f8eb;Arash Rouhani;2015-08-14 10:37:28 +0200;Remove is_list support for Parameters
The main motivation is that they are harder to reason about. For example
it's unclear how command-line parameters and config interplay (replacing
semantics or additive semantics? If additive, in what order?)

It was proposed in this Google Group thread[1]. Indeed, this does break
backward compatibility, but it's quite a burden to maintain in addition
to having unclear semantics.

As a workaround, you can for example have comma-seperated parameters.
One can potentially implement a listify-factory for Parmeters objects
too.

[1]: https://groups.google.com/forum/#!topic/luigi-user/kywHGzDD02c

==

luigi/parameter.py
test/parameter_test.py
test/task_test.py
==================
85d71b36;Mark Grey;2015-08-13 15:50:12 -0400;Merge pull request #1131 from DeaconDesperado/atomic_bq_uploads
atomic bigquery uploads
==
==================
8a9d5eb1;Mark Grey;2015-08-13 14:38:13 -0400;Merge pull request #1130 from spotify/revert-1127-atomic_bq_uploads
Revert "Atomic bigquery uploads"
==
==================
eaed3651;Mark Grey;2015-08-12 13:41:06 -0400;atomic bigquery uploads

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
4798d6d3;Mark Grey;2015-08-13 14:32:04 -0400;Revert "Atomic bigquery uploads"

==

luigi/contrib/bigquery.py
test/contrib/bigquery_test.py
==================
fdc09c6d;Mark Grey;2015-08-13 13:42:52 -0400;Merge pull request #1127 from DeaconDesperado/atomic_bq_uploads
Atomic bigquery uploads
==
==================
6ae55844;Mark Grey;2015-08-13 11:41:09 -0400;add test for BQTable uri method

==

test/contrib/bigquery_test.py
==================
2ed493bc;Arash Rouhani;2015-08-13 17:38:51 +0200;Merge pull request #1126 from JackDanger/jackdanger-ci
Centralizing test prep and execution in ./ci
==
==================
0107f2b3;Jack Danger Canty;2015-08-12 14:56:38 -0700;Updating docs to make `pip install tox` clear

==

CONTRIBUTING.rst
==================
22e076b2;Mark Grey;2015-08-12 13:41:06 -0400;atomic bigquery uploads

==

luigi/contrib/bigquery.py
==================
116577e3;Arash Rouhani;2015-08-13 09:31:21 +0200;Merge pull request #1128 from JackDanger/contrib-ssh-doc-typo
Fixing typo in contrib/ssh.py docs
==
==================
22a479fe;Jack Danger Canty;2015-08-12 14:37:21 -0700;Fixing typo in contrib/ssh.py docs
Adding a closing parenthesis on the file name that's mentioned and
line-wrapping two paragraphs to 80 characters.

==

luigi/contrib/ssh.py
==================
3b7770be;Arash Rouhani;2015-08-12 16:40:45 +0200;Merge pull request #1122 from JackDanger/using-requirements.txt
Fixing line wrapping in CONTRIBUTING.rst
==
==================
f8cc5844;Jack Danger Canty;2015-08-12 07:01:14 -0700;linewrap in CONTRIBUTING.rst so devs can read it
After cloning the repo I opened this file in `less` and had to quit it
and `cat` the file just to read the end of the sentences. Cleaning it up
for the next person.

==

CONTRIBUTING.rst
==================
3309dc00;Erik Bernhardsson;2015-08-11 08:55:02 -0400;Merge pull request #1119 from Houzz/insignificant_assistant
Allows assistant to run tasks with insignificant parameters
==
==================
ec3d8a25;Dave Buchfuhrer;2015-07-29 17:03:07 -0700;Allows assistant to run tasks with insignificant parameters
If a task has an insignificant parameter, it should be ok for an assistant to
run it with the default value of that parameter. This change allows the
assistant to do that by ignoring when insignificant parameters are not present
in Task.from_str_params.

==

luigi/task.py
test/task_test.py
==================
fc445640;Arash Rouhani;2015-08-10 17:03:45 +0200;Merge pull request #1112 from spotify/Tarrasch-patch-2
Travis: Run tox with fixed hashseed
==
==================
315b92db;Arash Rouhani;2015-08-10 13:20:18 +0200;Merge pull request #1117 from Tarrasch/silcence_more_intermittent_failures
tests: Mute LuigidDaemonTest on travis
==
==================
dc4a48f0;Arash Rouhani;2015-08-10 11:25:32 +0200;Merge pull request #1107 from spotify/Tarrasch-patch-1
test/postgres_test.py: Correctly pass of-Parameter
==
==================
564ce90e;Arash Rouhani;2015-08-10 11:23:00 +0200;tests: Mute LuigidDaemonTest on travis
This one is failing every now and then and causing red builds. I'm also
trying to reproduce this but I'll mute for now.

==

test/bin_test.py
==================
72c177c1;Arash Rouhani;2015-08-08 14:18:47 +0200;Merge pull request #1068 from soxofaan/issue-1029-luigi-cfg-followup
Issue #1029/#1030 Follow up: add global luigi.cfg and add deprecation warning on old-style paths
==
==================
1b7be4f7;Kyle Sun;2015-08-07 18:07:13 -0700;properly handle space in ssh command for remote hadoop jar job

==

luigi/contrib/hadoop_jar.py
==================
2223e641;Arash Rouhani;2015-08-05 21:49:24 +0200;Merge pull request #1111 from Tarrasch/silcence_intermittent_failures
Silence tests that fail intermittently
==
==================
48896c35;Arash Rouhani;2015-08-02 18:56:48 +0200;Silence tests that fail intermittently
But we only silence the tests on Travis CI. Hoping for a balance between
productivity when merging PRs and that the tests actually get run
somewhere by someone.

==

test/helpers.py
test/rpc_test.py
test/server_test.py
test/target_test.py
test/worker_test.py
tox.ini
==================
c850f441;Arash Rouhani;2015-08-02 19:08:58 +0200;Travis: Run tox with fixed hashseed
The idea is that different (randomly generated) hash seeds could be one of the reasons that we are seeing intermittent failures on Travis. While I doubt this particular change will help, it should make the tests run somewhat more consistently on Travis.

I choose 1 arbitrarily of course.
==

scripts/ci/conditional_tox.sh
==================
f04d23ab;Arash Rouhani;2015-08-01 23:15:59 +0200;Merge pull request #1106 from Tarrasch/set_upper_version_bounds
Set upper bounds on packages, assuming semver
==
==================
c3d685e2;Arash Rouhani;2015-08-01 17:21:59 +0200;Merge pull request #1109 from jkukul/fix-task_to_str_to_task-behaviour
Fix task_to_str_to_task behaviour when a Task has insignificant parameter
==
==================
b958140c;Arash Rouhani;2015-08-01 17:18:52 +0200;Merge pull request #1108 from open-craft/escape-hive
contrib/hive: Escape names in Hive partition spec
==
==================
1d72d0c8;Arash Rouhani;2015-08-01 17:12:12 +0200;Merge pull request #1101 from fphilipe/fix-date-minute-parameter
Fix DateMinuteParameter format
==
==================
0b283acc;Philipe Fatio;2015-07-29 15:37:50 +0200;Fix DateMinuteParameter format
It was using H as the separator between hours and minutes, which is
incorrect. The ISO 8601 standard requires a colon in the extended format
or nothing in the basic format. Opt for basic format since colons don't
play nice with file systems.

==

luigi/parameter.py
test/date_parameter_test.py
test/parameter_test.py
==================
7e671daf;Jakub Kukul;2015-07-31 20:59:13 +0000;Added insignificant parameter to task_to_str_to_task test

==

test/task_test.py
==================
a923a757;Jakub Kukul;2015-07-31 20:57:41 +0000;Revert "Hide insignificant params in to_str_params method."
This reverts commit af167259da31cd756df627c4a100c028021c3184.

==

luigi/task.py
==================
1de379b5;Braden MacDonald;2015-07-17 19:54:23 -0700;Escape names in Hive partition spec

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
475c1db0;Arash Rouhani;2015-07-31 20:07:27 +0200;test/postgres_test.py: Correctly pass of-Parameter
The new way was introduced in spotify/luigi#1075
==

test/postgres_test.py
==================
b2f46a07;Arash Rouhani;2015-07-31 19:55:41 +0200;Set upper bounds on packages, assuming semver
Every now and then some package somewhere in internet world changes,
causing our travis builds to fail. The only sensible thing to do is to
not pull the latest. We shouldn't bu unneccesarily strict either. So
assuming others use semver, I copied the current version of everything
that we currently use (based on a contemporary build [1]) and just
bumped the major number and set it as a strictly less-than constraint.

I got motivated to do this since #1103, but this is not the first
occurence.

[1]: https://travis-ci.org/spotify/luigi/jobs/73593492

==

.travis.yml
setup.py
tox.ini
==================
c1499aee;Arash Rouhani;2015-07-31 19:32:37 +0200;Merge pull request #1098 from Tarrasch/subclass_dateparameter
Make DateHourParameter subclass of DateParameter
==
==================
11670858;Arash Rouhani;2015-07-28 08:31:30 +0200;Create and use DateParameterBase
The purpose of this refactoring is to enable more code reuse in future
commits.

Also added tests around serializing to not break anything.

Also removed ancient TODO from 2012:
https://github.com/spotify/luigi/commit/f65d4cac9d4d867a696df6d3f7f1a95c709de276

==

luigi/parameter.py
test/parameter_test.py
==================
4f0dd3d6;Arash Rouhani;2015-07-31 14:53:15 +0200;Merge pull request #1103 from Tarrasch/fix-dependencies-mess
Fix dependencies mess
==
==================
eb1d0e7a;Arash Rouhani;2015-07-30 08:50:52 +0200;Set upper bound on snakebite, discussion in #1047
Also, only install it when we run the tests for the hadoop
distributions.

While at it. I also inlined test/requirements.txt in tox.ini file. I
don't see the purpose of listing the depedencies at different places.

==

test/minicluster.py
test/requirements.txt
test/snakebite_test.py
tox.ini
==================
050d1386;Arash Rouhani;2015-07-30 08:44:43 +0200;Only install postgres depedency when needed
I've heard multiple complaints that tests are hard to run because you
need postgres installed locally.

==

.travis.yml
test/postgres_test.py
test/postgres_with_server_test.py
tox.ini
==================
b296e522;Arash Rouhani;2015-07-28 19:28:00 +0200;Merge pull request #1075 from Tarrasch/add-taskparameter-type
Add taskparameter type
==
==================
13be2843;Arash Rouhani;2015-07-28 07:51:34 +0200;Merge pull request #1097 from robbles/patch-1
Update luigi_patterns.rst to fix bug in example and reference WrapperTask
==
==================
9136cd04;Arash Rouhani;2015-07-28 07:49:39 +0200;Merge pull request #1096 from kianho/fix-s3_load_path
Corrected PR #996 according to comments in #995.
==
==================
c4590fe2;Rob O'Dwyer;2015-07-27 18:12:41 -0700;Update luigi_patterns.rst

==

doc/luigi_patterns.rst
==================
91b707ac;Kian Ho;2015-07-27 20:35:37 +1000;Corrected PR #996 according to comments in #995.
- Changed S3CopyToTable.s3_load_path back to a method according to the
  suggestion: https://github.com/spotify/luigi/issues/995#issuecomment-123896142

- Modified the accompanying test case accordingly.

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
b72922d8;Fredrik Bengtsson;2015-07-27 10:41:50 +0200;Merge pull request #1094 from soxofaan/month-parameter
PR #1079 follow up: improve test class names
==
==================
51d6fb83;Stefaan Lippens;2015-07-27 09:33:38 +0200;PR #1079 follow up: improve test class names

==

test/date_parameter_test.py
==================
ec70befa;Arash Rouhani;2015-07-24 15:11:49 +0200;Merge pull request #1087 from spotify/Tarrasch-patch-1
Use luigi binary in docs
==
==================
9036d0a3;Arash Rouhani;2015-07-23 15:07:49 +0200;Change Range to use TaskParameter
This gives the advantage of increased type safety for programmatic uses
of Range.

But the actual reason I'm doing this is that it opens up the path for a
more sensible argument parsing in luigi.

==

luigi/parameter.py
luigi/tools/range.py
test/range_test.py
==================
d0920f3a;Arash Rouhani;2015-07-23 13:32:46 +0200;Merge pull request #1085 from Houzz/non_atomic_ftp_put
Allows non-atomic ftp
==
==================
9305a379;Arash Rouhani;2015-07-23 13:32:17 +0200;Merge pull request #1090 from JackDanger/jackdanger/services-typo
'services two purposes' -> 'serves two purposes'
==
==================
3c613c43;Arash Rouhani;2015-07-23 13:31:08 +0200;Merge pull request #1079 from soxofaan/month-parameter
Add MonthParameter and YearParameter
==
==================
e9a496ae;Arash Rouhani;2015-07-23 13:28:04 +0200;Merge pull request #1089 from graingert/patch-2
Close pool to prevent stale processes
==
==================
a56b8ff8;Thomas Grainger;2015-07-22 23:10:00 +0100;Close pool to prevent stale processes
Processes end up hanging around until the Pool is garbage collected. This could be a while, or never if the GC is disabled.

==

luigi/worker.py
==================
dff9daa5;Thomas Grainger;2015-07-22 23:09:45 +0100;test that worker pool children are killed

==

test/requirements.txt
test/worker_parallel_scheduling_test.py
==================
5bebd169;Jack Danger Canty;2015-07-22 17:10:32 -0700;'services two purposes' -> 'serves two purposes'
'Services' is highly unusual as a verb in places where 'serves' would work.

==

doc/central_scheduler.rst
==================
a9ebace4;Arash Rouhani;2015-07-22 18:15:53 +0200;Use luigi binary in docs
As discussed in #1084
==

doc/example_top_artists.rst
==================
4c0648fb;Arash Rouhani;2015-07-22 14:09:59 +0200;Merge pull request #1083 from pedersen/module-none
Adding check that a module was defined on the command line before trying to import it
==
==================
6aed9ca5;Michael J. Pedersen;2015-07-22 06:39:35 -0400;Supporting 'luigi --help' and 'luigi' command lines, removing __import__ error when those commands are run.

==

luigi/interface.py
test/cmdline_test.py
==================
84a657ae;Arash Rouhani;2015-07-14 17:45:20 +0200;Implement TaskParameter parameter type
Made for MetaTasks like the Range family. See docs included in this
commit as well.

One vision I have with this commit is to add a TaskParameter `task` to
`core()` and to eventually reintroduce the `--task` parameter. Another
vision is to have a better command line parsing and unify the path for
Task instantiation. This commits is a step in that direction.

==

luigi/__init__.py
luigi/parameter.py
test/parameter_test.py
==================
7a63da8b;Dave Buchfuhrer;2015-07-21 14:33:10 -0700;Allows non-atomic ftp
Part of my pipeline requires uploading files to an external server via ftp. The
server requires specific file names and rejects and deletes the temporary files
uploaded by RemoteTarget. In order to get around this, I've added an optional
atomic parameter to RemoteTarget.put. By running it with atomic=false, the
the target file is written to directly.

==

luigi/contrib/ftp.py
==================
8337ee30;Arash Rouhani;2015-07-20 21:55:18 +0200;Merge pull request #1082 from graingert/patch-1
connection_string should be a property
==
==================
9f22d571;Thomas Grainger;2015-07-20 14:41:40 +0100;connection_string should be a property

==

luigi/contrib/sqla.py
==================
211722a9;Arash Rouhani;2015-07-20 11:34:20 +0200;Merge pull request #1081 from jkukul/make-sure-insignificant-parameters-are-hidden-in-ui
Make sure insignificant parameters are hidden in Scheduler's UI.
==
==================
af167259;Jakub Kukul;2015-07-19 20:53:38 +0200;Hide insignificant params in to_str_params method.
This method is mainly used to pass params to scheduler and after this point we lose information about significance.

The goal is to avoid disclosing insignificant parameters to a user via scheduler

==

luigi/task.py
==================
8d0e5150;Jakub Kukul;2015-07-19 20:25:58 +0200;Do not recreate parameters dictionary on every iteration.
Instead, reuse existing dictionary.

==

luigi/task.py
==================
73b306ce;Jakub Kukul;2015-07-19 20:16:03 +0200;Double-quote docstring.

==

luigi/task.py
==================
1cd35b82;Erik Bernhardsson;2015-07-19 16:03:53 -0400;Merge pull request #1080 from jkukul/minor-improvements-in-example-task
Minor improvements in one of example tasks.
==
==================
5089df30;Jakub Kukul;2015-07-19 21:02:12 +0200;Fix some doc typos.

==

CONTRIBUTING.rst
luigi/scheduler.py
==================
58b5c7a3;Jakub Kukul;2015-07-19 15:30:01 +0200;Foo should be a WrapperTask.
It has no outputs, so let's avoid warnings in example workflow.

==

examples/foo.py
==================
3df1396f;Jakub Kukul;2015-07-19 15:29:23 +0200;Remove unused class

==

examples/foo.py
==================
52940c56;Stefaan Lippens;2015-07-13 13:48:03 +0200;Issue #1029/#1030 Follow up: add global luigi.cfg and add deprecation warning on old-style paths

==

luigi/configuration.py
==================
180207da;Stefaan Lippens;2015-07-17 22:11:49 +0200;Add MonthParameter and YearParameter

==

luigi/__init__.py
luigi/parameter.py
test/date_hour_test.py
test/date_minute_test.py
test/date_parameter_test.py
test/import_test.py
test/parameter_test.py
==================
07bdf6e4;Arash Rouhani;2015-07-15 20:16:02 +0200;Merge pull request #1076 from Tarrasch/split-import-lines
Linting: Nicer multiline exports in __init__.py
==
==================
1801591c;Arash Rouhani;2015-07-15 13:22:55 +0200;Merge pull request #1077 from graingert/patch-1
PyPi -> PyPI
==
==================
83136ccc;Thomas Grainger;2015-07-15 11:45:23 +0100;PyPi -> PyPI

==

README.rst
==================
b6d664eb;Erik Bernhardsson;2015-07-14 11:48:32 -0400;Merge pull request #1074 from Tarrasch/remove-ordereddict-py26
Remove the python 2.6 relic ordereddict
==
==================
ffcace3b;Arash Rouhani;2015-07-14 17:02:50 +0200;Linting: Nicer multiline exports in __init__.py

==

luigi/__init__.py
==================
48671f60;Arash Rouhani;2015-07-14 16:16:22 +0200;Remove the python 2.6 relic ordereddict

==

debian/control
luigi/task_register.py
test/contrib/hive_test.py
==================
7fe78814;Arash Rouhani;2015-07-14 10:22:56 +0200;Merge pull request #1058 from Tarrasch/add-taskparameter-type
Move did-you-mean logic into Register
==
==================
3c1d0593;Arash Rouhani;2015-07-10 14:35:31 +0200;Move did-you-mean logic into Register
Reasons for this patch:

 * No duplicate error message logic
 * RangeBlah --of MissSpeledTask will suggest a "Did you mean?"
 * More granular Exception types
 * I plan to add features that benefit from this reorganization.

While doing this, I also noted that the test for
`test/dynamic_import_test.py` was broken and made unreasonable
assumptions about in which order tests are run. I changed things to what
I think makes sense.

==

luigi/interface.py
luigi/task_register.py
test/cmdline_test.py
test/dynamic_import_test.py
test/foo_module.py
==================
672856d3;Arash Rouhani;2015-07-14 10:08:08 +0200;Merge pull request #1072 from vine/master
GCS: Wait for eventual consistency before returning from various operations
==
==================
82a49a31;Arash Rouhani;2015-07-14 10:06:20 +0200;Merge pull request #1071 from Houzz/mapred_job_names
Removes unnecessary quotes from around mapred.job.name
==
==================
b5ad65bb;Mike Kaplinskiy;2015-07-13 17:34:26 -0700;GCS: Wait for eventual consistency before returning from various operations.
This should help spurious test failures (and probably some prod scenarios). This obviously isn't a complete solution - just because GCS says something is
true once doesn't mean it's going to stay true, but at least we have a higher chance of succeeding various ops.

I'd love for the actual solution for the tests to include a faked client (a la moto), but it doesn't seem like that's anywhere on the roadmap :(.

==

luigi/contrib/gcs.py
test/contrib/gcs_test.py
==================
da085c28;Dave Buchfuhrer;2015-07-13 13:30:28 -0700;Removes unnecessary quotes from around mapred.job.name
In setting mapred.job.name="%s", we're actually including the quote marks in the
job name, as subprocess escapes everything passed in the arguments. Removing the
quotes results in job names that no longer have leading quote marks.

==

luigi/contrib/hadoop.py
==================
c26e8c91;Arash Rouhani;2015-07-13 15:34:36 +0200;Merge pull request #1069 from fabriziodemaria/mock-fix
Fix Mock dependency error
==
==================
d7622b48;fabriziodenny;2015-07-13 15:21:39 +0200;Fix Mock dependency error From version 1.1.1 of Mock, 'AttributeError' is reaised in case of attribute starting with 'assert' or 'assret'

==

test/contrib/spark_test.py
test/worker_parallel_scheduling_test.py
==================
1f47679f;Arash Rouhani;2015-07-13 13:02:56 +0200;Merge pull request #1067 from spotify/Tarrasch-patch-1
Clarify the incomplete external task message
==
==================
ff78d752;Arash Rouhani;2015-07-13 11:10:52 +0200;Clarify the incomplete external task message
The idea is that most users of luigi aren't luigi developers and don't know all of the luigi terminology either. The new error message tries to describe the problem more in high level rather than explaining the issue in luigi terminology.
==

luigi/worker.py
==================
7596cd26;Arash Rouhani;2015-07-11 20:29:28 +0200;Merge pull request #1063 from OAODEV/fix_gcs_progress
Fix upload progress indicator in Google Cloud Storage target
==
==================
c8ce63dc;Arash Rouhani;2015-07-11 20:23:25 +0200;Merge pull request #1065 from gpoulin/py26_clean
Remove code for python2.6 support
==
==================
ff39f112;Thomas Yager-Madden;2015-07-11 10:41:09 -0500;Larger write in test_put_file
Previous `gcs_test` just wrote 'hi' to the GCS bucket file. This missed the bug in line 144 because it uploads in a single chunk. By increasing the write to a couple of chunks, the test only passes with my uploader fix in `gcs.py`. (The existing file gets a TypeError exception.)
==

test/contrib/gcs_test.py
==================
2b4e26a0;Guillaume Poulin;2015-07-10 22:59:45 -0400;Remove code for python2.6 support
Remove unused import

==

luigi/contrib/ftp.py
luigi/contrib/hadoop.py
luigi/contrib/webhdfs.py
luigi/file.py
luigi/mock.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/worker.py
==================
1a6a89d8;Arash Rouhani;2015-07-11 11:12:23 +0200;Merge pull request #1059 from Tarrasch/fix-luigi-run-use-case
Fix luigi run use case
==
==================
b7768da9;Arash Rouhani;2015-07-11 11:08:13 +0200;Merge pull request #1064 from gpoulin/postgres_unicode
Fix postgres encoding with python2
==
==================
cb6538b4;Guillaume Poulin;2015-07-10 22:47:24 -0400;Fix postgres encoding with python2

==

luigi/postgres.py
test/postgres_with_server_test.py
==================
b028047c;Arash Rouhani;2015-07-10 23:48:08 +0200;Merge pull request #1061 from sklarsa/master
Added [email] force-send to configuration docs
==
==================
a3b20b34;Thomas Yager-Madden;2015-07-10 14:35:46 -0500;Change upload object name to 'status' rather than 'progress' for clarity

==

luigi/contrib/gcs.py
==================
230c4882;Thomas Yager-Madden;2015-07-10 14:28:49 -0500;Fix upload progress indicator in Google Cloud Storage target

==

luigi/contrib/gcs.py
==================
5c009891;Steven Sklar;2015-07-10 13:25:03 -0400;Added [email] force-send to configuration docs

==

doc/configuration.rst
==================
e2e3dc39;Arash Rouhani;2015-07-10 17:04:14 +0200;Update examples/foo.py that was broken since #1039

==

examples/foo.py
==================
acadab54;Arash Rouhani;2015-07-10 17:03:36 +0200;Unbreak luigi.run() behavior
As reported by tym-oao in spotify/luigi#1039.

Basically, since that PR, the following behavior wouldn't work:

    if __name__ == '__main__':
        luigi.run(main_task_cls=MyTask)

Basically, you don't pass any command line parameters. Unlike for
example in the case that was working before this commit as well:

    if __name__ == '__main__':
        luigi.run(['--my-param', 'my_value'], main_task_cls=MyTask)

==

luigi/interface.py
test/interface_test.py
==================
a2fd8dc5;Arash Rouhani;2015-07-08 14:37:01 +0200;Merge pull request #1043 from spotify/intermittent-docs-failures
tox: Don't fail travis on linkchecks
==
==================
08cb24f2;Arash Rouhani;2015-07-08 14:36:17 +0200;Merge pull request #1051 from spotify/disable_intermittent_gcs_failures
Disable intermittent gcs failures
==
==================
3c301317;Arash Rouhani;2015-07-08 14:36:09 +0200;Merge pull request #1050 from Tarrasch/tarrasch_display_parameters
display parameters in /history
==
==================
68a4154f;Arash Rouhani;2015-07-08 14:13:14 +0200;Merge pull request #1046 from Houzz/faster_get_work
get_work optimizations
==
==================
62950298;Arash Rouhani;2015-07-08 11:43:00 +0200;Disable intermittent gcs failures
Inspired by the failures from https://github.com/spotify/luigi/pull/1043

==

test/contrib/gcs_test.py
==================
1e0121be;Arash Rouhani;2015-07-05 09:47:03 +0200;tox: Don't fail travis on linkchecks
This is yet another intermittent failure causing pain for a luigi maintainer. We can't make sure that external websites are up and responding.

From what I saw from the docs[1]. There's no feature to do retries or accept intermittent failures. Hence, let us just ignore failures. This commit was inspired by [2].

[1]: http://sphinx-doc.org/builders.html#sphinx.builders.linkcheck.CheckExternalLinksBuilder
[2]: https://travis-ci.org/spotify/luigi/jobs/69595616

==

tox.ini
==================
d553276c;Glenn Dmello;2015-05-12 15:01:46 -0700;display parameters in /history

==

luigi/templates/recent.html
==================
890dd872;Erik Bernhardsson;2015-07-07 16:01:59 -0400;Merge pull request #1049 from JackDanger/patch-1
Update workflows.rst
==
==================
0cff4133;Jack Danger Canty;2015-07-07 12:58:53 -0700;Update workflows.rst
typo: missing word 'with'
==

doc/workflows.rst
==================
a891e76d;Arash Rouhani;2015-07-07 11:35:31 +0200;Merge pull request #1044 from weidongtoml/master
Fix Worker initializtion bug.
==
==================
27f5df1a;Arash Rouhani;2015-07-07 11:29:17 +0200;Merge pull request #1045 from soxofaan/luigi_init_import
Avoid intermediate variables in luigi/__init__.py for improved IDE-friendliness
==
==================
3bf4131c;Stefaan Lippens;2015-07-06 23:48:04 +0200;Avoid intermediate variables in luigi/__init__.py for improved IDE-friendliness

==

luigi/__init__.py
test/import_test.py
==================
433f651a;Dave Buchfuhrer;2015-07-02 17:08:39 -0700;Speeds up get_work after finding best_task
After finding best_task, get_work can return immediately, except that it needs
to compute the number of PENDING tasks. However, it still does a lot of other
unnecessary work. This speeds up get_work by checking earlier whether a
best_task has been found yet and skipping the other work if so.

==

luigi/scheduler.py
==================
57e1d5db;Dave Buchfuhrer;2015-07-02 16:29:01 -0700;Cuts off upstream_status computation on DONE tasks
It doesn't really make sense to keep traversing past DONE tasks to find upstream
status, so this change avoids looking at dependents of DONE tasks when computing
upstream dependencies. This can save a lot of time in get_work if there are many
DONE tasks with lots of dependencies.

==

luigi/scheduler.py
==================
a7da50d5;Dave Buchfuhrer;2015-07-01 17:54:06 -0700;Simplifies rank function to speed up get_work
Removes the computation of number of dependents from the rank function, as it's
one of the more expensive parts of get_work and probably doesn't make much of a
difference anyway.

==

luigi/scheduler.py
test/central_planner_test.py
==================
ecbf26a9;Weidong Liang;2015-07-06 10:36:40 +0800;Fix Worker initializtion bug.

==

luigi/scheduler.py
==================
81a20ad0;Erik Bernhardsson;2015-07-05 13:34:17 -0400;Remove pyp.in badge

==

README.rst
==================
d3816119;Arash Rouhani;2015-07-05 09:04:56 +0200;Merge pull request #1019 from weidongtoml/master
A Fix the TypeError whenever prune is called before update has been e…
==
==================
2db97689;Weidong Liang;2015-07-05 11:15:51 +0800;A Fix the TypeError whenever prune is called before update has been invoked in worker.

==

luigi/scheduler.py
test/scheduler_test.py
==================
e72f7917;Erik Bernhardsson;2015-07-03 10:38:54 -0400;Merge pull request #1041 from Tarrasch/fix_bin_tests
Fix bin tests
==
==================
b9c27949;Arash Rouhani;2015-07-03 13:25:22 +0200;Merge pull request #1036 from jkukul/improve-flatten-method
Improve `flatten` method to handle TypeErrors in generators
==
==================
62fe1156;Arash Rouhani;2015-07-03 07:41:34 +0200;Merge pull request #1042 from wwj718/master
Typo in docs: add a missing ")"
==
==================
755c2583;wwj718;2015-07-03 08:59:09 +0800;Typo in docs: add a missing ")"

==

doc/tasks.rst
==================
2d292f80;Jakub Kukul;2015-07-02 13:54:34 +0200;Only check if struct is iterable
Instead of also checking if there's a TypeError while iterating through struct

==

luigi/task.py
test/task_test.py
==================
65001510;Jakub Kukul;2015-07-02 12:54:32 +0200;Added tests for flatten method

==

test/task_test.py
==================
f153c5ee;Arash Rouhani;2015-07-02 15:27:49 +0200;Merge pull request #1040 from spotify/Tarrasch-patch-1
Disable test_multiple_workers
==
==================
e93a7383;Arash Rouhani;2015-07-02 15:25:40 +0200;server_test.py: Use new state files for each run
Hopefully it will resolve intermittent failures we have.

See for instance https://travis-ci.org/spotify/luigi/jobs/69174323

I think this is promising, because before I was able to reproduce the
same stack traces locally by running two tests concurrently and I can't
reproduce it anymore.

==

test/bin_test.py
test/server_test.py
==================
9d09cf59;Arash Rouhani;2015-07-02 14:49:13 +0200;Use luigi.cmdline in bin_test.py
This should also makes errors appear earlier when debugging intermittent
failures on Travis CI.

==

test/bin_test.py
==================
2537098d;Arash Rouhani;2015-07-02 14:21:33 +0200;Disable test_multiple_workers
https://travis-ci.org/spotify/luigi/jobs/69262519
https://travis-ci.org/spotify/luigi/jobs/69256223
https://travis-ci.org/spotify/luigi/jobs/69154443

and many many more ...
==

test/worker_test.py
==================
caed40a9;Arash Rouhani;2015-07-02 13:39:18 +0200;Merge pull request #1018 from Marco-Santoni/keyword_port
 Postgres port as keyword argument
==
==================
b4f0005d;Arash Rouhani;2015-07-02 13:32:20 +0200;Merge pull request #1039 from Tarrasch/cleanup-interface-and-parameters
Cleanup interface and parameters
==
==================
810c33fc;Erik Bernhardsson;2015-07-02 11:47:16 +0200;Merge pull request #1035 from blooshirt/add-spark-packages
Add packages config option to spark task.
==
==================
73526392;Arash Rouhani;2015-07-02 10:50:46 +0200;Merge pull request #1038 from spotify/run-bq-tests-on-travis
Actually run BigQuery tests
==
==================
0dec90c1;Arash Rouhani;2015-06-14 16:20:18 +0200;Discourage luigi.run() in favor of luigi binary
I got motivated to do this when I saw the pattern with main_task_cls.

I think there's no valid use case for it:

In case you actually want to run a particular class and you know which
one it is.  You may use luigi.build([MyTask()]). Be careful about
not having lockfiles then though.

If you only want to expose something like

    if __name__ == '__main__':
        luigi.run(main_task_cls=MyTask)

you can instead just run your task using the command line tool

    luigi MyTask --myparam 123

By removing main_task_cls, I think we make luigi feel more declarative.
Despite this rant, I made the change backward compatible.

While at it, I also made the local_scheduler part consistent
implementation wise and added a test for it.

==

doc/command_line.rst
doc/execution_model.rst
examples/wordcount.py
luigi/interface.py
test/cmdline_test.py
==================
bd120e94;Arash Rouhani;2015-06-11 16:29:48 +0200;Remove old TODO
And to this particular TODO, I think it makes sense to override the
argument like is done in the code.

==

luigi/interface.py
==================
e67bbb2c;Arash Rouhani;2015-06-11 16:25:10 +0200;Minor refactor

==

luigi/interface.py
==================
c674ae3c;Arash Rouhani;2015-06-11 15:11:23 +0200;Parameter.py Remove old docs
That documentation might encourage the use of a deprecated feature.

==

luigi/parameter.py
==================
9b72d8f1;Arash Rouhani;2015-06-11 14:34:52 +0200;Remove optparse support
Since argparse is included in python >= 2.7, we don't add any
dependencies by adding this.

Trying to not break old code that much by allowing `use_optparse` to be
passed, but it will only be ignored and not affect anything.

==

examples/elasticsearch_index.py
examples/foo.py
examples/foo_complex.py
luigi/interface.py
luigi/parameter.py
test/date_interval_test.py
test/optparse_test.py
test/parameter_test.py
==================
00cadd21;Thomas Harper;2015-07-01 16:51:24 +0200;Actually run BigQuery tests

==

test/contrib/bigquery_test.py
==================
4502e3eb;Arash Rouhani;2015-07-01 17:26:14 +0200;Merge pull request #1030 from soxofaan/issue-1029-clientcfg
Issue 1029: add support for config file `luigi.cfg` in working dir
==
==================
aaecac16;Arash Rouhani;2015-07-01 17:25:45 +0200;Merge pull request #1034 from soxofaan/sqla_target_connect_args_default
Use a valid default value for connect_args of SQLAlchemyTarget.__init__
==
==================
25df65cb;Arash Rouhani;2015-07-01 17:24:35 +0200;Merge pull request #1024 from soxofaan/issue-1023-local-scheduler-pruning
Fix #1023 add pruning on get_work of local scheduler
==
==================
2621b3fe;Thomas Walwyn;2015-06-30 17:10:04 +0200;Add packages config option to spark task.

==

luigi/contrib/spark.py
==================
dc41727f;Stefaan Lippens;2015-06-27 01:28:45 +0200;Fix #1023 add pruning on get_work of local scheduler

==

luigi/interface.py
luigi/scheduler.py
test/worker_external_task_test.py
==================
e1fb45db;Stefaan Lippens;2015-06-29 23:31:15 +0200;PR #1034: Eliminate global vars in sqla tests
These global var (code smell) did hide the issue with SQLAlchemyTarget connect_args' default value

==

test/contrib/sqla_test.py
==================
f8af9c10;Stefaan Lippens;2015-06-29 22:20:03 +0200;PR #1034: Use a valid default value for connect_args of SQLAlchemyTarget.__init__

==

luigi/contrib/sqla.py
==================
90604c3a;Stefaan Lippens;2015-06-30 00:13:38 +0200;Issue #1029: update to "luigi.cfg" in various parts of documentation, comments, examples and snippets

==

.gitignore
doc/central_scheduler.rst
doc/configuration.rst
examples/terasort.py
luigi/configuration.py
luigi/contrib/esindex.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hive.py
luigi/contrib/pig.py
luigi/contrib/scalding.py
luigi/contrib/webhdfs.py
luigi/notifications.py
luigi/task.py
test/contrib/_webhdfs_test.py
test/snakebite_test.py
test/testconfig/luigi.cfg
tox.ini
==================
b81b8a95;Stefaan Lippens;2015-06-29 15:58:29 +0200;Issue #1029: add support for config file `luigi.cfg` in working dir

==

luigi/configuration.py
==================
c7072535;Arash Rouhani;2015-06-29 20:26:31 +0200;Merge pull request #1033 from spotify/Tarrasch-patch-1
travis: Fix formatting error from #1031
==
==================
4f16e393;Arash Rouhani;2015-06-29 18:32:15 +0200;travis: Fix formatting error from #1031
Purpose: to get the gcs tests to actually run.
==

.travis.yml
==================
09fd893b;Arash Rouhani;2015-06-29 18:22:18 +0200;Merge pull request #1032 from spotify/fix-gcloud-tests
travis: Dont run gcloud whithout credentials

Just merging to unbreak the build. Now it seem to never run the gcs tests.
==
==================
46d06084;Arash Rouhani;2015-06-29 18:17:03 +0200;Merge pull request #1027 from Tarrasch/fix-slowdown-from-986
Fix get_work() slowdown introduced in #986
==
==================
9ea8ba6a;Arash Rouhani;2015-06-29 17:16:35 +0200;travis: Dont run gcloud whithout credentials
This also unbreaks the build from the merge of spotify/luigi#1000.

==

.travis.yml
scripts/ci/conditional_tox.sh
==================
959202a5;Arash Rouhani;2015-06-29 15:38:29 +0200;Merge pull request #1000 from spotify/run-gcloud-tests
Run gcs tests on Travis
==
==================
375a4706;Arash Rouhani;2015-06-09 17:31:06 +0200;Run gcs tests on Travis
The implementation uses Travis file encryption[1] and Google's default
way of setting the gcloud credentials described here[2].

[1]: http://docs.travis-ci.com/user/encrypting-files/
[2]: https://developers.google.com/identity/protocols/application-default-credentials

==

.gitignore
.travis.yml
test/contrib/gcs_test.py
test/gcloud-credentials.json.enc
tox.ini
==================
7ee261cf;Arash Rouhani;2015-06-29 11:35:56 +0200;Fix get_work() slowdown introduced in #986
As daveFNbuck said in that PR. The patch in #986 slowed down his
get_work() calls. My theory is that I actually worsened the worst case
complexity in that patch because I assumed that tasks-per-worker is less
than total-pending-tasks. While that's definetly is the case at Spotify.
That is not the case at Houzz.

This patch tries to get the fastest speed in both settings. The setting
that will get a speed-up from this patch is when you have a very few
workers and most of your tasks are in the DONE state.

==

luigi/scheduler.py
test/central_planner_test.py
test/rpc_test.py
==================
d87d0b09;Arash Rouhani;2015-06-28 19:27:59 +0200;Merge pull request #1025 from SomeKittens/master
typo: sublass -> subclass
==
==================
a201fa5c;Randall Koutnik;2015-06-28 10:21:44 -0700;typo: sublass -> subclass

==

luigi/postgres.py
==================
7332bad9;Erik Bernhardsson;2015-06-27 11:44:23 +0200;Merge pull request #1022 from spotify/Tarrasch-patch-1
Remove unused test depedency cached_property
==
==================
ec6e6d06;Arash Rouhani;2015-06-26 16:26:20 +0200;Remove unused test depedency cached_property
The cached_property is already mentioned in setup.py
==

test/requirements.txt
==================
c3af8269;Arash Rouhani;2015-06-26 15:11:35 +0200;Release 1.3.0

==

setup.py
==================
eadfebeb;Arash Rouhani;2015-06-26 15:09:23 +0200;Describe release process

==

RELEASE-PROCESS.rst
==================
68f00231;Arash Rouhani;2015-06-26 15:15:23 +0200;Merge pull request #1021 from dylanjbarth/master
Add GrowthIntel and slides to company users on README.
==
==================
76ba56cc;Dylan Barth;2015-06-26 11:46:13 +0100;Add GrowthIntel and slides to company users on README.

==

README.rst
==================
cdce619f;Arash Rouhani;2015-06-26 12:05:15 +0200;Merge pull request #1020 from Tarrasch/fix-stupid-file-encoding
Use unix file types everywhere
==
==================
9f47f70c;Arash Rouhani;2015-06-26 11:31:34 +0200;Use unix file types everywhere
Basically I ran `fromdos **/*.py`

==

luigi/contrib/sqla.py
==================
4684203c;Marco Santoni;2015-06-25 13:23:32 +0200;Introduce port keyword argument. Default to None

==

luigi/postgres.py
==================
b8dce27f;Erik Bernhardsson;2015-06-25 11:37:14 +0200;Merge pull request #1016 from Marco-Santoni/patch-1
Fix small typo in doc
==
==================
497ac8e7;Marco Santoni;2015-06-25 11:09:04 +0200;Fix small typo in doc

==

luigi/parameter.py
==================
3d22bb5c;Erik Bernhardsson;2015-06-23 15:06:33 +0100;Merge pull request #1015 from fphilipe/patch-1
Fix typo
==
==================
e960ab99;Philipe Fatio;2015-06-23 14:42:42 +0200;Fix typo

==

doc/execution_model.rst
==================
8620c92e;Arash Rouhani;2015-06-22 21:15:02 +0200;Merge pull request #1011 from slategroup/redshift_schema
Adding support for schemas in checks for redshift table names.
==
==================
f33962e6;Arash Rouhani;2015-06-20 17:39:07 +0200;Merge pull request #1014 from Houzz/pypy_testing
Adds pypy scheduler tests to tox
==
==================
91624234;Dave Buchfuhrer;2015-06-19 20:21:57 -0700;Adds pypy scheduler tests to tox
I just started running my scheduler with PyPy, and it's reducing latency
so I'd like to stick with it. I've added tests to tox.ini to ensure that
this functionality is not lost with future updates. Psycopg2 isn't
compatible with PyPy, so I moved it out of requirements.txt and into
tox.ini for compatible interpreters. If we wanted to make it work,
psycopg2cffi is compatible with all versions but would require some code
changes.

==

.travis.yml
test/central_planner_test.py
test/requirements.txt
tox.ini
==================
9c4c47ae;Arash Rouhani;2015-06-18 11:10:28 +0200;Merge pull request #1002 from vine/bq
Add bigquery support
==
==================
ca5de6d1;Arash Rouhani;2015-06-18 11:08:03 +0200;Merge pull request #1010 from spotify/Tarrasch-patch-1
Add docs for where config files are looked for
==
==================
16349067;Arash Rouhani;2015-06-17 11:02:16 +0200;Add docs for where config files are looked for
Fixes #1009
==

doc/configuration.rst
==================
0de1fdaf;Dan Check;2015-06-16 20:38:21 -0400;Adding support for schemas in checks for redshift table names.

==

luigi/contrib/redshift.py
test/contrib/redshift_test.py
==================
8a4f7329;Arash Rouhani;2015-06-16 10:20:15 +0200;Merge pull request #1001 from pbamba/spark_config
Fix spark configuration property setup via client.cfg file
==
==================
572fce61;Arash Rouhani;2015-06-14 22:41:10 +0200;Merge pull request #986 from Tarrasch/fix_quadratic_behavior
Improve best case complexity for get_work
==
==================
63d1b3a6;Mike Kaplinskiy;2015-06-12 13:11:25 -0400;Switch to named tuples instead of args for BQClient params.

==

luigi/contrib/bigquery.py
test/contrib/_bigquery_test.py
test/contrib/_gcs_test.py
==================
b4a233e5;Arash Rouhani;2015-06-11 23:40:55 +0200;Merge pull request #1006 from jkukul/fix-reading-ping-interval-config
Fix reading ping_interval config
==
==================
8b745480;Arash Rouhani;2015-06-11 23:36:10 +0200;Merge pull request #1005 from teichmaj/master
fix missing package 'cached_property' in hadoop job pickle
==
==================
e2374d6c;Jakub Kukul;2015-06-11 18:23:43 +0000;fix-reading-ping-interval-config

==

luigi/worker.py
==================
0a96a55e;Jan Teichmann;2015-06-11 18:11:04 +0100;fix missing package 'cached_property' in hadoop job pickle

==

luigi/contrib/hadoop.py
==================
16526115;Mike Kaplinskiy;2015-06-08 16:23:45 -0400;Add bigquery support
Building on the GCS support added in the previous commit, this adds support for loading datasets from GCS into
Bigquery & running queries to generate other tables.

There's no export function, but it would be trivial to add one (and I may in the very near future). The docs for
that are at https://cloud.google.com/bigquery/exporting-data-from-bigquery .

A word of warning - the tests take FOREVER to run (the simple load data test alone task 120s!). I'm not sure how to
make this better given there's no mocks for the BQ api (and moreover there's a ton of parameters that need checking).

==

luigi/contrib/bigquery.py
test/contrib/_bigquery_test.py
==================
1925217e;pbamba;2015-06-10 17:36:09 +0200;Fix spark configuration property setup via client.cfg file

==

luigi/contrib/spark.py
test/contrib/spark_test.py
==================
b3be368c;Arash Rouhani;2015-06-09 13:14:39 +0200;Merge pull request #999 from vine/gcs
Add a Google Cloud Storage filesystem/target.
==
==================
65f8daa0;Arash Rouhani;2015-06-09 11:47:53 +0200;Merge pull request #950 from pbamba/redis_target
Add Redis target support
==
==================
5d2e1ef7;pbamba;2015-05-13 11:44:28 +0200;Add Redis target support Add tests for Redis target

==

luigi/contrib/redis_store.py
test/contrib/redis_test.py
==================
4fd64e70;Mike Kaplinskiy;2015-06-08 02:31:20 -0400;Add a Google Cloud Storage filesystem/target.
In theory, GCS is supported by boto, which would be a better option. Unfortunately Google's API authentication is a
mess - the boto GCS implementation basically only supports the CLI use-case (it expects a boto config to house all
the configuration). It has minimal support for using oauth tokens, but there is no way to use a service account,
which is what they recommend you use for automated tasks. You can see it at https://github.com/GoogleCloudPlatform/gcs-oauth2-boto-plugin .

Because of this insanity we use the google-api-python-client package to speak to GCS via their JSON protocol. This
is...not easy. Either way, this change does work and passes quite a few tests. Unfortunately since the API is
auto-generated, you can be sure that there are no fake implementations of it (e.g. moto). Hence the test is an
integration test and requires credentials on your box to access GCS.

You can get creds by going through the gcloud tools setup guide. After that just create a project & pick a bucket
and everything should work :)

==

luigi/contrib/gcs.py
test/contrib/_gcs_test.py
==================
8330f3e0;Arash Rouhani;2015-06-08 21:33:29 +0200;Merge pull request #997 from vine/fs
Standardize the directory interface on FileSystem
==
==================
b874dd6d;Mike Kaplinskiy;2015-06-08 00:56:08 -0400;Standardize the directory interface on FileSystem.
 - is_dir vs isdir -> prefer the latter
 - list vs listdir -> prefer the latter
 - add listdir() to the base FileSystem interface, and implement it in a bunch of places.

==

luigi/contrib/ssh.py
luigi/contrib/target.py
luigi/file.py
luigi/mock.py
luigi/s3.py
luigi/target.py
luigi/task.py
test/contrib/test_ssh.py
test/file_test.py
test/s3_test.py
==================
040bbc9e;Arash Rouhani;2015-06-08 16:19:50 +0200;Merge pull request #996 from kianho/fix-995
Fix for #995.
==
==================
d7ec3160;Arash Rouhani;2015-06-08 16:18:31 +0200;Merge pull request #900 from Houzz/remote_hadoop_jar
Support running a remote hadoop jar command
==
==================
f5f81142;Arash Rouhani;2015-06-08 16:18:01 +0200;Merge pull request #998 from vine/fqdn
Don't use socket.getfqdn
==
==================
7e79f7f1;Kian Ho;2015-06-08 18:41:39 +1000;Initial commit of `test/contrib/redshift_test.py`.
This unit-testing script was created at the recommendation of @Tarrasch
in #996 to accompany the fix for #995.

This commit includes number of squashed commits that fixed PEP8
incompatibilities and code-formatting.

==

test/contrib/redshift_test.py
==================
7998dce3;Mike Kaplinskiy;2015-06-08 02:00:17 -0400;Don't use socket.getfqdn
It's deadly slow and makes importing luigi...painful.

Before
```shell
$ time python -c 'import luigi'

real	0m5.172s
user	0m0.080s
sys	0m0.075s
```

After
```
$ time python -c 'import luigi'

real	0m0.172s
user	0m0.092s
sys	0m0.078s
```

This is on an OSX machine, which by default doesn't associate the local hostname with it's own ip in /etc/hosts.

I haven't heard anybody ever actually needing getfqdn (most times they just want the output of `hostname`). However
if you do depend on it, let me know, and I'll just make this lazily-evaluated.

==

luigi/notifications.py
==================
862da4ef;Mike Kaplinskiy;2015-06-08 00:55:50 -0400;Fix some pylint errors
The fix for bulk_complete is a bit ugly, but it fixes a very annoying issue where all users of luigi have a "method
bulk_complete of abstract class 'Task' is not implemented" on every single Task.

==

luigi/date_interval.py
luigi/task.py
==================
cedea059;Kian Ho;2015-06-06 21:28:41 +1000;Fix for #995.

==

luigi/contrib/redshift.py
==================
dd1f840c;Arash Rouhani;2015-06-05 13:32:19 +0200;Merge pull request #992 from hadesbox/taskhistory-namespaces
Fix for task history save problem on scheduler
==
==================
15d55691;Arash Rouhani;2015-06-04 14:13:23 +0200;Merge pull request #989 from themalkolm/patch-1
Add support for pseudo-tty allocation.
==
==================
13673fd4;Kyle Sun;2015-06-03 16:09:28 -0700;Add a basic test for hadoop_jar.py
and fix a simple crash in logging when jar() not defined

==

luigi/contrib/hadoop_jar.py
test/contrib/hadoop_jar_test.py
==================
627a2b7a;Luis Gonzalez;2015-06-03 17:26:36 +0200;Fix for task history save problem on scheduler

==

luigi/tools/parse_task.py
==================
7d11c8ba;Arash Rouhani;2015-06-03 16:36:51 +0200;Merge pull request #991 from dylanjbarth/master
Update SQLAlchemy target to work with multiple engines.
==
==================
73dabddc;Dylan Barth;2015-05-30 14:51:45 +0100;Update SQLAlchemy target to work with multiple engines.

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
7575f946;Alexander Krasnukhin;2015-06-02 12:00:46 +0200;Add support for pseudo-tty allocation.
This is required to be able run sudo command.

From man ssh

```
     -t      Force pseudo-tty allocation.  This can be used to execute arbitrary screen-based programs on a remote machine, which can be very useful, e.g. when
             implementing menu services.  Multiple -t options force tty allocation, even if ssh has no local tty.
```

==

luigi/contrib/ssh.py
==================
8d79b9aa;Arash Rouhani;2015-05-28 16:47:36 +0200;Improve best case complexity for get_work
Yes, we only improve the best case complexity, not the worst case.
In summary, you'll get sublinear in aomunt of tasks if your worker
doesn't do any tasks that use global resources.

get_work has gotten way to complex once we added global resource
constraints, as the resource constraints interaction with priorities is
a hairy beast requiring a global perspective, not allowing for
worker-local optimization. See these related tickets which added the
expressiveness/complicated stuff:

  * spotify/luigi#445
  * spotify/luigi#462
  * spotify/luigi#496
  * spotify/luigi#513

Note that the optimization once done in spotify/luigi#584 which helped
@daveFNbuck's company a lot doesn't help Spotify's setup. Most of
Spotify's tasks lingering in the scheduler are pending tasks and not
done tasks.

The proposed hacky solution here, which I mostly see as a temporary
solution until we do a bigger rewrite and rethink of the central
scheduler is the following:

Categorize the get_work scenario in two different buckets, "trivial" and
"nontrivial". Trivial is when none of the tasks of the worker require
global resources, in that scenario, just loop over the tasks the worker
have registered for instead of all the tasks. For the non-trivial case,
we do what we've always done previously.

So in that sense this commit contains two parts:

 * Add an "index" so you can quickly retrieve the tasks for a worker
 * Do the special-casing of trivial and nontrivial in get_work

At Spotify, we don't use the resources feature that much, so we're
hoping for tremendous speed improvements, no more 30-second get-work
calls! :)

==

luigi/scheduler.py
test/central_planner_test.py
test/rpc_test.py
test/scheduler_test.py
==================
b5ad3eba;Arash Rouhani;2015-05-28 17:37:48 +0200;Merge pull request #980 from Tarrasch/kwargs_for_scheduler
Use keyword arguments for Schedulers
==
==================
dc8533a3;Arash Rouhani;2015-05-28 17:37:33 +0200;Merge pull request #978 from ddaniels888/mortar_help_site
Add http version of mortar help site back in to the docs
==
==================
2ca535eb;Arash Rouhani;2015-05-28 14:12:29 +0200;Merge pull request #976 from Tarrasch/remove_globals_support
Remove is_global support
==
==================
db75c08f;Arash Rouhani;2015-05-27 11:12:20 +0200;Merge pull request #983 from ryaanwells/patch-1
Bleeding Edge docs in README
==
==================
418cf73c;Ryan Wells;2015-05-27 10:05:40 +0100;Bleeding Edge docs in README
Added a link to the bleeding edge docs alongside the instructions for installing the bleeding edge code.
==

README.rst
==================
3e9441c9;Erik Bernhardsson;2015-05-26 19:25:33 -0400;Merge pull request #982 from LucaFoschini/patch-1
Update format.py
==
==================
2079dc50;Luca Foschini;2015-05-26 15:53:50 -0700;Update format.py

==

luigi/format.py
==================
4c73249e;Erik Bernhardsson;2015-05-26 18:44:35 -0400;Merge pull request #975 from Tarrasch/remove-python26-stuff
Remove various python 2.6 stuff
==
==================
5642f50c;Arash Rouhani;2015-05-26 20:52:20 +0200;Use keyword arguments for Schedulers
My main motivation for doing this was to rename 'worker' to 'worker_id',
increasing readability.

The other reason is that the test cases and the code in worker.py
becomes easier to follow when we're passing keyword arguments.

==

luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
test/customized_run_test.py
test/worker_parallel_scheduling_test.py
==================
17b255fc;Arash Rouhani;2015-05-26 20:37:34 +0200;Update CONTRIBUTING.rst

==

CONTRIBUTING.rst
==================
3974826f;Erik Bernhardsson;2015-05-26 12:16:02 -0400;Merge pull request #977 from Tarrasch/fix_misquoting
Fix typo in scheduler.py
==
==================
c2e202d6;Doug Daniels;2015-05-26 11:27:56 -0400;Add http version of mortar help site back in to the docs

==

README.rst
==================
33c91c50;Arash Rouhani;2015-05-26 17:11:19 +0200;Fix typo in scheduler.py

==

luigi/scheduler.py
==================
73cefcfe;Arash Rouhani;2015-05-26 15:15:48 +0200;Remove is_global support
Note that we sill support global parameters in the sense that they are
globally assigned (The `--ClassName-param-name param_value` syntax).
However, they don't clutter up the namespace anymore since they are
prepended with the task_family.

==

luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
e5a44096;Arash Rouhani;2015-05-26 14:37:19 +0200;Remove various python 2.6 stuff
Python 2.6 is not supported anymore, but these things were left
lingering around.

==

debian/control
setup.py
test/helpers.py
test/scheduler_visualisation_test.py
==================
3a8fb72f;Arash Rouhani;2015-05-26 12:02:30 +0200;Bump version to prepare for next release
Whenever that release will be. Not sure, isn't there any
SNAPSHOT-concept in the python packaging world?

==

setup.py
==================
a6e5eb1a;Arash Rouhani;2015-05-26 11:53:00 +0200;Release 1.2.1
Whoups, I released the 1.2.0 tag on github and then realized I had
forgot to update this setup.py file.

Note to self: I think the order to release is

 * (i) Update version number in setup.py
 * (ii) pypi (Executing `python setup.py sdist upload`)
 * (iii) Add tag on github (https://github.com/spotify/luigi/releases)
 * (iv) Then bump setup.py, "preparing for next release".

==

setup.py
==================
ac530c6c;Arash Rouhani;2015-05-26 10:57:42 +0200;Merge pull request #974 from spotify/erikbern/tarrasch
Added tarrasch as the chief maintainer
==
==================
2711a11e;Erik Bernhardsson;2015-05-25 13:59:49 -0400;added tarrasch as the chief maintainer

==

README.rst
==================
8bfcfd49;Erik Bernhardsson;2015-05-25 13:51:27 -0400;Merge pull request #968 from Tarrasch/hdfs-fix-config
hdfs.py: Hoist configuration to new config system
==
==================
4131ce48;Erik Bernhardsson;2015-05-25 13:48:15 -0400;Merge pull request #971 from spotify/Tarrasch-patch-2
Create CONTRIBUTING.rst
==
==================
5c419ce1;Erik Bernhardsson;2015-05-25 13:47:10 -0400;Merge pull request #880 from spotify/erikbern/fix-877
Fix #877 by breaking some backwards compatibility
==
==================
4484d473;Erik Bernhardsson;2015-05-25 13:46:45 -0400;Merge pull request #972 from Tarrasch/add-tests-for-namespaces
Add tests for namespaces
==
==================
9b0c8564;Arash Rouhani;2015-05-25 15:09:50 +0200;Add test cases for namespaces and parameters
Currently, that behavior was not tested. We discussed if it actually
works or not in spotify/luigi#880.  Luckily, it seems to work! :)

==

test/helpers.py
test/parameter_test.py
==================
faf71b65;Arash Rouhani;2015-05-25 14:14:31 +0200;Add test helper LuigiTestCase
It's for two reasons as I see it:

    * We don't keep registering and polluting the namespace for each
      added test case.
    * I've been copy pasting run_and_check too many times for it to be
      worth to have as reusable and consistent code.

==

luigi/task_register.py
test/helpers.py
test/helpers_test.py
==================
c2ef921a;Arash Rouhani;2015-05-23 13:19:57 +0200;Create CONTRIBUTING.rst

==

CONTRIBUTING.rst
==================
67f89936;Arash Rouhani;2015-05-22 15:35:35 +0200;Merge pull request #964 from Tarrasch/remove_last_is_global_usage
Remove last is global usage
==
==================
3f24c8d3;Erik Bernhardsson;2015-05-22 07:46:07 -0400;Merge pull request #969 from ryaanwells/patch-1
Documentation: Fixing PyPI Link
==
==================
9b2acdc2;Ryan Wells;2015-05-22 11:15:11 +0100;Fixing PyPI Link
PyPI Luigi link was a local reference that went relative to where the documentation was hosted, not to the PyPI page.
==

README.rst
==================
e296173b;Erik Bernhardsson;2015-05-21 22:18:02 -0400;Merge pull request #967 from spotify/Tarrasch-patch-1
hadoop.py: Narrow exception type
==
==================
ed351ca3;Kyle Sun;2015-05-21 17:23:27 -0700;Add custom error, and use str.format()

==

luigi/contrib/hadoop_jar.py
==================
1090e181;Arash Rouhani;2015-05-21 17:53:19 +0200;hdfs.py: Hoist configuration to new config system
I forgot to hoist these configuration variables to the new configuration
system. This is pretty essential to allow the new flags
--hadoopcli-command and --hadoopcli-version.

==

luigi/contrib/hdfs/config.py
==================
5d68fd98;Arash Rouhani;2015-05-21 10:48:24 +0200;Remove all usages of is_global
Unfortunately, I found no sensible way to keep backwards compatibility
with the `--pool` parameter. It's really unclear why it was global in
the first place, because in many many cases your --task is a subclass of
BaseHadoopJobTask anyway.

I know for a fact that the is_global was (mis)used at Spotify in the
lack of a `positional=False` option.

==

luigi/contrib/hadoop.py
luigi/contrib/spark.py
test/clone_test.py
test/contrib/hadoop_test.py
test/dynamic_import_test.py
==================
5c4aaccd;Arash Rouhani;2015-05-21 16:11:21 +0200;hadoop.py: Narrow exception type
Always better with more accurate exception type
==

luigi/contrib/hadoop.py
==================
494af7a1;Erik Bernhardsson;2015-05-21 09:56:45 -0400;Merge pull request #966 from spotify/Tarrasch-patch-1
Remove mortar data from docs
==
==================
42179587;Arash Rouhani;2015-05-21 15:54:41 +0200;Remove mortar data from docs
It's causing failures for doc build since the link is dead.
==

README.rst
==================
7313c708;Arash Rouhani;2015-05-21 12:27:31 +0200;Add option to make parameters nonpositional
This will be required for removing the is_global parameter without
breaking existing code. In addition, it's a useful feature. In fact, I
wish it was the default from the incarnation of luigi.

==

luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
fc98014a;Erik Bernhardsson;2015-05-21 07:07:57 -0400;Merge pull request #965 from Tarrasch/remove_debug_stuff_from_tox
Don't run `env` from tox.
==
==================
cf7ded2a;Arash Rouhani;2015-05-21 12:45:55 +0200;Don't run `env` from tox.
It was only temporarily added by @erikbern when he was debugging some
random failures (see #953). After this patch, we don't need to see this
anymore:

    WARNING:test command found but not installed in testenv
      cmd: /usr/bin/env
      env: /home/arash/spotify/repos/luigis/github_luigi/.tox/py27-nonhdfs
    Maybe you forgot to specify a dependency? See also the whitelist_externals envconfig setting.
    ...
    USER=arash
    LC_ALL=en_US.utf-8
    PATH=...
    COVERAGE_PROCESS_START=/home/arash/spotify/repos/luigis/github_luigi/.coveragerc

==

tox.ini
==================
560aa8d4;Arash Rouhani;2015-05-21 12:41:08 +0200;Merge pull request #943 from Tarrasch/enable-doctests
Enable doctests
==
==================
f9e71970;Arash Rouhani;2015-05-11 15:51:56 +0200;Fix --with-doctest failures
Based on failures from https://travis-ci.org/spotify/luigi/builds/62044328
and https://travis-ci.org/spotify/luigi/builds/62084223

==

examples/dynamic_requirements.py
examples/foo.py
examples/foo_complex.py
examples/ftp_experiment_outputs.py
examples/spark_als.py
examples/ssh_remote_execution.py
luigi/task.py
==================
29493f69;Arash Rouhani;2015-05-11 10:06:43 +0200;Enable doctests
We currently use doctests at some places like

 * luigi/deprecate_kwarg.py
 * test/helpers.py

And it works out very well for those cases. So I think it's worth having
in some situations.

==

tox.ini
==================
137bede1;Erik Bernhardsson;2015-05-20 12:46:59 -0400;Merge pull request #961 from spotify/erikbern/readme
moved installation instructions to the top
==
==================
fe6e2e3c;Arash Rouhani;2015-05-20 18:15:22 +0200;Merge pull request #959 from Tarrasch/use_argparse
Use argparse for luigid
==
==================
4f5cb79a;Erik Bernhardsson;2015-05-20 10:41:12 -0400;Merge pull request #962 from spotify/erikbern/doc-fixes
Various doc fixes
==
==================
9c2b85a6;Arash Rouhani;2015-05-20 16:35:00 +0200;Merge pull request #960 from Tarrasch/retry-external-tasks-param
Promote retry-external-tasks to new config system
==
==================
2093b427;Arash Rouhani;2015-05-20 09:21:29 +0200;Promote retry-external-tasks to new config system
This basically allows you to also enable it as a command line parameter.
Run `luigi MyTask --worker-retry-external-tasks`.

==

luigi/worker.py
==================
4a737fb2;Erik Bernhardsson;2015-05-20 08:54:54 -0400;also updated some class names in examples/

==

examples/spark_als.py
examples/terasort.py
examples/top_artists.py
examples/wordcount_hadoop.py
==================
3dadd821;Erik Bernhardsson;2015-05-20 08:51:24 -0400;Various doc fixes
Broken links etc

==

doc/command_line.rst
doc/configuration.rst
doc/example_top_artists.rst
doc/execution_model.rst
doc/parameters.rst
doc/tasks.rst
doc/workflows.rst
==================
9120119f;Erik Bernhardsson;2015-05-20 08:26:44 -0400;moved installation instructions to the top, as well as links to documentation and examples

==

README.rst
==================
7742077d;Arash Rouhani;2015-05-20 09:01:40 +0200;Use argparse for luigid
The motivation is simply that argparse is the new and better parser.
Also, argparse is shipped with 2.7 which is the lowest version of python
we support for now.

==

luigi/cmdline.py
==================
9038874a;Kyle Sun;2015-05-19 21:03:45 -0700;Support running a remote hadoop jar command

==

luigi/contrib/hadoop_jar.py
==================
4462cc02;Arash Rouhani;2015-05-20 06:31:02 +0200;Merge pull request #957 from jooon/socket-timeout
Catch socket.timeout in RemoteScheduler to not crash in 2.7 and later
==
==================
fb88da22;Arash Rouhani;2015-05-20 00:20:29 +0200;Merge pull request #958 from Tarrasch/fix-param-parsing
Fix bug where command line Tasks skip config
==
==================
fa17292e;Arash Rouhani;2015-05-18 17:04:57 +0200;Fix bug where command line Tasks skip config
Before this patch, when you run a task from the command line, it'll
ignore the defaults you've specified in the config. By config I mean the
`[MyClass] my_param: myvalue` syntax in `/etc/luigi/client.cfg`.

After this patch, the config is honored.

I also added another small and related fix, the default shown when doing
`--help` will now also honor the config and not only the `default=` value.

==

luigi/parameter.py
test/parameter_test.py
==================
69dfec33;Erik Bernhardsson;2015-05-19 06:40:46 -0400;Merge pull request #956 from Houzz/snakebite_cascading
Snakebite cascading
==
==================
078c893d;Jon Åslund;2015-05-19 11:49:34 +0200;Catch socket.timeout in RemoteScheduler to not crash in 2.7 and later
* timeout is urllib2.URLError in python 2.6 and socket.timeout in 2.7
  and later

==

luigi/rpc.py
==================
e93859ea;Dave Buchfuhrer;2015-05-18 17:02:07 -0700;Adds getmerge to cascading client
This allows getmerge to be called with the snakebite fallback client.

==

luigi/contrib/target.py
==================
41d5257c;Dave Buchfuhrer;2015-05-18 14:46:59 -0700;Fixes error raising in unimplemented snakebite operations.
Several snakebite operations returned an error rather than raising it. This
fixes that issue by raising the error so that these functions don't just
silently fail. The signature of copy is also fixed so that the right error is
thrown.

==

luigi/contrib/hdfs/snakebite_client.py
==================
bc117c55;Arash Rouhani;2015-05-18 17:40:19 +0200;Merge pull request #955 from Tarrasch/fix-build-failures
Pass along HADOOP_HOME from tox
==
==================
14819e88;Arash Rouhani;2015-05-18 16:24:27 +0200;Pass along USER and JAVA_HOME from tox
See #953

==

.travis.yml
tox.ini
==================
c8b2010a;Arash Rouhani;2015-05-18 09:20:31 +0200;Merge pull request #952 from spotify/Tarrasch-patch-1
Test environment: Set encoding to utf8
==
==================
6aacacdf;Erik Bernhardsson;2015-05-17 22:47:40 -0400;print environment variables for debug purposes: issue seems to be that JAVA_HOME isn't set

==

tox.ini
==================
fec2b379;Arash Rouhani;2015-05-15 09:21:37 +0200;Test environment: Set encoding to utf8
This hopefully will make a few more tests pass.

See #951 and https://github.com/gabrielfalcao/HTTPretty/issues/223#issuecomment-102072192
==

tox.ini
==================
af9fc36a;Arash Rouhani;2015-05-13 13:45:38 +0200;Merge pull request #949 from spotify/Tarrasch-patch-1
Update HTTPretty dependency
==
==================
3a2ee95c;Arash Rouhani;2015-05-13 11:31:35 +0200;Update HTTPretty dependency
See discussion in #948
==

test/requirements.txt
==================
d612c053;Arash Rouhani;2015-05-13 10:40:26 +0200;Merge pull request #948 from motherbox/jd-fix-docs
Fix the link to the parameters documentation in the workflows page.
==
==================
a4a3a755;Jaidev Deshpande;2015-05-13 12:50:12 +0530;DOC: Fix link to parameters.rst in workflows.rst

==

doc/workflows.rst
==================
aa7ba82c;Arash Rouhani;2015-05-12 17:46:16 +0200;Merge pull request #920 from hadesbox/d3visualizer
D3visualizer
==
==================
916c9b06;Luis Gonzalez;2015-05-12 09:19:46 +0200;Removing pep8 error: luigi/server.py:217:30: E222 multiple spaces after operator

==

luigi/server.py
==================
69304c76;Luis Gonzalez;2015-05-11 18:13:08 +0200;Adding scheduler class to server.py, to fetch config properties to keep backwards compatibility

==

luigi/scheduler.py
luigi/server.py
==================
8e22c5e7;Arash Rouhani;2015-05-11 17:23:26 +0200;Merge pull request #945 from Tarrasch/clean-travis-config
Clean up .travis.yml
==
==================
b11c5e9c;Arash Rouhani;2015-05-11 16:34:19 +0200;Clean up .travis.yml

==

.travis.yml
==================
3c1c919c;Luis Gonzalez;2015-05-11 16:21:49 +0200;adding link to the graph nodes, so its possible to navigate the graph and see the deps of a particular node (and not the whole tree).

==

luigi/static/visualiser/js/visualiserApp.d3.js
==================
eab3c4c7;Arash Rouhani;2015-05-11 15:27:18 +0200;Merge pull request #939 from 17zuoye/support_json_deserialization
Support DataInterchange with json
==
==================
13e441e3;Arash Rouhani;2015-05-11 15:13:05 +0200;Merge pull request #944 from Tarrasch/introduce-abstract-hdfs-client
Create an abstract hdfs client
==
==================
f2924201;Arash Rouhani;2015-05-11 12:47:36 +0200;Create an abstract hdfs client
Now clearer what client implements what. And we finally get rid of this weird
behaviour that the snakebite client inherits from HdfsClient.

This change kind of pushses for snakebite uses to start using the
snakebite_with_hadoopcli_fallback option, a many important file system
operations have not been ported to snakebite as of yet. But that's good, as that
configuration name better reflects what they actually use.

==

luigi/contrib/hdfs/abstract_client.py
luigi/contrib/hdfs/hadoopcli_clients.py
luigi/contrib/hdfs/snakebite_client.py
==================
3e50457b;Luis Gonzalez;2015-05-11 12:55:08 +0200;Changing edges labels

==

luigi/static/visualiser/js/visualiserApp.d3.js
==================
755064bd;Luis Gonzalez;2015-05-11 12:37:54 +0200;Refactor of all code for new d3 visualization, now if you want to enable d3 graph you need to set in the config visualization_graph in the [core] section either svg (defaults) or d3. This will tell tornado to return as default home either visualization, in any case regarless of this config param value, you can always to either /static/visualiser/index.html or /static/visualiser/index.d3.html in your browser.

==

examples/foo.complex.py
luigi/server.py
luigi/static/visualiser/css/tipsy.css
luigi/static/visualiser/index.d3.html
luigi/static/visualiser/js/dagre-d3.js
luigi/static/visualiser/js/luigi.d3.js
luigi/static/visualiser/js/tipsy.js
luigi/static/visualiser/js/visualiserApp.d3.js
==================
848511f2;Arash Rouhani;2015-05-11 12:01:44 +0200;Merge pull request #942 from Tarrasch/audit-berker-feedback-937
Audit berker feedback 937
==
==================
a70eedaf;Arash Rouhani;2015-05-11 10:00:35 +0200;hdfs: Add stacklevel=2 where appropriate
Audit from #973

==

luigi/contrib/hdfs/hadoopcli_clients.py
==================
bc3245cb;Arash Rouhani;2015-05-11 09:53:40 +0200;hdfs: Use ValueError over Exception on misconfigs
It's always to use a more specific Exception type.

Audit from #973

==

luigi/contrib/hdfs/hadoopcli_clients.py
==================
4c0acee2;Arash Rouhani;2015-05-11 09:51:34 +0200;hdfs: Stylistic fixes
Audit from #973

==

luigi/contrib/hdfs/error.py
luigi/contrib/hdfs/hadoopcli_clients.py
test/minicluster.py
==================
2687e119;Arash Rouhani;2015-05-11 09:47:45 +0200;Merge pull request #937 from Tarrasch/split-up-hdfs-clients
Split up hdfs clients
==
==================
4ee07e6b;Arash Rouhani;2015-05-11 09:47:18 +0200;Merge pull request #938 from Tarrasch/dont-scare-users
CascadingClient: Avoid scary stack trace
==
==================
cae0da52;Arash Rouhani;2015-05-07 14:30:54 +0200;hdfs refactor: Move out HDFSCliError
This is probably the first commit in a while to actually build and pass
tests. I won't remeld my commits to the enormous merge conflict head
ache it would cause.

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hdfs/error.py
luigi/contrib/hdfs/hadoopcli_clients.py
luigi/contrib/hdfs/snakebite_client.py
==================
82639ab2;Arash Rouhani;2015-05-07 14:23:25 +0200;hdfs refactor: Move out HdfsClient

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hdfs/hadoopcli_clients.py
luigi/contrib/hdfs/snakebite_client.py
test/contrib/hdfs_test.py
==================
67cc1cc3;Arash Rouhani;2015-05-07 10:45:25 +0200;Snakebite: Clean out __init__ logic
The raised exception didn't make any sense in that context. I assume it
was left over from previous refactorings.

==

luigi/contrib/hdfs/snakebite_client.py
==================
0aae4901;Arash Rouhani;2015-05-07 10:40:00 +0200;Don't make SnakebiteClient fallback to HdfsClient
This feature is already implemented and have been running in production
for years and is tested. See get_autoconfig_client.

The feature removed in this commit is a bit weird and untested behavior.
It also only works on import errors. Which will make your code behave
differntly when run from different environments.

==

luigi/contrib/hdfs/snakebite_client.py
==================
677ebe67;Arash Rouhani;2015-05-07 10:33:48 +0200;Move out SnakebiteClient author notice
It's not that relevent to see who the original author is for the class
docstring.

==

luigi/contrib/hdfs/snakebite_client.py
==================
52c8bf2a;Arash Rouhani;2015-05-07 10:31:34 +0200;hdfs refactor: Move out SnakebiteClient

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
luigi/contrib/hdfs/snakebite_client.py
==================
29165450;Arash Rouhani;2015-05-07 15:03:56 +0200;Don't mock load_hadoop_cmd, fixing a TODO

==

test/minicluster.py
==================
6d8a0ce6;Arash Rouhani;2015-05-08 21:34:35 +0200;Merge pull request #940 from Tarrasch/make_with_config_stackable
Make @with_config stackable
==
==================
00f27e34;David Chen;2015-05-08 22:43:49 +0800;Provide a more quicker json tool

==

luigi/contrib/hadoop.py
==================
5bbc0edd;David Chen;2015-05-08 22:03:50 +0800;Add test for DataInterchange, and compact with normal way.

==

luigi/contrib/hadoop.py
test/contrib/hadoop_test.py
==================
755869f1;Arash Rouhani;2015-05-07 16:59:42 +0200;testing: Make with_config decorator stackable
Previously, with_config would override all other overrides that had been
made by other testing code. Causing failures like those in
https://travis-ci.org/spotify/luigi/jobs/61614910

==

test/helpers.py
==================
23798294;David Chen;2015-05-08 17:35:09 +0800;Add DataInterchange support with json; thx @Tarrasch for the idea that treat formats as a dict

==

.gitignore
.travis.yml
luigi/contrib/hadoop.py
luigi/hadoop.py
setup.py
test/contrib/hadoop_test.py
test/requirements.txt
==================
23636b56;Arash Rouhani;2015-05-08 10:26:20 +0200;Merge pull request #932 from Tarrasch/fix-deps-py
Fix deps py
==
==================
f758b035;Arash Rouhani;2015-05-07 18:11:59 +0200;CascadingClient: Avoid scary stack trace
The idea is that most users react to stack traces. The very common
scenario for the CascadingClient is that it's totally fine for the
non-last clients in the cascading chain to fail. So when there's an
error, they are likely to get blind by this actually harmless stack
trace.

==

luigi/contrib/target.py
==================
d987e1ee;Arash Rouhani;2015-05-07 11:27:41 +0200;Merge pull request #934 from Tarrasch/remove-26-support
Drop python 2.6 support
==
==================
9ee0191c;Arash Rouhani;2015-05-07 10:49:48 +0200;Merge pull request #935 from Tarrasch/localize-hdfs-methods
Localize hdfs methods
==
==================
4855ee39;Arash Rouhani;2015-05-06 17:55:22 +0200;hdfs: Localize HdfsClient.call_check
Again to simplify later refactorings

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
test/contrib/hdfs_test.py
==================
69bd225e;Arash Rouhani;2015-05-06 16:44:18 +0200;hdfs: Localize SnakebiteHdfsClient.list_path
Just trying to localize code as much as possible, to make refactoring
easier.

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
==================
d1601231;Arash Rouhani;2015-05-04 17:51:39 +0200;deps.py: Don't use global parameters
Since deps.py is a interactive tool, we don't need any deprecation
notice.

==

luigi/tools/deps.py
==================
37d3881f;Arash Rouhani;2015-05-04 16:50:35 +0200;deps.py: Look at task_family, not class name
This fixes so you now must pass the upstream parameter like this:

        --upstream my_namespace.MyTask

In contrast to the ambigious:

        --upstream MyTask

==

luigi/tools/deps.py
==================
cc7aed92;Arash Rouhani;2015-05-04 16:05:12 +0200;Minor doc fix
I dislike unnecessary abbreviations

==

luigi/tools/deps.py
==================
7b3fb1ad;Arash Rouhani;2015-05-05 17:40:21 +0200;Drop python 2.6 support
See this email thread as well:

https://groups.google.com/forum/#!topic/luigi-user/X8YA_JpQ8dQ

==

.travis.yml
debian/control
tox.ini
==================
a8febc07;Arash Rouhani;2015-05-05 12:46:09 +0200;Merge pull request #933 from Tarrasch/refactor-hdfs-py-5
hdfs.py refactoring: Clean up documentation
==
==================
b950e817;Arash Rouhani;2015-05-05 11:52:55 +0200;hdfs.py refactoring: Clean up documentation
As @ulzha commented on in #930

==

luigi/contrib/hdfs/__init__.py
==================
36caf251;Arash Rouhani;2015-05-05 11:54:43 +0200;Merge pull request #930 from Tarrasch/refactor-hdfs-py-4
More hdfs.py refactoring
==
==================
e5bfc8de;Erik Bernhardsson;2015-05-04 11:48:18 -0400;Merge pull request #931 from edkurowski/add_connect_args
Add ability to pass in connect_args to sql alchemy.
==
==================
119ba2e7;Arash Rouhani;2015-05-04 14:42:47 +0200;hdfs.py refactoring: Add heads-up for changing API

==

luigi/contrib/hdfs/__init__.py
==================
6e3f70ff;Arash Rouhani;2015-05-04 14:28:55 +0200;hdfs.py refactoring: Re-export hdfs.config as well
This will fix the test failures I saw in #930. This should have actually
been amended into the commit in #929 but that's merged already.

==

luigi/contrib/hdfs/__init__.py
==================
af75ee17;Arash Rouhani;2015-04-30 17:33:15 +0200;hdfs.py refactoring: Move out target

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/target.py
==================
b265f92f;Arash Rouhani;2015-04-30 17:09:57 +0200;hdfs.py refactoring: Move out clients

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/clients.py
test/contrib/hdfs_test.py
test/minicluster.py
==================
af19a0de;Arash Rouhani;2015-04-30 17:19:02 +0200;hdfs.py refactoring: Move out format
(Ok, I cheated a bit, the tests will fail for this commit)

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/format.py
==================
63dc8569;Ed Kurowski;2015-05-01 13:35:06 -0400;Add ability to pass in connect_args to sql alchemy.

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
fc14c060;Erik Bernhardsson;2015-05-03 13:36:09 -0400;Merge pull request #895 from kutschkem/kutschkem-patch-sshpass
add option to RemoteTarget to use sshpass
==
==================
7c1e0657;Erik Bernhardsson;2015-05-03 13:35:46 -0400;Merge pull request #927 from iralls/scp_forwardagent
adding ForwardAgent=yes for scp
==
==================
1ad734fe;Arash Rouhani;2015-04-30 16:57:22 +0200;Merge pull request #929 from Tarrasch/refactor-hdfs-py-3
hdfs.py refactoring: Move out configuration
==
==================
4c81e681;Arash Rouhani;2015-04-30 11:52:13 +0200;hdfs.py refactoring: Move out configuration
By putting it in a seperate file, it's easier to refactor the rest of
contents of that file.

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/hdfs/config.py
test/contrib/hdfs_test.py
==================
e158b42b;Arash Rouhani;2015-04-30 11:57:42 +0200;Merge pull request #928 from Tarrasch/refactor-hdfs-py-2
HdfsTarget: Use self.fs.<cmd> rather than <cmd>
==
==================
7621ca31;Arash Rouhani;2015-04-30 11:21:06 +0200;HdfsTarget: Use self.fs.<cmd> rather than <cmd>
I would consider this a bug fix that the HdfsTarget ignores the passed
`fs` parameter for half of it's invocations. But the actual reason I'm
writing this patch is to decouple this so I can refactor easier.

==

luigi/contrib/hdfs/__init__.py
==================
4e5ab9c2;Arash Rouhani;2015-04-30 10:51:22 +0200;Merge pull request #926 from Tarrasch/refactor-hdfs-py
Refactor hdfs py
==
==================
39f4d644;Arash Rouhani;2015-04-29 17:23:00 +0200;Refactor HdfsTarget.is_writable
The reason I touch this probably mostly unused and untested function is
that it relies on load_hadoop_cmd(), which make HdfsTarget harder to
move out into a seperate file and refactor.

==

luigi/contrib/hdfs/__init__.py
luigi/contrib/target.py
==================
ce002a6a;Arash Rouhani;2015-04-29 21:54:36 +0200;Merge pull request #924 from boosh/master
Make the hard-timeout tests more forgiving
==
==================
e8dc0283;iralls;2015-04-29 15:43:36 -0400;adding ForwardAgent=yes for scp between remote machines
Very basic addition to allow for scp between two remote machines if ssh-agent key forwarding is setup. A little bit of a hack, but works.

you can pass the full host:file path as your "local_path" when using put(), rather than the path to the physically local file.
ex:

RemoteFileSystem(
    "somehost",
    ...,
    no_host_key_check=True
).put("myuser@host1:/tmp/file", "/tmp/file")

Might be good to eventually allow for many ssh_config values to be passed in a list

[
  "StrictHostKeyChecking=no",
  "UserKnownHostsFile=/dev/null", 
  "ForwardAgent=yes",
  ...
]
==

luigi/contrib/ssh.py
==================
ace221c6;Erik Bernhardsson;2015-04-29 14:13:03 -0400;Merge pull request #925 from Tarrasch/use-contrib-hadoop
Use contrib of luigi.hadoop in tests
==
==================
07b73065;Arash Rouhani;2015-04-29 15:48:57 +0200;Use contrib of luigi.hadoop in tests
Fixing the deprecation warnings I just added in recent commits.

==

test/contrib/hadoop_test.py
==================
27974b05;Arash Rouhani;2015-04-29 15:58:31 +0200;Make hdfs.py into a module

==

luigi/contrib/hdfs/__init__.py
setup.py
==================
24fc39f2;Arash Rouhani;2015-04-29 16:52:17 +0200;Merge pull request #914 from Tarrasch/move-hdfs-to-contrib
Move luigi.hdfs to contrib
==
==================
0042b328;Erik Bernhardsson;2015-04-29 10:22:40 -0400;Merge pull request #872 from tomquisel/master
Eliminate busy wait, fixing 100% CPU usage.
==
==================
8a66d81a;Boosh;2015-04-29 14:51:37 +0100;Make the hard-timeout tests more forgiving

==

test/central_planner_test.py
==================
66e0fbc9;Arash Rouhani;2015-04-29 15:17:45 +0200;Merge pull request #923 from gpoulin/disable_test_for_rpc
Disable tests that are failing with rpc
==
==================
1d7ed4a9;Arash Rouhani;2015-04-28 16:40:34 +0200;Move luigi.hdfs to contrib and change imports
The change to test/minicluster.py is a terrible hack. But I'll have to
fix that in a later commit.

Changing the imports happen in this commit as well, otherwise the mock
magic in some of the tests do not work.

==

luigi/contrib/hadoop.py
luigi/contrib/hadoop_jar.py
luigi/contrib/hdfs.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
luigi/hdfs.py
luigi/target.py
test/contrib/hadoop_test.py
test/contrib/hdfs_test.py
test/contrib/spark_test.py
test/minicluster.py
test/snakebite_test.py
==================
9b3ba922;Guillaume Poulin;2015-04-29 09:06:05 -0400;Disable tests that are failing with rpc

==

test/rpc_test.py
==================
c2d4e496;Arash Rouhani;2015-04-29 14:51:25 +0200;Merge pull request #921 from gpoulin/import_db_task_py3k
Fix db_task_import with python 3
==
==================
b28838b1;Guillaume Poulin;2015-04-29 08:21:35 -0400;Fix db_task_import with python 3
Fix #919

==

luigi/scheduler.py
==================
48acacd9;Arash Rouhani;2015-04-29 14:18:50 +0200;Merge pull request #917 from stephenpascoe/master
Skip DbTaskHistory test when is not MySQL
==
==================
7cb356d1;Arash Rouhani;2015-04-29 14:16:09 +0200;Merge pull request #908 from gpoulin/non_ascii_cli
Allow non-ascii character in CLI
==
==================
251a7231;Stephen Pascoe;2015-04-29 10:05:20 +0100;Handle lack of mysql on travis without failing.

==

.travis.yml
==================
b606d765;Arash Rouhani;2015-04-29 10:37:59 +0200;Merge pull request #918 from Tarrasch/fix_pep8_issues
Fix pep8 issues
==
==================
3670b4fc;Arash Rouhani;2015-04-29 10:36:54 +0200;Fix pep8 issues
I misunderstood the travis results from #916 a bit, and it seemed like
@boosh was pretty tired of tidying up his patch. :)

==

luigi/scheduler.py
test/central_planner_test.py
==================
1a846064;Arash Rouhani;2015-04-29 10:27:35 +0200;Merge pull request #916 from boosh/hard-timeout-2
Add a hard timeout for tasks
==
==================
6a8c366e;Stephen Pascoe;2015-04-29 09:25:26 +0100;Skip DbTaskHistory test which is dependent on MySQL if MySQL is not available.

==

test/db_task_history_test.py
==================
4798f30f;Al B;2015-04-28 17:38:53 +0100;Add a hard timeout for tasks

==

doc/configuration.rst
luigi/scheduler.py
test/central_planner_test.py
==================
e6c48b04;Arash Rouhani;2015-04-28 18:03:08 +0200;Merge pull request #912 from Tarrasch/move-hadoop-to-contrib
Move hadoop to contrib
==
==================
6c491e42;Arash Rouhani;2015-04-28 12:09:03 +0200;Import luigi.contrib.hadoop*, not luigi.hadoop*
Otherwise you'll get the deprecation warning no matter what.

==

README.rst
examples/terasort.py
examples/top_artists.py
examples/wordcount_hadoop.py
luigi/contrib/hadoop.py
luigi/contrib/hadoop_jar.py
luigi/contrib/hive.py
luigi/contrib/scalding.py
test/contrib/hive_test.py
test/contrib/scalding_test.py
test/customized_run_test.py
==================
6d6ac65d;Arash Rouhani;2015-04-28 11:51:05 +0200;Fix spelling error

==

luigi/contrib/scalding.py
==================
77feedad;Arash Rouhani;2015-04-28 10:57:30 +0200;Move luigi.hadoop to contrib

==

luigi/contrib/hadoop.py
luigi/hadoop.py
test/contrib/hadoop_test.py
==================
0878cf7d;Arash Rouhani;2015-04-28 10:46:17 +0200;Move luigi.hadoop_jar to contrib

==

luigi/contrib/hadoop_jar.py
luigi/hadoop_jar.py
==================
02153a5e;Arash Rouhani;2015-04-28 13:41:04 +0200;Merge pull request #913 from Tarrasch/add-to-gitignore
Add to .gitignore
==
==================
ce972462;Arash Rouhani;2015-04-28 11:46:18 +0200;Add to .gitignore
When running `tox docs`, a lot of documentation files are created and
not cleaned up.

==

.gitignore
==================
07620da7;Erik Bernhardsson;2015-04-24 14:48:54 -0400;Merge pull request #903 from Houzz/vis_filter_refresh
Enables searching within groups too large to display in the visualiser
==
==================
5a89ea47;Arash Rouhani;2015-04-24 17:32:20 +0200;Merge pull request #909 from stephenpascoe/history-subsecond-timestamp
History subsecond timestamp. Fixes #905
==
==================
3690c293;Stephen Pascoe;2015-04-24 10:54:45 +0100;Fixed issue serialising task_history timestamps in server.from_utc()
py3 compatibility fix

==

luigi/server.py
test/db_task_history_test.py
test/requirements.txt
==================
75815fb7;Stephen Pascoe;2015-04-23 09:22:59 +0100;Order task_events by timestamp and PK to work-arround lack of sub-second accuracy in MySQL.
MySQL's TIMESTAMP(6) syntax is only supported >v5.6 which is too new for travis.  This solution should work with existing systems.

==

.travis.yml
luigi/db_task_history.py
test/db_task_history_test.py
test/requirements.txt
tox.ini
==================
242caeef;Guillaume Poulin;2015-04-23 13:00:04 -0400;Allow non-ascii character in CLI
Fix #901

==

luigi/lock.py
test/lock_test.py
==================
c132aa15;Erik Bernhardsson;2015-04-23 11:44:02 -0400;Merge pull request #907 from Tarrasch/add_more_param_tests
Add more tests to test/parameter_test.py
==
==================
64f65d2d;Arash Rouhani;2015-04-23 15:36:02 +0200;Add more tests to test/parameter_test.py
Nothing special.  I just played around with the new parameter system and
thought that I had found a bug.  Luckily I found out that I was wrong
but at least I produced some tests I think are worth contributing.

==

test/parameter_test.py
==================
96e32c8b;Erik Bernhardsson;2015-04-22 08:30:02 -0400;Merge pull request #904 from Houzz/jquery_filter_escape
Escapes search queries for the jquery selector in the visualiser.
==
==================
4b49295c;Dave Buchfuhrer;2015-04-21 13:46:14 -0700;Allows searching within too large task groups in the visualiser.
The visualiser does not display task groups larger than a configurable limit in
order to preserve functionality when the data is too large for the browser. This
can be very frustrating when you need to know about tasks that are in one of the
groups that is not displayed. In order to preserve access to this information,
search queries are now sent to the server so that if the query filters down a
group to a more manageable size, the results can be shown.

In order to decrease latency, server requests are only made for groups that were
originally too large to be fully displayed, and are not updated if the last
server query used a prefix of the original query and returned a result list. In
this case, we can just filter the existing results on the client side.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
cff0886b;Dave Buchfuhrer;2015-04-20 15:49:26 -0700;Adds an optional search filter to task_list
This allows search queries to be sent along with a task_list request. Tasks are
filtered such that only those matching all terms in the query are returned. This
allows for server-side search filtering in the visualiser.

==

luigi/rpc.py
luigi/scheduler.py
test/central_planner_test.py
==================
29e5e453;Dave Buchfuhrer;2015-04-21 13:46:56 -0700;Escapes search queries for the jquery selector in the visualiser.
Search queries in the visualiser have been passed into jquery selectors
unmodified, leading to errors when they include special characters. This
corrects the errors by escaping all special characters.

==

luigi/static/visualiser/js/visualiserApp.js
==================
1f2c57ab;Michael Kutschke;2015-04-16 11:39:55 +0200;Add option to RemoteTarget to use sshpass
Add support for password-based SSH via sshpass

==

luigi/contrib/ssh.py
==================
84c88b87;Arash Rouhani;2015-04-21 09:56:07 +0200;Merge pull request #902 from nzlinus/fix-896
Fix #896: make table_exists case insensitive
==
==================
e2be9712;lin;2015-04-20 17:38:01 -0700;Fix #896: make table_exists case insensitive
Check stdout against table.lower() to avoid case issues

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
e37cb0ea;Erik Bernhardsson;2015-04-20 08:46:39 -0400;Merge pull request #893 from kutschkem/kutschkem-patch-891-pathseparator
do not normalize remote path in RemoteFileSystem
==
==================
3456c914;Erik Bernhardsson;2015-04-20 08:45:01 -0400;Merge pull request #898 from Houzz/ssh_no_host_check
Add an option to ssh to skip host key check
==
==================
e8835a23;Kyle Sun;2015-04-19 20:17:15 -0700;Switch named args to ssh options
Conflicts:

	luigi/contrib/ssh.py

==

luigi/contrib/ssh.py
==================
8b07bae2;Erik Bernhardsson;2015-04-19 14:10:11 -0400;Merge pull request #899 from Houzz/fix_mapred_name
add double quote on mapred.job.name
==
==================
5a2e0d7b;Kyle Sun;2015-04-19 01:38:03 -0700;add double quote on mapred.job.name
so it won't break when there is space in self.task_id

==

luigi/hadoop.py
==================
4e41ab54;Kyle Sun;2015-04-19 01:37:39 -0700;Add an option to ssh to skip host key check
Conflicts:

	luigi/contrib/ssh.py

==

luigi/contrib/ssh.py
==================
53ae7dd4;Erik Bernhardsson;2015-04-17 08:35:40 -0400;Merge pull request #897 from Houzz/undeps
remove deps in _serialize_task() when unnecessary
==
==================
60c9699b;Michael Kutschke;2015-04-16 09:56:21 +0200;Fix for #891: Normalize remote paths with posixpath
On Windows clients, RemoteFileSystem normalizes paths
Windows-style. This leads to wrong path names on the remote
Linux side. Explicitly using posixpath.normpath instead of
os.path.normpath fixes the problem.

==

luigi/contrib/ssh.py
==================
b8edea86;Kyle Sun;2015-04-16 15:43:38 -0700;remove deps when unnecessary
also add test

==

luigi/scheduler.py
test/central_planner_test.py
==================
75c824b1;Erik Bernhardsson;2015-04-16 07:25:24 -0400;Merge pull request #894 from kutschkem/kutschkem-patch-remotetarget-directory
Make RemoteFileSystem work with directory targets
==
==================
e81306be;Michael Kutschke;2015-04-16 09:48:08 +0200;Make RemoteFileSystem work with directory targets
RemoteTarget.put/get currently only support single files. This patch makes it work for directories, too.
==

luigi/contrib/ssh.py
==================
09518665;Tom Quisel;2015-04-15 12:48:17 -0700;Fix test to replace Popen.wait, not Popen.poll

==

test/contrib/spark_test.py
==================
19f837e7;Arash Rouhani;2015-04-15 14:45:33 +0200;Merge pull request #890 from Tarrasch/remove_fail_if_exists
Replace fail_if_exists with raise_if_exists
==
==================
a432f9ab;Arash Rouhani;2015-04-15 14:45:22 +0200;Merge pull request #889 from Tarrasch/hdfs_py_refactoring
Hdfs py refactoring
==
==================
dc061707;Erik Bernhardsson;2015-04-15 06:49:04 -0400;Merge pull request #888 from Tarrasch/print_hadoop_cmd
Print out hadoop cmd before running
==
==================
c886c5a0;Arash Rouhani;2015-04-15 11:49:00 +0200;Replace fail_if_exists with raise_if_exists
The `fail_if_exists` keyword have been deprecated for a while now.

==

luigi/file.py
luigi/hdfs.py
luigi/mock.py
==================
81878d6e;Arash Rouhani;2015-04-15 11:44:51 +0200;Remove deprecated hdfs->use_snakebite config
It have been deprecated for a while now and is superseded by using
hdfs->client.

==

doc/configuration.rst
luigi/hdfs.py
==================
dc64b2b0;Arash Rouhani;2015-04-15 11:40:38 +0200;Add test case for unspecified hdfs-client
I plan to remove some old code in hdfs.py and start using the new
configuration system in luigi.

==

test/hdfs_test.py
test/helpers.py
==================
da109b4e;Arash Rouhani;2015-04-15 10:36:45 +0200;Print out hadoop cmd before running
By increasing the verbosity, you can trace where you program hangs.

==

luigi/hadoop.py
==================
71e46030;Erik Bernhardsson;2015-04-13 07:38:26 -0400;Merge pull request #883 from themalkolm/add-port-kwarg-to-remote-target
Add port kwarg to RemoteTarget.
==
==================
b7a3af1c;Alexander Krasnukhin;2015-04-12 23:43:40 +0200;Add port kwarg to RemoteTarget.
Allow user to specify a custom port for ssh connections. Sometimes
people do expose ssh on other ports.

Fix #876

==

luigi/contrib/ssh.py
==================
96867bf7;Erik Bernhardsson;2015-04-11 15:28:26 -0400;Merge pull request #882 from spotify/erikbern/merge-taskprocess-externaltaskprocess
Merge TaskProcess and ExternalTaskProcess
==
==================
d06a8d45;Erik Bernhardsson;2015-04-10 21:34:09 -0400;Merge TaskProcess and ExternalTaskProcess

==

luigi/worker.py
==================
2898a2d2;Erik Bernhardsson;2015-04-10 20:47:19 -0400;Fix #877 by breaking some backwards compatibility

==

luigi/task_register.py
test/cmdline_test.py
test/task_test.py
==================
6e4ac5b0;Erik Bernhardsson;2015-04-10 20:23:43 -0400;Merge pull request #879 from sgottschalk/master
Fix bug with history page when connecting to a postgres DB
==
==================
247df3cf;sgottschalk;2015-04-10 11:26:21 -0700;Fix bug with retrieving task history when connecting to a postgres db, trying to order by a field not declared in the group by clause or select aggregation

==

luigi/db_task_history.py
==================
07efdd91;Erik Bernhardsson;2015-04-06 06:10:51 -0400;Merge pull request #875 from ystopia/foo
Adding original template files & Correcting a lib path & Commenting a copyright
==
==================
a0f73452;Erik Bernhardsson;2015-04-04 11:25:37 -0400;Merge pull request #874 from Houzz/run_only_in_assistants
Allow for workflows in which the assistant is the only long-term worker
==
==================
a7ed3655;Dave Buchfuhrer;2015-04-02 16:24:38 -0700;Support for scheduling with 0 workers
If we schedule a worker with --workers 0, it should schedule all of its tasks
and then die. This fixes a bug in the previous behavior in which the worker
would live forever in an infinite loop by bypassing the run call.

==

luigi/interface.py
test/worker_test.py
==================
e019ac5d;Dave Buchfuhrer;2015-04-02 16:02:47 -0700;Keeps a minimal set of tasks alive for assistants
With an assistant, we don't want tasks with no workers to die but we also don't
want to continuously accumulate tasks that we don't need in the scheduler
anymore. This prevents pruning of tasks without stakeholders unless they are
were scheduled as DISABLED or DONE and are not needed by any tasks that are or
will be runnable. This prevents accumulation without reducing functionality.

==

luigi/scheduler.py
test/central_planner_test.py
==================
6b3f11b3;ystopia;2015-04-03 16:32:28 +0900;Merge remote-tracking branch 'upstream/master'

==
==================
9a652760;ystopia;2015-04-03 15:15:15 +0900;1. added copyright & author & description info to the db_task_history.py 2. readded three template files 3. modified the bootstrap lib path in layout.html

==

luigi/db_task_history.py
luigi/templates/header.html
luigi/templates/layout.html
luigi/templates/recent.html
luigi/templates/show.html
==================
4266aa53;Erik Bernhardsson;2015-04-02 08:25:30 -0400;Merge pull request #783 from ystopia/master
Understand changes of running-time for each task
==
==================
4e4979b4;ystopia;2015-04-01 15:08:15 +0900;Merge remote-tracking branch 'upstream/master'
Conflicts:
	luigi/server.py

==
==================
78235344;ystopia;2015-02-24 15:37:09 +0900;added codes for visualization of how long each task takes running-time until it reaches the next status (failed or done)
added new files for visualization of how long each task takes running-time until it reaches the next status (failed or done)

fixed Travis CI errors

comments added to htmls

deleted unrelated html files

connected db using sqlalchemy orm in db_task_history.py
inherited from BaseTaskHistoryHandler(self._scheduler.task_history) in server.py
commented for explanation

fixed pep8 errors

trimmed out an unnecessary library

deleted an unrelated html file

changed library paths to their web links

==

luigi/db_task_history.py
luigi/server.py
luigi/templates/header.html
luigi/templates/history.html
luigi/templates/layout.html
luigi/templates/menu.html
luigi/templates/recent.html
luigi/templates/show.html
==================
83f9c8c2;Erik Bernhardsson;2015-03-30 23:10:57 -0400;Merge pull request #870 from spotify/erikbern/worker-cleanup-2
Misc cleanup of Worker
==
==================
4dbd0d67;Erik Bernhardsson;2015-03-30 23:10:48 -0400;Merge pull request #871 from Houzz/ignore_upstream_disabled
Does not consider upstream disabled jobs as pending for worker keep-aliv...
==
==================
8ca37922;Tom Quisel;2015-03-30 22:18:22 +0000;Eliminate busy wait, fixing 100% CPU usage.
Also remove unecessary communicate() call. It just prints "None" to the
log.

==

luigi/contrib/spark.py
==================
d752007d;Dave Buchfuhrer;2015-03-30 13:22:07 -0700;Does not consider upstream disabled jobs as pending for worker keep-alive
If you schedule a worker with a pending task that depends on a disabled task and
have worker-keep-alive set to true, the worker will stay alive forever waiting
for a pending task that can never be scheduled. This updates the get_work
response not consider upstream disabled jobs as pending so that workers can die
once all potentially runnable jobs are complete.

==

luigi/scheduler.py
test/central_planner_test.py
==================
de4df603;Erik Bernhardsson;2015-03-26 10:10:11 -0400;moved callback test to a more consistent file name

==

test/event_callbacks_test.py
==================
f1e3fb48;Erik Bernhardsson;2015-03-26 09:54:22 -0400;Fixed a bug with event callbacks - the success callback was called even if the job failed Added a test for it as well.
Changed the behavior so that the processing time callback isn't called if the task fails. Hope this doesn't break anything

Ended up cleaning up a bunch of stuff in luigi.worker as well

==

luigi/worker.py
test/test_event_callbacks.py
==================
97fa4afe;Erik Bernhardsson;2015-03-26 08:51:32 -0400;Merge pull request #867 from spotify/erikbern/worker-cleanup
Worker cleanup (WIP)
==
==================
eb6d85a1;Erik Bernhardsson;2015-03-24 08:41:17 -0400;factored out the generator loop into its own method

==

luigi/worker.py
==================
bdbf1233;Erik Bernhardsson;2015-03-24 08:22:38 -0400;unified logic when task is done

==

luigi/worker.py
==================
e6b238f3;Erik Bernhardsson;2015-03-24 08:14:52 -0400;minor cleanup

==

luigi/worker.py
==================
a7131200;Erik Bernhardsson;2015-03-23 23:02:21 -0400;removed seemingly superfluous statement

==

luigi/worker.py
==================
6da30dc2;Erik Bernhardsson;2015-03-23 07:33:59 -0400;Merge pull request #865 from spotify/erikbern/param-cleanup
Various param cleanup
==
==================
037a9095;Erik Bernhardsson;2015-03-23 07:33:31 -0400;Merge pull request #864 from tomquisel/master
More flexible ES config, also don't call docs() 2x
==
==================
d2a98fec;Erik Bernhardsson;2015-03-23 07:32:32 -0400;Merge pull request #820 from stephenpascoe/master
Allow the scheduler client to contact a scheduler at a non-root URL prefix
==
==================
2bd39874;Erik Bernhardsson;2015-03-22 16:36:56 -0400;Merge pull request #856 from jthi3rry/pyspark-conf
SparkConf setup for PySparkTask
==
==================
0776cf39;Erik Bernhardsson;2015-03-22 15:44:13 -0400;Removed ConfigWithoutSection

==

luigi/__init__.py
luigi/interface.py
luigi/task.py
luigi/task_register.py
test/parameter_test.py
==================
e14aaa68;Erik Bernhardsson;2015-03-22 14:56:13 -0400;removed some unncessary stuff in task_register.py

==

luigi/task_register.py
==================
fc09824a;Erik Bernhardsson;2015-03-22 13:14:01 -0400;Allow the use of dashes in the config names
(but throw a warning saying you should use underscores)

==

luigi/interface.py
luigi/parameter.py
luigi/scheduler.py
test/parameter_test.py
==================
f6075cd9;Tom Quisel;2015-03-21 00:33:44 +0000;More flexible ES config, also don't call docs() 2x

==

luigi/contrib/esindex.py
==================
3b9387c5;Stephen Pascoe;2015-03-20 11:56:34 +0000;Merge remote-tracking branch 'origin/master'
Conflicts:
	luigi/rpc.py

==
==================
56067409;Erik Bernhardsson;2015-03-19 21:46:21 -0400;Merge pull request #863 from spotify/erikbern/avoid-circular-import
avoiding some circular imports
==
==================
304b8a86;Erik Bernhardsson;2015-03-19 20:54:41 -0400;avoiding some circular imports

==

luigi/interface.py
luigi/task_register.py
luigi/worker.py
==================
5ea1177e;Erik Bernhardsson;2015-03-18 23:41:54 -0400;Merge pull request #860 from spotify/erikbern/worker-cleanup
worker cleanup
==
==================
6a25aba4;Erik Bernhardsson;2015-03-18 23:41:38 -0400;Merge pull request #862 from Houzz/assistant_external
Prevents non-runnable tasks from going to assistants
==
==================
b6d588d9;Erik Bernhardsson;2015-03-18 23:40:40 -0400;Merge pull request #861 from Houzz/assistant_stakeholders
Keeps assistants from becoming stakeholders
==
==================
c0857e9e;Dave Buchfuhrer;2015-03-18 15:49:37 -0700;Prevents non-runnable tasks from going to assistants
I was seeing a lot of errors from assistants trying to run external tasks and
being unable to even find and load the class. It turns out assistants were
being treated as potential workers even by tasks with no workers. As a partial
fix, assistants can now only work on tasks that some worker is capable of.

This fix is great for workflows where external tasks only exist to check that
non-luigi jobs are complete, but won't work for tasks that are external to the
assistant but not to all workers.

==

luigi/scheduler.py
test/central_planner_test.py
==================
1ba82576;Dave Buchfuhrer;2015-03-16 16:49:08 -0700;Keeps assistants from becoming stakeholders
If assistants live longer than other workers, we don't want them to keep tasks
alive unnecessarily. By preventing assistants from becoming stakeholders of
tasks they're working on, pruning of tasks done by the assistant is allowed when
the workers that actually scheduled them go away.

==

luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
==================
270061b8;Thierry Jossermoz;2015-03-17 20:22:37 +1300;Allow configuring SparkConf prior to instantiating SparkContext
Log spark-submit stdout on task success

==

luigi/contrib/pyspark_runner.py
luigi/contrib/spark.py
test/contrib/spark_test.py
==================
1f18b306;Erik Bernhardsson;2015-03-18 08:03:36 -0400;removed some backwards compatibility support

==

luigi/worker.py
test/worker_multiprocess_test.py
==================
0e6bec4d;Erik Bernhardsson;2015-03-18 07:46:05 -0400;moved out worker config to its own Config object
This will make it possible to set values over command line.

Later we should also remove the config_paths and also move some of the config from luigi.interface to luigi.worker

==

luigi/worker.py
test/worker_test.py
==================
acd08889;Erik Bernhardsson;2015-03-18 07:39:06 -0400;use a with-statement to acquire fork_lock

==

luigi/worker.py
==================
93425bdf;Erik Bernhardsson;2015-03-18 07:33:37 -0400;breaking out KeepAliveThread from local scope

==

luigi/worker.py
==================
554850f3;Erik;2015-03-17 20:51:46 -0400;bumped version to 1.1.3 for next release

==

setup.py
==================
6c2c82e9;Erik Bernhardsson;2015-03-17 20:08:23 -0400;Merge pull request #858 from spotify/erikbern/fix-857
Fix for #857 - unhashable types in constructor throwing an error msg
==
==================
027ac3fb;Erik;2015-03-17 19:35:52 -0400;Fix for #857 - unhashable types in constructor throwing an error msg

==

luigi/task_register.py
test/instance_test.py
==================
7233a0cc;Erik Bernhardsson;2015-03-16 09:03:07 -0400;1.1.2 in master from now on

==

setup.py
==================
be728d82;Erik Bernhardsson;2015-03-16 08:45:06 -0400;Merge pull request #855 from spotify/erikbern/cmdline-2
more test for command line integration
==
==================
a36cf7e4;Erik Bernhardsson;2015-03-15 01:00:14 -0400;more test for command line integration
in particular look at --help and see if it works

==

luigi/interface.py
luigi/parameter.py
test/cmdline_test.py
==================
777b0cd2;Erik Bernhardsson;2015-03-15 10:14:30 -0400;Merge pull request #853 from spotify/erikbern/task-register-cleanup
minor cleanup of task_register.Register
==
==================
ef0e8503;Erik Bernhardsson;2015-03-15 09:58:20 -0400;minor cleanup of task_register.Register

==

luigi/interface.py
luigi/task_register.py
test/decorator_test.py
==================
331dfbf1;Erik Bernhardsson;2015-03-14 21:53:14 -0400;More documentation stuff

==

doc/more_info.rst
doc/parameters.rst
doc/tasks.rst
doc/workflows.rst
==================
9b37a0ec;Erik Bernhardsson;2015-03-14 17:25:36 -0400;typo fixes

==

README.rst
==================
babb33dc;Erik Bernhardsson;2015-03-14 17:24:54 -0400;Moved documentation higher up to make it more prominent

==

README.rst
==================
bd5103cf;Erik Bernhardsson;2015-03-14 16:16:44 -0400;fixed pics 2

==

doc/task_breakdown.png
==================
12eb6a4a;Erik Bernhardsson;2015-03-14 16:16:22 -0400;fixed pics

==

doc/parameters_date_algebra.png
doc/parameters_enum.png
doc/parameters_recursion.png
==================
ae08e9e9;Erik Bernhardsson;2015-03-14 16:12:59 -0400;hotfixing README

==

README.rst
doc/central_scheduler.rst
==================
bbc9e830;Erik Bernhardsson;2015-03-14 16:10:38 -0400;Merge pull request #851 from spotify/erikbern/more-doc-10
Added some more pics from one of my slides
==
==================
64dc7bb5;Erik Bernhardsson;2015-03-14 16:09:54 -0400;fixed broken link in README

==

README.rst
==================
f5cfeff3;Erik Bernhardsson;2015-03-14 15:59:39 -0400;Added some more pics from one of my slides

==

doc/execution_model.png
doc/execution_model.rst
doc/tasks.rst
doc/workflows.rst
==================
15227a99;Erik Bernhardsson;2015-03-14 15:43:20 -0400;Merge pull request #850 from spotify/erikbern/more-doc-9
Doc refactoring
==
==================
89c2f5d6;Erik Bernhardsson;2015-03-14 15:37:26 -0400;Doc refactoring

==

doc/example_top_artists.rst
doc/index.rst
doc/parameters.rst
doc/programmatic_execution.rst
doc/task_parameters.png
doc/tasks.rst
doc/workflows.rst
luigi/target.py
luigi/task.py
==================
1ae39fbe;Erik Bernhardsson;2015-03-14 15:12:43 -0400;various doc fixes

==

doc/api_overview.rst
doc/configuration.rst
doc/contributing.rst
doc/index.rst
doc/more_info.rst
doc/task_with_targets.png
doc/tasks_input_output_requires.png
doc/tasks_with_dependencies.png
==================
654b98e3;Erik Bernhardsson;2015-03-14 14:10:09 -0400;Merge pull request #849 from spotify/erikbern/more-tests-2
Erikbern/more tests 2
==
==================
b44af7d1;Erik Bernhardsson;2015-03-14 12:58:42 -0400;Fixed issues in snakebite surface by the new tests

==

luigi/hdfs.py
test/hdfs_test.py
==================
3b6611ca;Erik Bernhardsson;2015-03-14 09:33:13 -0400;misc tests for hdfs: chown/chmod/count

==

test/hdfs_test.py
==================
9ec8f971;Erik Bernhardsson;2015-03-14 09:18:46 -0400;added a simple scalding test

==

test/contrib/scalding_test.py
==================
def52851;Erik Bernhardsson;2015-03-14 08:41:47 -0400;Removed pickle_reader, pickle_writer, as they weren't used anywhere

==

luigi/hadoop.py
==================
06c61628;Erik Bernhardsson;2015-03-13 08:04:36 -0400;Merge pull request #847 from gpoulin/tox-travis-python-v
Let tox handle the python version
==
==================
11b1bbc7;Guillaume Poulin;2015-03-13 11:44:58 +0800;Add test to make sure all modules can be imported

==

test/import_test.py
==================
85bb1c0d;Guillaume Poulin;2015-03-13 02:40:01 +0800;Let tox handle the python version
Also cache the hadoop distribution
Allow easier switching between python version
Benifit from the tox cache

==

.travis.yml
scripts/ci/setup_hadoop_env.sh
tox.ini
==================
125aff55;Erik Bernhardsson;2015-03-12 22:50:50 -0400;Merge pull request #845 from jthi3rry/doc-fixes
Doc fixes
==
==================
bdf603ff;Erik Bernhardsson;2015-03-12 11:20:06 -0400;Merge pull request #846 from gpoulin/luigi_grep-py3k-fix
Luigi grep py3k fix
==
==================
79d55c4a;Guillaume Poulin;2015-03-12 21:47:26 +0800;Fix luigi_grep for py3k

==

luigi/tools/luigi_grep.py
==================
4acc8d1b;Erik Bernhardsson;2015-03-12 07:47:32 -0400;Merge pull request #844 from Houzz/re_enable_task
Add a re-enable button on the dashboard
==
==================
95f903f4;Stefaan Lippens;2015-03-09 23:09:45 +0100;Issue #838: setup.py: improve packaging of 'bin' scripts with 'entry_points/console_scripts'

==

.travis.yml
MANIFEST.in
bin/luigi
bin/luigid
doc/central_scheduler.rst
doc/example_top_artists.rst
luigi/cmdline.py
luigi/server.py
luigi/tools/deps.py
luigi/tools/luigi_grep.py
setup.py
test/cmdline_test.py
==================
f3d37d90;Thierry Jossermoz;2015-03-12 22:36:56 +1300;Doc fixes

==

README.rst
doc/configuration.rst
==================
20c33b99;Kyle Sun;2015-03-11 22:37:09 -0700;add re-enable button

==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
8aae1f85;Erik Bernhardsson;2015-03-11 22:28:11 -0400;Merge pull request #843 from spotify/erikbern/remove-fork-linked-workers
remove fork_linked_workers 
==
==================
5b0953ab;Erik Bernhardsson;2015-03-11 21:45:21 -0400;Merge pull request #841 from gpoulin/remove-snakebite-dep
Remove snakebite dependency from setup.py
==
==================
23285be9;Erik Bernhardsson;2015-03-11 21:39:22 -0400;remove fork_linked_workers (couldn't find a single place where this was used)

==

luigi/process.py
==================
52610d7a;Erik Bernhardsson;2015-03-11 21:35:39 -0400;Merge pull request #842 from spotify/erikbern/more-coverage
Erikbern/more coverage
==
==================
ec24d971;Erik Bernhardsson;2015-03-11 21:01:07 -0400;Found another issue: <= and >= operators weren't implemented correctly for DateIntervals
For Python 2.7 and up there's functools.total_ordering which seems a lot more convenient :)

==

luigi/date_interval.py
==================
d44850b6;Erik;2015-03-11 19:40:00 -0400;funny thing is I think I just found a bug through my tests :) if you have a local pidfile

==

luigi/process.py
==================
7c7287f3;Erik;2015-03-11 19:24:40 -0400;More tests for date intervals

==

test/date_interval_test.py
==================
56c487df;Erik;2015-03-11 19:14:58 -0400;added some target tests to hive

==

test/contrib/hive_test.py
==================
8dd2e4e2;Erik;2015-03-11 19:02:06 -0400;use extra files to increase test coverage

==

test/hadoop_test.py
==================
7992d24d;Erik;2015-03-11 18:57:41 -0400;write pidfile from bin/luigid to get test coverage up a bit

==

test/bin_test.py
==================
53843e92;Guillaume Poulin;2015-03-12 00:44:11 +0800;Remove snakebite dependency from setup.py

==

setup.py
==================
b28dc643;Erik Bernhardsson;2015-03-11 08:16:33 -0400;Merge pull request #837 from jthi3rry/inline-pyspark
PySparkTask & SparkSubmitTask improvements
==
==================
5a28d231;Thierry Jossermoz;2015-03-05 00:29:57 +1300;Added PySparkTask & unit tests
Refactored SparkSubmitTask config, args and run method

Added SparkSubmitTask support for hadoop-conf-dir (for Yarn)

Added importlib reqs for python<2.7

Refactored spark unit tests

==

doc/configuration.rst
examples/pyspark_wc.py
luigi/contrib/pyspark_runner.py
luigi/contrib/spark.py
setup.py
test/contrib/spark_test.py
==================
021cb2bf;Erik Bernhardsson;2015-03-10 06:21:56 -0400;Merge pull request #812 from jthi3rry/master
Added SparkSubmitTask and deprecated SparkJob, Spark1xJob and PySpark1xJob
==
==================
aa0d0a9c;Thierry Jossermoz;2015-03-05 00:29:57 +1300;Added SparkSubmitTask and deprecated SparkJob, Spark1xJob and PySpark1xJob

==

.gitignore
doc/configuration.rst
examples/pyspark_wc.py
examples/spark_als.py
luigi/contrib/spark.py
test/contrib/spark_test.py
==================
10064c8f;Erik Bernhardsson;2015-03-08 22:25:14 -0400;Merge pull request #834 from spotify/erikbern/mock-target
Renamed MockFile -> MockTarget
==
==================
ffc5c632;Erik Bernhardsson;2015-03-08 22:19:59 -0400;Merge pull request #836 from spotify/erikbern/fix-822-2
Fixed additional issues popping up in #822
==
==================
afa299bb;Erik Bernhardsson;2015-03-08 20:41:47 -0400;Fixed additional issues popping up in #822

==

luigi/interface.py
test/cmdline_test.py
test/parameter_test.py
==================
d830e78e;Erik Bernhardsson;2015-03-08 15:01:58 -0400;Renamed MockFile -> MockTarget
I wonder if we should call it InMemoryTarget or something instead?

Also deleted some LocalTarget->MockTarget swapping in the global scope

Fixed an issue with the test coverage for LocalFile (constructor wasn't run)

==

luigi/mock.py
test/cmdline_test.py
test/decorator_test.py
test/fib_test.py
test/file_test.py
test/hadoop_test.py
test/instance_wrap_test.py
test/mock_test.py
test/optparse_test.py
test/parameter_test.py
test/range_test.py
test/recursion_test.py
test/spark_test.py
test/test_event_callbacks.py
test/worker_test.py
test/wrap_test.py
==================
67912aba;Erik Bernhardsson;2015-03-08 17:51:04 -0400;Merge pull request #835 from spotify/erikbern/fix-768
Some stuff to make #768 work
==
==================
a946646f;Erik Bernhardsson;2015-03-08 16:28:54 -0400;Some stuff to make #768 work
I hope this makes sense (I suck at tox, sed etc). Will merge this assuming it builds (right now build is broken)

==

tox.ini
==================
c6a3744e;Erik Bernhardsson;2015-03-08 15:34:04 -0400;Merge pull request #768 from aadu/doc-readme-fix
Update index.rst
==
==================
55725524;Erik Bernhardsson;2015-03-08 15:23:43 -0400;Merge pull request #833 from spotify/erikbern/more-doc-7
minor fixes to README.rst
==
==================
91061bd1;Erik Bernhardsson;2015-03-08 14:37:23 -0400;minor fixes to README.rst

==

README.rst
==================
0c08465c;Erik Bernhardsson;2015-03-08 14:30:37 -0400;Merge pull request #832 from spotify/erikbern/task-register
Moved the Register class from luigi.task to its own luigi.task_register
==
==================
210d3fdf;Erik Bernhardsson;2015-03-08 14:11:07 -0400;Merge pull request #830 from gpoulin/hdfs-test-py3k
Activate py3k test that are now fixed
==
==================
6b662661;Erik Bernhardsson;2015-03-08 14:04:09 -0400;Moved the Register class from luigi.task to its own luigi.task_register
This was mainly done to make documentation more clear (so that Register doesn't clutter luigi.task)

==

luigi/task.py
luigi/task_register.py
==================
dac08f34;Guillaume Poulin;2015-03-08 16:32:34 +0800;Activate py3k test that are now fixed
Those succeed now beacuse:
 - release of python 3.4.3
 - snakebite 2.5.2

==

luigi/hdfs.py
test/minicluster.py
test/redshift_test.py
test/requirements.txt
test/s3_test.py
==================
49d84a04;Erik Bernhardsson;2015-03-08 11:37:44 -0400;Merge pull request #828 from spotify/erikbern/fix-822
Fix for #822
==
==================
1a7cbcb9;Erik Bernhardsson;2015-03-08 11:19:08 -0400;Merge pull request #827 from gpoulin/coverage-test
Enable coverage for subprocess and shutdown sever gently
==
==================
5b733816;Erik Bernhardsson;2015-03-07 17:09:18 -0500;Fix for #822. DONT MERGE - I'm testing something
The solution is to let --MyClass-my-param only be exposed for params set on the base class. If any class inherits from MyClass, the param name will not change (or be duplicated). Eg. if there will be no --MySubClass-my-param option if MySubClass inherits from MyClass

==

luigi/task.py
test/parameter_test.py
==================
74597317;Erik Bernhardsson;2015-03-08 10:43:58 -0400;Merge pull request #829 from gpoulin/bin_test
Make LuigidDaemonTest inherit ServerTestRun
==
==================
5844f5b8;Guillaume Poulin;2015-03-08 20:04:46 +0800;Enable coverage for subprocess and multiprocessing

==

.coveragerc
sitecustomize.py
tox.ini
==================
8c5a95b9;Guillaume Poulin;2015-03-08 20:02:19 +0800;Shutdown the server more gently

==

luigi/server.py
==================
d52c093f;Guillaume Poulin;2015-03-08 14:13:37 +0800;Make LuigidDaemonTest inherit ServerTestRun

==

test/bin_test.py
==================
bf4c6d73;Erik Bernhardsson;2015-03-07 13:51:08 -0500;Merge pull request #826 from gpoulin/revert-rpc-httpclient
Bring back rpc connect_timeout removed by #825
==
==================
fb492168;Guillaume Poulin;2015-03-08 02:34:04 +0800;Bring back rpc connect_timeout removed by #825

==

luigi/rpc.py
==================
0d5f14c8;Erik Bernhardsson;2015-03-07 12:32:38 -0500;bumped version to 1.1.1
Just released 0abe27e5c6be616e107745b48dff8939815da73c as 1.1.0 to pypi so we should at least make sure going forward we work on 1.1.1. Unfortunately it's a bit weird that the git history says 1.0.24 where it was really 1.1.0 but whatever.

The reason I didn't release HEAD to pypi was the recent issues with Tornado etc. I want to wait for that to stabilize a bit.

==

setup.py
==================
c64bd47b;Erik Bernhardsson;2015-03-07 11:37:21 -0500;Merge pull request #825 from gpoulin/revert-rpc-httpclient
Use urllib as http client of the rpc
==
==================
0bc0097e;Guillaume Poulin;2015-03-08 00:02:40 +0800;Use urllib as http client of the rpc
Effectively reverting 9752ba7 which was causing issue #824

==

luigi/rpc.py
test/server_test.py
==================
39616027;Erik Bernhardsson;2015-03-06 18:46:31 -0500;Merge pull request #819 from Houzz/assistant_import
Passes module information in get_work response for assistants
==
==================
5ba4e8bd;Erik Bernhardsson;2015-03-06 14:18:57 -0500;Merge pull request #817 from Houzz/run_assistant
Makes assistants reasonably runnable
==
==================
78dd6574;Erik Bernhardsson;2015-03-06 14:18:06 -0500;Merge pull request #823 from gpoulin/kill-server
Make sure to kill tornado process at the end of a test
==
==================
f8673f7f;Dave Buchfuhrer;2015-03-05 17:41:10 -0800;Passes module information in get_work response for assistants
This allows assistants to run jobs that they have the code for but have not
imported the module. This will unfortunately not work with jobs that were in
the __main__ module of the worker that first added them.

==

dummy_test_module/__init__.py
dummy_test_module/not_imported.py
luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
test/worker_test.py
==================
74580f55;Stephen Pascoe;2015-03-06 15:58:08 +0000;New-style formating of URL

==

luigi/rpc.py
==================
6d69e90e;Dave Buchfuhrer;2015-03-04 15:07:52 -0800;Keeps assistant-run tasks in RUNNING state
Assistants are not stakeholders for the tasks they run, and the scheduler will
see this and set the task to FAILED during running. This commit prevents the
scheduler from doing so when the worker is an assistant.

==

luigi/scheduler.py
test/central_planner_test.py
==================
56b51f93;Guillaume Poulin;2015-03-06 22:40:36 +0800;Make sure to kill tornado process at the end of a test

==

test/server_test.py
==================
f8ec8fab;Erik Bernhardsson;2015-03-06 08:27:54 -0500;Merge pull request #818 from Houzz/assistant_fail
Fails assistant when it can't determine the task type
==
==================
0eaa7854;Stephen Pascoe;2015-03-06 10:06:40 +0000;Allow the scheduler client to contact a scheduler at a URL with a prefix

==

luigi/rpc.py
==================
dc805375;Dave Buchfuhrer;2015-03-05 14:14:09 -0800;Fails assistant when it can't determine the task type
When the assistant can't create a task for a given family, it should not just
die. This catches the errors caused by unknown task families and logs messaeges
rather than just dying. The scheduler is informed of the failure and the
assistant can continue requesting other jobs.

As a future improvement, the scheduler could also use the failure report to
avoid giving the assistant these types of jobs.

==

luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/worker_test.py
==================
9f0b2a0e;Arash Rouhani;2015-03-05 22:48:34 +0100;Merge pull request #811 from gpoulin/rpc-tests
Add test for RemoteScheduler
==
==================
e41ecf7a;Dave Buchfuhrer;2015-03-04 11:20:27 -0800;Cleans up get_work logic for assistants
Some logic was added to get_work to treat assistants as a special case
throughout the function to deal with the fact that assistants aren't necessarily
stakeholders of the tasks they'll be running. This commit cleans up some of that
logic by performing a check that the worker is either in the stakeholders or is
an assistant and using that in place of all the special cases.

This also cleans up the greedy logic to treat assistants more like other workers.

==

luigi/scheduler.py
==================
abbe8ec6;Dave Buchfuhrer;2015-03-04 10:48:59 -0800;Makes assistants stay alive
Assistants don't necessarily schedule their own tasks, so it doesn't make sense
to kill them when their scheduled tasks are all complete. This keeps assistants
alive if worker-keep-alive is set to True.

==

luigi/worker.py
==================
8edadc7d;Dave Buchfuhrer;2015-03-03 15:57:27 -0800;Allows assistants to be run from the command line
This adds a command-line argument --assistant to run a worker as an assistant as
well as running its own tasks. The assistant must be run with some task, but you
can use a dummy task to keep the scheduling light-weight.

==

luigi/interface.py
test/customized_run_test.py
==================
b4785431;Erik Bernhardsson;2015-03-05 14:08:07 -0500;Merge pull request #816 from gpoulin/ssh-tests
Activate SSH tests on Travis
==
==================
701e5d2b;Guillaume Poulin;2015-03-06 01:16:43 +0800;Activate SSH tests on Travis
Fix bugs found when adding ssh tests

==

.travis.yml
luigi/contrib/ssh.py
luigi/format.py
test/contrib/cascading_test.py
test/contrib/test_ssh.py
==================
9752ba7e;Guillaume Poulin;2015-03-05 23:15:20 +0800;Use tornado AsyncHTTPClient for the rpc
Make sure that all test depending on the server
run properly

==

luigi/rpc.py
test/bin_test.py
test/remote_scheduler_test.py
test/rpc_test.py
test/server_test.py
==================
ea183a25;Erik Bernhardsson;2015-03-05 08:30:43 -0500;Merge pull request #813 from neilisaac/scheduler-record-task-history
Read record_task_history parameter in scheduler.scheduler
==
==================
5dd03e81;Guillaume Poulin;2015-03-05 11:03:21 +0800;Remove HOST parameter from Schedulers test

==

test/central_planner_test.py
test/server_test.py
==================
97d5639e;Guillaume Poulin;2015-03-05 10:56:06 +0800;Fix get_work args order in rpc.py

==

luigi/rpc.py
test/rpc_test.py
==================
f1020256;Guillaume Poulin;2015-03-04 23:28:37 +0800;Use tornado AsyncHTTPTestCase for sever_test
More stable, more fexible, faster and easier to debug
Keep some tests (sever_test.py:ServerTestRun) with
subprocess to make sure the server start correctly
Remove GET method fallback from the RemoteScheduler

==

luigi/rpc.py
luigi/server.py
test/central_planner_test.py
test/remote_scheduler_test.py
test/rpc_test.py
test/server_test.py
==================
6fafc2b4;Neil Isaac;2015-03-04 12:21:16 -0500;Read record_task_history parameter in scheduler.scheduler

==

luigi/scheduler.py
==================
a06c55ab;Guillaume Poulin;2015-03-04 15:33:29 +0800;Add test for RemoteScheduler
Test are based on CentralScheduler tests
Add some method to remote scheduler to support more features
Some tests are still failing and should be fixed

==

luigi/rpc.py
luigi/scheduler.py
luigi/server.py
test/central_planner_test.py
test/rpc_test.py
==================
fed8dd56;Erik Bernhardsson;2015-03-03 18:53:30 -0500;Merge pull request #810 from Houzz/assistant_get_work
Adds assistant argument to RemoteScheduler.get_work
==
==================
1404a525;Dave Buchfuhrer;2015-03-03 15:22:59 -0800;Adds assistant argument to RemoteScheduler.get_work
Workers can't use the remote scheduler at all with the bug this fixes.

==

luigi/rpc.py
==================
2aa162b3;Arash Rouhani;2015-03-03 22:25:42 +0100;Merge pull request #479 from spotify/erikbern/slave-mode
Initial prototype of a "slave" worker
==
==================
4409c81c;Erik Bernhardsson;2015-03-03 15:15:47 -0500;Merge pull request #809 from neilisaac/remove-delay-config
Fixed config path name for remove-delay
==
==================
7e2061ad;Neil Isaac;2015-03-03 15:00:16 -0500;Fixed config path name for remove-delay

==

luigi/scheduler.py
==================
75d4b90b;Erik Bernhardsson;2015-03-03 10:25:45 -0500;Merge pull request #804 from gpoulin/postgres-namespace
Remove luigi namespace from postgres_test
==
==================
7a24768a;Erik Bernhardsson;2015-03-03 10:25:10 -0500;Merge pull request #808 from spotify/erikbern/more-docs-6
more cross reference links
==
==================
0f2056b9;Erik Bernhardsson;2015-03-03 10:24:55 -0500;Merge pull request #807 from spotify/erikbern/localtarget
Renamed File to LocalTarget
==
==================
ace2862f;Erik Bernhardsson;2015-03-02 21:32:16 -0500;Renamed File to LocalTarget

==

luigi/__init__.py
luigi/file.py
test/cmdline_test.py
test/fib_test.py
test/file_test.py
test/hadoop_test.py
test/instance_wrap_test.py
test/recursion_test.py
test/worker_external_task_test.py
test/wrap_test.py
==================
e1b882b3;Arash Rouhani;2015-03-03 12:57:55 +0100;Merge pull request #806 from jthi3rry/master
Add spark-master configuration & PySpark1xJob support for --jars
==
==================
6c342f3b;Arash Rouhani;2015-03-03 10:38:02 +0100;Merge pull request #796 from gpoulin/es-tests
Fix ElasticSearch module for python3
==
==================
d59deb18;Erik Bernhardsson;2015-03-02 23:10:25 -0500;more cross reference links

==

doc/api_overview.rst
doc/example_top_artists.rst
luigi/task.py
==================
7a3bc128;Erik Bernhardsson;2015-03-02 21:37:23 -0500;Merge pull request #805 from gpoulin/namespace-decorator
Add support for namespace decorator
==
==================
423ae79e;Thierry Jossermoz;2015-03-03 12:31:28 +1300;Add missing --jars option to PySpark1xJob

==

luigi/contrib/spark.py
==================
476e65be;Thierry Jossermoz;2015-03-03 12:30:18 +1300;Add support for spark-master configuration

==

doc/configuration.rst
luigi/contrib/spark.py
==================
dd3fdc3b;Guillaume Poulin;2015-03-02 23:26:10 +0800;Document `task_namespace` property

==

luigi/task.py
==================
89bb2363;Guillaume Poulin;2015-03-02 01:12:53 +0800;Bring back test coverage (revert #776)

==

tox.ini
==================
75bf2875;Guillaume Poulin;2015-03-02 01:02:18 +0800;Add unittest import to test/helpers
Try to first import unittest2 to provide some
needed functionnalities for python2.6 (eg.: skip)

Doesn't apply to test/minicluster because this
module is not importable from hadoop

==

test/_mysqldb_test.py
test/_test_ftp.py
test/_test_ssh.py
test/central_planner_test.py
test/clone_test.py
test/cmdline_test.py
test/contrib/_webhdfs_test.py
test/contrib/hive_test.py
test/contrib/pig_test.py
test/contrib/target_test.py
test/customized_run_test.py
test/date_hour_test.py
test/date_interval_test.py
test/date_minute_test.py
test/db_task_history_test.py
test/decorator_test.py
test/dynamic_import_test.py
test/email_test.py
test/esindex_test.py
test/factorial_test.py
test/fib_test.py
test/file_test.py
test/hdfs_test.py
test/helpers.py
test/instance_test.py
test/instance_wrap_test.py
test/interface_test.py
test/lock_test.py
test/minicluster.py
test/mock_test.py
test/most_common_test.py
test/namespace_test.py
test/parameter_test.py
test/postgres_test.py
test/postgres_with_server_test.py
test/priority_test.py
test/range_test.py
test/recursion_test.py
test/redshift_test.py
test/rpc_test.py
test/s3_test.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/server_test.py
test/set_task_name_test.py
test/spark_test.py
test/subtask_test.py
test/target_test.py
test/task_history_test.py
test/task_test.py
test/test_event_callbacks.py
test/test_sigpipe.py
test/test_ssh.py
test/util_previous_test.py
test/worker_external_task_test.py
test/worker_multiprocess_test.py
test/worker_parallel_scheduling_test.py
test/worker_task_test.py
test/worker_test.py
test/wrap_test.py
==================
9c17566a;Guillaume Poulin;2015-03-01 17:38:28 +0800;Fix ElasticSearch module for python3
Also activate ElasticSearch test on Travis

==

.travis.yml
luigi/contrib/esindex.py
test/esindex_test.py
test/requirements.txt
==================
d2cc8c4d;Arash Rouhani;2015-03-02 15:39:53 +0100;Merge pull request #797 from gpoulin/base-target-test
Create BaseTargetTestCase
==
==================
1e2a029c;Guillaume Poulin;2015-03-02 22:28:03 +0800;Remove luigi namespace from postgres_test
Was making all successive test fail if
postgresql was not accessible

==

test/postgres_with_server_test.py
==================
41900746;Arash Rouhani;2015-03-02 15:20:22 +0100;Merge pull request #801 from gpoulin/travis-postgres-test
Better integartion of postgres tests with Travis
==
==================
a2f56038;Guillaume Poulin;2015-03-02 21:25:45 +0800;Fix bugs catched by adding FileSystemTargetTestMixin
  - Typo in MixedUnicodeBytesWrapper
  - Fix s3 target when wrapped (boto/boto#2805)
  - minor s3 fix for python3

==

luigi/format.py
luigi/s3.py
==================
2f24aa43;Guillaume Poulin;2015-03-02 21:23:09 +0800;Create FileSystemTargetTestMixin
Ensure that all FileSystemTarget satisfy a
minimal common interface

==

test/file_test.py
test/hdfs_test.py
test/requirements.txt
test/s3_test.py
test/target_test.py
==================
0b5145df;Erik Bernhardsson;2015-03-02 08:32:23 -0500;Merge pull request #803 from spotify/erikbern/sqlalchemy-readthedocs
Install sqlalchemy when building RTD
==
==================
b5e77b0b;Erik Bernhardsson;2015-03-02 08:03:35 -0500;Install sqlalchemy when building RTD

==

luigi/contrib/sqla.py
luigi/db_task_history.py
setup.py
==================
4584d0d7;Erik Bernhardsson;2015-03-02 07:25:47 -0500;Merge pull request #802 from spotify/erikbern/warnings
Typo. warnings.ImportWarning -> ImportWarning
==
==================
dea02c3a;Erik Bernhardsson;2015-03-02 07:21:00 -0500;Typo. warnings.ImportWarning -> ImportWarning
On a slightly separate note, why isn't this displayed on stdout/stderr? Seems to defeat the purpose of having warnings

==

luigi/contrib/sqla.py
luigi/db_task_history.py
==================
59c48703;Guillaume Poulin;2015-03-02 20:17:06 +0800;Better integartion of postgres tests with Travis
See #795

==

.travis.yml
test/postgres_with_server_test.py
==================
f56c2cf4;Erik Bernhardsson;2015-03-02 06:58:23 -0500;Merge pull request #799 from spotify/erikbern/more-doc-5
More module level documentation
==
==================
6d2cb5af;Erik Bernhardsson;2015-03-02 06:55:00 -0500;Merge pull request #800 from spotify/erikbern/py-version-shield
Added a shield showing Python versions
==
==================
79bfda03;Erik Bernhardsson;2015-03-02 00:00:20 -0500;various fixes to api overview

==

doc/api_overview.rst
==================
39b0f7e4;Erik Bernhardsson;2015-03-01 23:44:32 -0500;Some more minor documentation fixes

==

README.rst
luigi/contrib/esindex.py
luigi/contrib/ssh.py
luigi/contrib/webhdfs.py
luigi/parameter.py
luigi/target.py
luigi/task.py
==================
2ed4d6f3;Erik Bernhardsson;2015-03-01 23:08:34 -0500;Added a shield showing Python versions
https://pypip.in/py_versions/luigi/badge.svg?style=flat

Currently only shows 2.6, 2.7. We need to push a new version to pypi to see 3.3 and 3.4

==

README.rst
==================
fa327fde;Erik Bernhardsson;2015-03-01 21:29:20 -0500;More module-level documentation

==

doc/api_overview.rst
doc/central_scheduler.rst
luigi/contrib/sqla.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/event.py
luigi/file.py
luigi/interface.py
luigi/mock.py
luigi/notifications.py
luigi/parameter.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
==================
9eb63865;Erik Bernhardsson;2015-02-22 18:16:42 -0500;Build all submodule documenation as separate pages
Also run sphinx-apidoc automatically in readthedocs

==

doc/api/luigi.contrib.rst
doc/api/luigi.rst
doc/api/luigi.six.rst
doc/api/luigi.tools.rst
doc/conf.py
tox.ini
==================
e6c7635a;Erik Bernhardsson;2014-09-29 20:46:14 +0000;Initial prototype of a "assistant" worker
If a worker is created using assistant=True, then it will pull *any* tasks from the scheduler,
not just tasks that are assigned to it.

The biggest limitation atm is that the assistant needs to be aware of what those tasks map to,
i.e. somehow they have to be imported for the worker to know what to do with the tasks.

It also doesn't handle failure very well.

==

luigi/interface.py
luigi/scheduler.py
luigi/worker.py
test/customized_run_test.py
test/worker_test.py
==================
d4fc6b74;Erik Bernhardsson;2015-03-01 11:11:31 -0500;Merge pull request #795 from gpoulin/postgres_test
Add postgres unittest to Travis
==
==================
b2678bbb;Guillaume Poulin;2015-03-01 17:00:40 +0800;Add postgres unittest to Travis

==

.travis.yml
test/postgres_with_server_test.py
==================
0abe27e5;Arash Rouhani;2015-02-26 17:56:04 +0100;Merge pull request #794 from spotify/ulzha/task-limit
add configurable per-invocation task-limit
==
==================
f51e4f9c;Uldis Barbans;2015-02-26 12:46:01 +0100;add configurable per-invocation task-limit
Prevents incidents due to spamming of the central scheduler,
usually accidental.

==

doc/configuration.rst
luigi/worker.py
test/cmdline_test.py
test/worker_test.py
==================
6797ffa9;Arash Rouhani;2015-02-26 11:57:53 +0100;Merge pull request #793 from gpoulin/fix-oldhdfs-fomart
Make the new hdfs format more robust
==
==================
aab71dac;Guillaume Poulin;2015-02-26 13:06:45 +0800;Make the new hdfs format more robust

==

luigi/hdfs.py
test/hdfs_test.py
==================
2021236d;Erik Bernhardsson;2015-02-25 14:17:11 -0500;Merge pull request #792 from kiyoto/patch-1
Adding Treasure Data's Luigi + Git use case
==
==================
e47e9cfa;Kiyoto;2015-02-25 10:41:35 -0800;Adding Treasure Data's Luigi + Git use case

==

README.rst
==================
541f4081;Arash Rouhani;2015-02-25 09:54:09 +0100;Merge pull request #789 from Tarrasch/override_defaults
Override defaults
==
==================
618970af;Arash Rouhani;2015-02-25 09:48:23 +0100;Interface.run: test against override_defaults=None

==

test/interface_test.py
==================
978d0c66;Hunter McCurry;2015-02-25 00:25:42 -0500;if override_defaults is None, passing kwargs crash

==

luigi/interface.py
==================
2c06085b;Arash Rouhani;2015-02-25 08:37:30 +0100;Merge remote-tracking branch 'gpoulin/s3-redshift-py3k'
Conflicts:
	luigi/s3.py

==
==================
09ad29c6;Arash Rouhani;2015-02-25 08:23:44 +0100;Merge pull request #787 from gpoulin/mock-unicode
Accept to write unicode in MockFile for compat
==
==================
a2115bdd;Guillaume Poulin;2015-02-25 14:03:58 +0800;Apply MixedUnicodeBytes on the Target
Make sure to deal with the case the format was
override but still rely on python casting from
unicode to bytes

==

luigi/contrib/ftp.py
luigi/contrib/webhdfs.py
luigi/file.py
luigi/format.py
luigi/mock.py
luigi/s3.py
==================
76110796;Guillaume Poulin;2015-02-25 01:19:28 +0800;force a version >= 1.3b1 for sphinx

==

tox.ini
==================
757f220b;Guillaume Poulin;2015-02-24 22:27:59 +0800;Fix redshift and s3 for python3
Also reactivate s3 unit tests but skip broken tests

==

luigi/contrib/redshift.py
luigi/format.py
luigi/s3.py
test/s3_test.py
==================
1c441934;Guillaume Poulin;2015-02-25 10:18:34 +0800;Accept to write unicode in Files for compat
Only accept on python2
Fix #786

==

luigi/format.py
luigi/mock.py
test/file_test.py
test/mock_test.py
==================
3fe9dcf4;Erik Bernhardsson;2015-02-24 06:17:41 -0500;Merge pull request #784 from spotify/revert-781-erikbern/more-doc-5
Revert "Render documentation on separate pages"
==
==================
cca9ea07;Erik Bernhardsson;2015-02-24 06:13:22 -0500;Revert "Render documentation on separate pages"

==

doc/api/luigi.contrib.rst
doc/api/luigi.rst
doc/api/luigi.six.rst
doc/api/luigi.tools.rst
tox.ini
==================
ff854b75;Erik Bernhardsson;2015-02-24 06:05:18 -0500;Merge pull request #781 from spotify/erikbern/more-doc-5
Render documentation on separate pages
==
==================
d44decbf;Arash Rouhani;2015-02-24 10:52:39 +0100;Merge pull request #782 from gpoulin/travis_fail
test if travis fail with process instead of thread

Known failure: https://travis-ci.org/spotify/luigi/jobs/51953781

We'll fix that failure asap.
==
==================
ba3df1c2;Guillaume Poulin;2015-02-24 14:09:29 +0800;Run the server in a different process for the test
Opening the server in a different thread was causing
issue with Travis. Fix #759.

==

test/server_test.py
==================
b05a822e;Erik Bernhardsson;2015-02-23 22:09:13 -0500;Render documentation on separate pages

==

doc/api/luigi.contrib.rst
doc/api/luigi.rst
doc/api/luigi.six.rst
doc/api/luigi.tools.rst
tox.ini
==================
5e6c8c71;Arash Rouhani;2015-02-23 22:07:11 +0100;Merge pull request #779 from CloverHealth/master
Fixes some outstanding Python 2/3 compatability issues.
==
==================
627a235d;George Leslie-Waksman;2015-02-23 08:40:54 -0800;Fixes some outstanding Python 2/3 compatability issues.
Fixes some outstanding Python 2/3 compatability issues.

==

luigi/postgres.py
==================
0775d991;Arash Rouhani;2015-02-23 18:37:55 +0100;Merge pull request #769 from gpoulin/hdfs_py3k
Hdfs support for python3
==
==================
702fd9da;Arash Rouhani;2015-02-23 18:37:44 +0100;Merge pull request #776 from Tarrasch/remove-intermediete-build-steps
Remove coverage and coveralls for now
==
==================
947fb510;Guillaume Poulin;2015-02-22 22:46:38 +0800;Fixes for MapReduce on hdfs with python3

==

luigi/hadoop.py
luigi/mrrunner.py
test/hadoop_test.py
==================
594246bf;Guillaume Poulin;2015-02-22 20:59:35 +0800;Deprecate Format.hdfs_reader in favor of chaining
Also add minor fixes for python3

==

luigi/hdfs.py
test/hdfs_test.py
==================
64277e2d;Guillaume Poulin;2015-02-22 20:50:16 +0800;Format can specify there input and output
Chaining verify the that the type match

==

luigi/format.py
==================
3a35d1d9;Guillaume Poulin;2015-02-20 21:16:25 +0800;Remove mixed encoding

==

luigi/format.py
==================
21f42bc9;Guillaume Poulin;2015-02-20 04:51:24 +0800;Various unicode vs bytes fixes
Many issues were introduced by the TextFormat

==

luigi/format.py
luigi/mock.py
test/cmdline_test.py
test/decorator_test.py
test/fib_test.py
test/optparse_test.py
test/recursion_test.py
test/redshift_test.py
test/wrap_test.py
==================
1a9376e3;Guillaume Poulin;2015-02-20 03:35:03 +0800;Update Targets to use the new format

==

luigi/contrib/ftp.py
luigi/contrib/ssh.py
luigi/contrib/webhdfs.py
luigi/format.py
luigi/mock.py
luigi/s3.py
test/_s3_test.py
==================
cd96ad08;Guillaume Poulin;2015-02-19 19:47:26 +0800;Replace text mode of target by a text format

==

luigi/file.py
luigi/format.py
luigi/target.py
test/file_test.py
==================
26a0d4fd;Arash Rouhani;2015-02-23 16:50:57 +0100;Merge pull request #777 from gpoulin/test_fixes
Fix tests that were failing unnoticed
==
==================
5c0bd8c9;Guillaume Poulin;2015-02-23 21:42:28 +0800;Fix tests that were failing unnoticed

==

test/file_test.py
test/range_test.py
test/worker_test.py
==================
5f04ef15;Erik Bernhardsson;2015-02-23 09:13:47 -0500;Merge pull request #775 from spotify/erikbern/more-doc-4
More documentation for submodules
==
==================
01da1e77;Arash Rouhani;2015-02-23 14:15:42 +0100;Remove coverage and coveralls for now
This is about fixing the SUPER-SCARY false positives we get from Travis
CI service. See #759. I see this as urgent, so if the tests fail for
this PR, that's good.

While we haven't had any incident yet, we were about to have two on
Spotify's side and apparently @daveFNbuck have had one already (#752).

Just now, I got some 2.6 error which is still green.
https://travis-ci.org/spotify/luigi/jobs/51362963

==

tox.ini
==================
2562334a;Erik Bernhardsson;2015-02-22 19:46:39 -0500;don't run Travis for non-master branches

==

.travis.yml
==================
39734eee;Erik Bernhardsson;2015-02-22 16:12:19 -0500;Added some submodule-level documentation
Our autogenerated documentation is pretty horrible. Some simple stuff could make it a lot better

==

doc/api/luigi.contrib.rst
doc/api_overview.rst
luigi/configuration.py
luigi/contrib/pig.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/file.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scalding.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/webhdfs.py
luigi/worker.py
==================
689d0a0c;Erik Bernhardsson;2015-02-23 07:33:50 -0500;Merge pull request #773 from spotify/revert-770-erikbern/more-doc
Revert "Added some submodule-level documentation"
==
==================
32fdad2f;Erik Bernhardsson;2015-02-23 07:33:38 -0500;Revert "Added some submodule-level documentation"

==

.travis.yml
doc/api/luigi.contrib.rst
doc/api/luigi.rst
doc/api/luigi.six.rst
doc/api/luigi.tools.rst
doc/api_overview.rst
luigi/configuration.py
luigi/contrib/pig.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/file.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scalding.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/webhdfs.py
luigi/worker.py
tox.ini
==================
33b0fafa;Erik Bernhardsson;2015-02-23 07:21:08 -0500;Merge pull request #770 from spotify/erikbern/more-doc
Added some submodule-level documentation
==
==================
f69e80d2;Arash Rouhani;2015-02-23 13:11:37 +0100;Merge pull request #771 from spotify/ulzha/range
make filesystem inference work for RangeDaily
==
==================
3eb9ef86;Arash Rouhani;2015-02-23 12:15:49 +0100;Merge pull request #772 from Tarrasch/fix-parameter-passing
Fix parameter passing
==
==================
1d66394c;Uldis Barbans;2015-02-23 10:55:15 +0100;make filesystem inference work for RangeDaily
This brings RangeDaily feature set on par with RangeHourly, by
generalizing infer_bulk_complete_from_fs implementation.

Previously it just was not implemented (as the removed FIXME in
RangeDaily docstring says). It was only implemented for the hourly
case. Scheduling a daily job outputting to e.g. HdfsTarget raised
NotImplementedError.

==

luigi/tools/range.py
test/range_test.py
==================
fccb631a;Arash Rouhani;2015-02-23 11:10:49 +0100;Positional params: revert behavior to a78338c^
At the moment, we think the behavioral change introduced in a78338c was
a mistake. There were no test cases that covered the behavior of passing
global parameters positionally, so this commits adds that.

The major issue was partially solved in f5c3316, but I think that was
kind of an arbitrary fix that still breaks backward compatibility.
Please see the discussion in spotify/luigi#738.  Hopefully, nobody
started to rely on this intermediete behavior that would have existed
for about 2 weeks.

Eventually, we'll have to change the condition

        positional_params = [(n, p) for n, p in params if not p.is_global]

to just

        positional_params = [(n, p) for n, p in params]

just like we did in a78338c. Though that should be done after global
parameters have been deprecated for half a year or something at least.
People need time to change their cron lines from `--pool development` to
`--BaseHadoopJobTask-pool development`.  Then we can change it to

        positional_params = [(n, p) for n, p in params]

AND remove is_global (you can't just do one of them like we did in
a78338c)

==

luigi/task.py
test/parameter_test.py
==================
a7c0662e;Arash Rouhani;2015-02-20 15:09:29 +0100;TestRemoveGlobalParameters: Check exit code

==

test/parameter_test.py
==================
52d6f767;Erik Bernhardsson;2015-02-22 19:46:39 -0500;don't run Travis for non-master branches

==

.travis.yml
==================
43edc60d;Erik Bernhardsson;2015-02-22 18:16:42 -0500;Build all submodule documenation as separate pages

==

doc/api/luigi.contrib.rst
doc/api/luigi.rst
doc/api/luigi.six.rst
doc/api/luigi.tools.rst
tox.ini
==================
a1ccc7ce;Erik Bernhardsson;2015-02-22 16:12:19 -0500;Added some submodule-level documentation
Our autogenerated documentation is pretty horrible. Some simple stuff could make it a lot better

==

doc/api/luigi.contrib.rst
doc/api_overview.rst
luigi/configuration.py
luigi/contrib/pig.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/file.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scalding.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/webhdfs.py
luigi/worker.py
==================
f004c352;Arash Rouhani;2015-02-22 10:39:18 +0100;Merge pull request #760 from gpoulin/hadoop_p3yk
Force hadoop client to hadoopcli on python3
==
==================
976975df;Guillaume Poulin;2015-02-22 17:23:55 +0800;Python3 tests are not allowed to fail anymore

==

.travis.yml
==================
2ae507be;Guillaume Poulin;2015-02-22 16:47:09 +0800;Fixes for hadoop on python3

==

luigi/hadoop.py
test/hadoop_test.py
==================
3a4ffe69;Guillaume Poulin;2015-02-22 15:31:18 +0800;Make sure to have unittest under py26
Only use unittest2 when necessary

==

test/hadoop_test.py
test/hdfs_test.py
test/minicluster.py
test/redshift_test.py
test/requirements.txt
test/snakebite_test.py
tox.ini
==================
9f050816;Guillaume Poulin;2015-02-19 01:44:09 +0800;Small fixes to hadoop module for python3

==

luigi/hadoop.py
==================
2afe4a67;Guillaume Poulin;2015-02-18 19:04:09 +0800;Force hadoopcli as hadoop client on python3

==

luigi/hdfs.py
==================
8f36bcbc;Guillaume Poulin;2015-02-18 20:16:45 +0800;Skip snakebite test on py3k
Also move skip unit test decorator to test/helpers

==

luigi/mock.py
test/_s3_test.py
test/hadoop_test.py
test/minicluster.py
test/redshift_test.py
==================
585acb2e;Aaron Duke;2015-02-20 12:16:05 -0500;Update index.rst
Fixed the relative path of the sphinx include directive so that it can find README.rst.
==

doc/index.rst
==================
d848f6d9;Erik Bernhardsson;2015-02-20 06:08:07 -0500;Merge pull request #763 from berkerpeksag/skip-snakebite
Skip snakebite tests on Python 3.
==
==================
e0f53aee;Arash Rouhani;2015-02-19 13:36:30 +0100;Merge pull request #764 from gpoulin/text_formatter
Text formatter
==
==================
119639bd;Guillaume Poulin;2015-02-19 05:04:25 +0800;Allow pipe on format

==

luigi/format.py
test/file_test.py
==================
cffbc4ba;Guillaume Poulin;2015-02-19 02:25:29 +0800;Add unit test for extra format
Also fix Chain format

==

luigi/format.py
test/file_test.py
==================
5041db07;Guillaume Poulin;2015-02-19 01:49:14 +0800;Add formatter for text and chainning

==

luigi/format.py
==================
416e0c3e;Arash Rouhani;2015-02-19 11:57:41 +0100;Merge pull request #762 from freider/master
Override default encoding to utf8 in test that assumes unicode compatibility
==
==================
122e969a;Erik Bernhardsson;2015-02-18 18:57:29 -0500;Merge pull request #766 from laserson/LUIGI-765
[LUIGI-765] S3FlagTarget now uses == to check slash
==
==================
188dcc8f;Uri Laserson;2015-02-18 15:34:02 -0800;[LUIGI-765] S3FlagTarget now uses == to check slash
Fixes #765.

==

luigi/s3.py
==================
9a7caf44;Berker Peksag;2015-02-18 17:56:50 +0200;Skip snakebite tests on Python 3.

==

test/minicluster.py
test/snakebite_test.py
==================
6f5d7c09;Elias Freider;2015-02-18 15:48:58 +0100;Override default encoding to utf8 in test that assumes unicode compatible
Previously the `test_unicode` test would fail on machines with ascii (or similar) as the default locale encoding

==

test/file_test.py
==================
9215d54f;Arash Rouhani;2015-02-18 14:00:09 +0100;Merge pull request #758 from spotify/Tarrasch-patch-2
Remove ipdb
==
==================
0fb73884;Erik Bernhardsson;2015-02-18 06:38:12 -0500;added 3.3 and 3.4 to list of compatible python versions

==

setup.py
==================
ccaa413f;Erik Bernhardsson;2015-02-18 06:19:46 -0500;Merge pull request #753 from Houzz/ftp_rm_fix_pr
fix failure when ftp._rm_recursive() is called on a file
==
==================
ad1ebf2f;Arash Rouhani;2015-02-18 12:01:02 +0100;Remove ipdb
As was discussed in #756
==

test/requirements.txt
==================
0215370f;Arash Rouhani;2015-02-18 11:58:57 +0100;Merge pull request #754 from spotify/erikbern/doc-fixes
Minor doc cleanup
==
==================
d7370ddc;Arash Rouhani;2015-02-18 11:58:41 +0100;Merge pull request #755 from Tarrasch/fix-six-imports
Fix six imports
==
==================
d9db8afd;Arash Rouhani;2015-02-18 11:58:31 +0100;Merge pull request #757 from spotify/Tarrasch-patch-1
Add python-daemon as build depedency
==
==================
8134b8fe;Arash Rouhani;2015-02-18 11:57:54 +0100;Merge pull request #756 from Tarrasch/make-python-daemon-hard-requirement
Mkae python-daemon a core requirement
==
==================
47d9993c;Arash Rouhani;2015-02-18 11:45:58 +0100;Add python-daemon as build depedency

==

debian/control
==================
50582732;Arash Rouhani;2015-02-18 11:29:42 +0100;Mkae python-daemon a core requirement
Previously, it was only required to run the tests. Though given that
luigi is useless without it, I move it as a requirement for the whole
package (like it it in debian).

==

setup.py
test/requirements.txt
==================
13fe4f3f;Arash Rouhani;2015-02-18 10:57:24 +0100;Set unix file mode for test/contrib/sqla_test.py

==

test/contrib/sqla_test.py
==================
49f27fcf;Arash Rouhani;2015-02-18 10:55:46 +0100;Change six imports to use luigi's version
This was broken from #748. Ping @gpoulin

==

luigi/contrib/ftp.py
luigi/contrib/target.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/mock.py
luigi/util.py
test/cmdline_test.py
test/contrib/sqla_test.py
test/db_task_history_test.py
==================
9513c7d5;Erik Bernhardsson;2015-02-17 23:19:03 -0500;Merge pull request #751 from Tarrasch/add-test-attributes
Add @attr('sqlalchemy') to sqlalchemy tests
==
==================
ea305bf8;Erik Bernhardsson;2015-02-17 23:16:22 -0500;Minor doc cleanup

==

doc/api_overview.rst
==================
6818d438;Kyle Sun;2015-02-17 20:00:11 -0800;fix failures when _rm_recursive() is called on file

==

luigi/contrib/ftp.py
==================
0ebb5676;Erik Bernhardsson;2015-02-17 18:39:55 -0500;Merge pull request #752 from Houzz/inverse_dep_graph
Renames inverse_dependencies to inverse_dep_graph to match the api call
==
==================
63c290fc;Dave Buchfuhrer;2015-02-17 15:04:15 -0800;Renames inverse_dependencies to inverse_dep_graph to match the api call

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
dbd0acbd;Erik Bernhardsson;2015-02-17 16:38:08 -0500;Merge pull request #747 from gpoulin/py3k_test
Py3k unit test
==
==================
523f0209;Guillaume Poulin;2015-02-18 04:08:59 +0800;py3k fixes for s3 and redshift

==

luigi/contrib/redshift.py
luigi/s3.py
==================
f3e3136a;Guillaume Poulin;2015-02-18 03:55:26 +0800;add unicode test for file
also add python-daemon to requirement.txt

==

test/file_test.py
test/requirements.txt
==================
0ffdbcff;Guillaume Poulin;2015-02-18 03:44:55 +0800;small fixes for py3k in bin scripts

==

bin/deps.py
bin/luigi-grep.py
bin/luigid
==================
f8097113;Guillaume Poulin;2015-02-18 03:43:28 +0800;better file target (text/binary)
make sure to 100% retrocompatible
also fix contrib/ftp

==

luigi/contrib/ftp.py
luigi/file.py
==================
c4905dab;Guillaume Poulin;2015-02-18 02:31:01 +0800;skip test requiring moto on python3.4
spulec/moto#308

==

test/_s3_test.py
test/redshift_test.py
==================
1ccf16c8;Arash Rouhani;2015-02-17 17:51:53 +0100;Add @attr('sqlalchemy') to sqlalchemy tests
In case you want to filter away tests that rely on sqlalchemy being
installed.

I get something like this currently:

    Traceback (most recent call last):
      File "/usr/lib/python2.6/unittest.py", line 279, in run
        testMethod()
      File "/«PKGBUILDDIR»/test/contrib/sqla_test.py", line 249, in test_row_overload
        self._check_entries(self.engine)
      File "/«PKGBUILDDIR»/test/contrib/sqla_test.py", line 130, in _check_entries
        with engine.begin() as conn:
    AttributeError: 'Engine' object has no attribute 'begin'

==

test/contrib/sqla_test.py
==================
9ca49924;Erik Bernhardsson;2015-02-17 07:35:06 -0500;Merge pull request #748 from gpoulin/py3k
Py3k
==
==================
6a5d064f;Arash Rouhani;2015-02-16 18:14:00 +0100;Merge pull request #749 from Tarrasch/six-dependency-debian
Embed six.py file for more compatibility
==
==================
555df077;Arash Rouhani;2015-02-16 18:12:21 +0100;Merge pull request #750 from vitorbaptista/patch-1
Fix a few typos in the documentation
==
==================
fab5482a;Arash Rouhani;2015-02-16 18:08:16 +0100;Fix pep8 issue in worker.py
    ~/spotify/repos/luigis/github_luigi six-dependency-debian*
    ❯ export PYTHONPATH=''; JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64 tox -e pep8
    pep8 develop-inst-nodeps: /home/arash/spotify/repos/luigis/github_luigi
    pep8 runtests: PYTHONHASHSEED='478951167'
    pep8 runtests: commands[0] | pep8 --exclude=luigi/six.py --ignore E501,E402,E731 luigi test examples bin
    luigi/worker.py:700:17: W503 line break before binary operator
    ERROR: InvocationError: '/home/arash/spotify/repos/luigis/github_luigi/.tox/pep8/bin/pep8 --exclude=luigi/six.py --ignore E501,E402,E731 luigi test examples bin'
    _________________________________________________________________________________________________________________________________________ summary _________________________________________________________________________________________________________________________________________
    ERROR:   pep8: commands failed

==

luigi/worker.py
==================
ba44f204;Vitor Baptista;2015-02-16 16:09:35 +0000;Fix typos in the documentation

==

doc/api_overview.rst
doc/luigi_patterns.rst
==================
bf53e4c5;Arash Rouhani;2015-02-16 15:29:40 +0100;Embed six.py file for more compatibility
Currently, debian squeeze has a too old version of six in its repositories
(1.1, latest is 1.9).  For example there's no `add_metaclass`.  By embedding
six in the luigi package itself, we can ensure everyone uses the same version
of the library.

Previously I got this error which is now fixed. Nice that the six author put it
all in one file!

    $ nosetests test/date_hour_test.py
    E
    ======================================================================
    ERROR: Failure: AttributeError ('module' object has no attribute 'add_metaclass')
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/usr/lib/python2.6/dist-packages/nose/loader.py", line 390, in loadTestsFromName
        addr.filename, addr.module)
      File "/usr/lib/python2.6/dist-packages/nose/importer.py", line 39, in importFromPath
        return self.importFromDir(dir_path, fqname)
      File "/usr/lib/python2.6/dist-packages/nose/importer.py", line 86, in importFromDir
        mod = load_module(part_fqname, fh, filename, desc)
      File "/spotify/home/arash/spotify/repos/luigis/github_luigi/test/date_hour_test.py", line 21, in <module>
        import luigi
      File "/spotify/home/arash/spotify/repos/luigis/github_luigi/luigi/__init__.py", line 21, in <module>
        from luigi import task
      File "/spotify/home/arash/spotify/repos/luigis/github_luigi/luigi/task.py", line 205, in <module>
        @six.add_metaclass(Register)
    AttributeError: 'module' object has no attribute 'add_metaclass'

    ----------------------------------------------------------------------
    Ran 1 test in 0.001s

    FAILED (errors=1)

==

bin/luigi-grep.py
examples/ssh_remote_execution.py
examples/top_artists.py
examples/wordcount.py
luigi/contrib/hive.py
luigi/contrib/pig.py
luigi/contrib/scalding.py
luigi/db_task_history.py
luigi/file.py
luigi/hadoop.py
luigi/hdfs.py
luigi/parameter.py
luigi/postgres.py
luigi/s3.py
luigi/scheduler.py
luigi/six.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/tools/range.py
luigi/worker.py
setup.py
test/_s3_test.py
test/helpers.py
tox.ini
==================
793fb7a1;Guillaume Poulin;2015-02-16 05:26:24 +0800;fix remaining tests

==

test/cmdline_test.py
test/contrib/pig_test.py
test/scheduler_visualisation_test.py
test/server_test.py
test/spark_test.py
test/worker_parallel_scheduling_test.py
==================
5d28a00e;Guillaume Poulin;2015-02-16 02:34:17 +0800;fix many tests for python3

==

test/cmdline_test.py
test/contrib/hive_test.py
test/contrib/sqla_test.py
test/db_task_history_test.py
test/file_test.py
test/scheduler_test.py
test/server_test.py
test/spark_test.py
==================
4ba3867b;Guillaume Poulin;2015-02-15 14:19:23 +0800;just allow cdh to fail

==

.travis.yml
==================
8cd086de;Guillaume Poulin;2015-02-15 14:14:58 +0800;trivial test fixes

==

test/_s3_test.py
test/_test_ftp.py
test/_test_ssh.py
test/central_planner_test.py
test/cmdline_test.py
test/contrib/pig_test.py
test/date_interval_test.py
test/decorator_test.py
test/file_test.py
test/hadoop_test.py
test/mock_test.py
test/range_test.py
test/recursion_test.py
test/redshift_test.py
test/remote_scheduler_test.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/spark_test.py
test/test_event_callbacks.py
test/test_sigpipe.py
test/worker_test.py
test/wrap_test.py
==================
611413a2;Guillaume Poulin;2015-02-16 05:26:59 +0800;make last fixes for py3k

==

luigi/contrib/pig.py
luigi/contrib/spark.py
luigi/mock.py
luigi/rpc.py
luigi/scheduler.py
luigi/tools/range.py
luigi/worker.py
==================
b16d3082;Guillaume Poulin;2015-02-16 02:34:58 +0800;various small fixes for python3

==

luigi/contrib/redshift.py
luigi/contrib/target.py
luigi/date_interval.py
luigi/hdfs.py
luigi/tools/range.py
luigi/util.py
==================
9498cfbb;Guillaume Poulin;2015-02-16 01:20:06 +0800;better distinction between str and bytes

==

luigi/contrib/hive.py
luigi/contrib/webhdfs.py
luigi/file.py
luigi/mock.py
luigi/target.py
==================
61f96670;Arash Rouhani;2015-02-15 10:21:40 +0100;Merge pull request #745 from gpoulin/py3k
Py3k

Note. Python 3 does *not* work yet. Tests are failing and we've just white listed that in Travis.
==
==================
3d72f6de;Guillaume Poulin;2015-02-15 12:45:50 +0800;make file behave more like expected in py3k

==

examples/top_artists.py
luigi/file.py
luigi/postgres.py
test/test_sigpipe.py
==================
1c75ddf2;Guillaume Poulin;2015-02-15 11:52:18 +0800;Merge remote-tracking branch 'upstream/master' into py3k

==
==================
55243932;Guillaume Poulin;2015-02-15 10:42:49 +0800;fix iterator next and StringIO

==

luigi/hadoop.py
luigi/mock.py
luigi/rpc.py
luigi/worker.py
==================
90954712;Guillaume Poulin;2015-02-15 10:30:09 +0800;add python 3.3 and 3.4 to Travis
Allow those tests to fail

==

.travis.yml
==================
b08b5d26;Guillaume Poulin;2015-02-14 23:54:18 +0800;top10artists example working
58 errors 10 failures

==

examples/top_artists.py
luigi/scheduler.py
==================
d04ee644;Guillaume Poulin;2015-02-14 23:39:34 +0800;Top10Artist succeed when the target is built

==

luigi/task.py
==================
d227eb63;Guillaume Poulin;2015-02-14 22:55:51 +0800;scheduler seems to work for Top10Artist
The job still failed the the fail is
detected and we try to send emails

==

luigi/configuration.py
luigi/date_interval.py
luigi/lock.py
luigi/parameter.py
luigi/scheduler.py
luigi/task.py
==================
75a957fd;Guillaume Poulin;2015-02-14 22:21:18 +0800;implicit key not used

==

luigi/task.py
==================
ea4ee7f9;Guillaume Poulin;2015-02-14 22:18:47 +0800;fix register metaclass

==

luigi/task.py
luigi/worker.py
==================
dbd16629;Guillaume Poulin;2015-02-14 21:55:54 +0800;TopArtist doesn't raise exception anymore
still doesn't work thou
also fix all iteritems on dict

==

bin/luigi-grep.py
examples/ssh_remote_execution.py
examples/top_artists.py
examples/wordcount.py
luigi/contrib/hive.py
luigi/contrib/pig.py
luigi/contrib/scalding.py
luigi/db_task_history.py
luigi/hadoop.py
luigi/hdfs.py
luigi/parameter.py
luigi/postgres.py
luigi/s3.py
luigi/scheduler.py
luigi/task.py
luigi/templates/show.html
luigi/tools/range.py
luigi/worker.py
test/_s3_test.py
test/helpers.py
==================
867da22c;Guillaume Poulin;2015-02-14 20:59:08 +0800;fix atomic_file in py26

==

luigi/file.py
==================
d68062d2;Guillaume Poulin;2015-02-14 02:43:04 +0800;bring back module docstring

==

luigi/hdfs.py
luigi/mrrunner.py
==================
08828a00;Guillaume Poulin;2015-02-14 02:21:01 +0800;small pep8 fix

==

luigi/target.py
==================
42020c89;Guillaume Poulin;2015-02-14 01:57:22 +0800;add six as dependency

==

setup.py
==================
ea8a02bb;Guillaume Poulin;2015-02-14 01:56:43 +0800;luigi importable in py3k

==

luigi/__init__.py
luigi/task.py
==================
4e7e1a1b;Guillaume Poulin;2015-02-14 01:45:05 +0800;fix ABCMeta

==

luigi/contrib/hive.py
luigi/target.py
luigi/task_history.py
luigi/worker.py
==================
44312603;Guillaume Poulin;2015-02-14 01:13:55 +0800;fix print statement

==

luigi/hadoop.py
luigi/lock.py
luigi/mrrunner.py
luigi/process.py
==================
8e4b2347;Guillaume Poulin;2015-02-14 01:00:44 +0800;fix cPickle

==

luigi/mrrunner.py
luigi/scheduler.py
==================
515cd638;Guillaume Poulin;2015-02-14 00:58:15 +0800;fix urllib in rpc

==

luigi/rpc.py
==================
e3ec5f46;Guillaume Poulin;2015-02-14 00:33:21 +0800;less ugly import loop handling

==

luigi/interface.py
luigi/worker.py
==================
28552aec;Guillaume Poulin;2015-02-14 00:06:00 +0800;fix atomic_file

==

luigi/file.py
==================
d258a75a;Guillaume Poulin;2015-02-13 23:30:10 +0800;fix sigpipe test

==

test/test_sigpipe.py
==================
5636ce32;Guillaume Poulin;2015-02-13 23:29:13 +0800;actually fix the loop

==

luigi/interface.py
luigi/worker.py
==================
b48fca15;Guillaume Poulin;2015-02-13 23:18:33 +0800;break import loop

==

luigi/interface.py
==================
0517974d;Guillaume Poulin;2015-02-13 23:06:38 +0800;atomic_file inherit TextIOWrapper

==

luigi/file.py
==================
a62fe0fa;Guillaume Poulin;2015-02-13 22:50:32 +0800;fixe relative import

==

luigi/__init__.py
luigi/configuration.py
luigi/db_task_history.py
luigi/file.py
luigi/hadoop.py
luigi/interface.py
luigi/mock.py
luigi/parameter.py
luigi/rpc.py
luigi/s3.py
luigi/scheduler.py
luigi/server.py
luigi/task.py
luigi/task_history.py
luigi/util.py
luigi/worker.py
==================
f6cb70fc;Erik Bernhardsson;2015-02-13 22:30:16 -0500;Fixed fix for #743

==

luigi/parameter.py
test/hdfs_test.py
==================
38624dbf;Erik Bernhardsson;2015-02-13 21:27:12 -0500;Merge pull request #746 from spotify/erikbern/fix-743
Fix for #743 + unit test
==
==================
841120d4;Erik Bernhardsson;2015-02-13 21:21:02 -0500;Fix for #743 + unit test

==

test/hdfs_test.py
==================
a7f8f2b1;Arash Rouhani;2015-02-12 20:58:23 +0100;Merge pull request #741 from RUNDSP/feature/hadoop-atomic-disable-pr
Allow disabling Hadoop atomic output and S3 input/output in JobRunner
==
==================
1631cd71;Mike Placentra;2015-02-12 14:03:49 -0500;#741 HadoopJobRunner: allow S3 in/out and disabling atomic output

==

luigi/hadoop.py
==================
175edf98;Erik Bernhardsson;2015-02-11 17:19:45 -0500;Merge pull request #742 from gouthambs/squashed_sqlabugs
Squashed sqlabugs branch
==
==================
19f3937b;Gouthaman Balaraman;2015-02-11 12:46:47 -0800;Squashed sqlabugs branch

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
a6d6e129;Erik Bernhardsson;2015-02-11 07:00:30 -0500;bumped version to 1.0.24

==

setup.py
==================
aca29ba5;Erik Bernhardsson;2015-02-10 22:08:40 -0500;Merge pull request #739 from spotify/erikbern/fix-738
Resolve #738 by requiring positional params to be significant
==
==================
f5c33160;Erik Bernhardsson;2015-02-10 21:06:41 -0500;Resolve #738 by requiring positional params to be significant

==

luigi/task.py
test/hadoop_test.py
test/parameter_test.py
==================
131726cc;Erik Bernhardsson;2015-02-10 21:09:09 -0500;Merge pull request #736 from Houzz/nonzero_count_updates
Sets task counts properly when not visible
==
==================
ce580c61;Erik Bernhardsson;2015-02-10 21:08:48 -0500;Merge pull request #737 from spotify/erikbern/task-history-fix
Fixes for some issues with task history
==
==================
af81fe0c;Erik Bernhardsson;2015-02-10 20:47:31 -0500;Fixes for some issues with task history
See https://github.com/spotify/luigi/commit/7707525a4f929226acfb0cd10e5667ddee8ec9cd

==

luigi/scheduler.py
luigi/worker.py
test/task_history_test.py
==================
e798d8ad;Dave Buchfuhrer;2015-02-10 14:30:01 -0800;Sets task counts properly when not visible
This fixes a bug in which loading a dependency graph or visualiser page would
lead to all counts being zero. The count updates were being unnecessarily
limited to only visible groups, so this lifts that restriction. Count update
correctness is maintained because the lines computing the counts are not
affected.

==

luigi/static/visualiser/js/visualiserApp.js
==================
11c69ace;Erik Bernhardsson;2015-02-10 09:06:33 -0500;Merge pull request #735 from spotify/erikbern/daemon
unit test for daemon
==
==================
3f80d3cd;Erik Bernhardsson;2015-02-10 08:05:30 -0500;Merge pull request #733 from spotify/erikbern/remove-hdp
Remove hdp from tox
==
==================
c379e3d1;Erik Bernhardsson;2015-02-10 07:05:32 -0500;unit test for daemon

==

test/bin_test.py
==================
babc75f8;Erik Bernhardsson;2015-02-10 06:50:36 -0500;Remove hdp from tox
Hadoop builds are super slow and Travis doesn't fully parallelize the builds. This should cut down build times by a third at least. CDH and HDP should be almost entirely correlated (in fact we don't have a single check in the code for it)

==

.travis.yml
==================
8aca2585;Erik Bernhardsson;2015-02-10 06:53:39 -0500;Bumped to 1.0.23 due to another issue in bin/luigid

==

setup.py
==================
af47ea1a;Erik Bernhardsson;2015-02-10 06:52:06 -0500;Merge pull request #732 from splusminusx/patch-1
Pass sys.argv to daemon main function.
==
==================
7734f4c6;splusminusx;2015-02-10 13:25:21 +0300;Pass sys.argv to daemon main function.

==

bin/luigid
==================
7a235e75;Erik Bernhardsson;2015-02-09 23:20:07 -0500;Fixed an issue with bin/luigid and bumped to 1.0.22

==

setup.py
==================
f577612d;Erik Bernhardsson;2015-02-09 23:00:35 -0500;Merge pull request #730 from spotify/erikbern/core
changed EnvironmentParamsContainer -> core
==
==================
a9605c4d;Erik Bernhardsson;2015-02-09 23:00:26 -0500;Merge pull request #729 from spotify/erikbern/fix-luigid
Fixed an issue causing luigid not to work in 1.0.21
==
==================
12bbc328;Erik Bernhardsson;2015-02-09 22:18:28 -0500;changed EnvironmentParamsContainer -> core
This will nudge people to use the new config paths

==

luigi/interface.py
test/cmdline_test.py
test/interface_test.py
test/parameter_test.py
==================
d6e3ae01;Erik Bernhardsson;2015-02-09 21:53:23 -0500;Added test for ./bin/luigid
also changed class methods into object methods

==

bin/luigid
test/bin_test.py
test/server_test.py
==================
da14767b;Erik Bernhardsson;2015-02-09 21:22:23 -0500;Fixed an issue causing luigid not to work in 1.0.21
Also fixed the tests to catch this going forward

==

luigi/server.py
test/server_test.py
==================
51c5281e;Erik Bernhardsson;2015-02-09 22:51:56 -0500;Merge pull request #731 from spotify/erikbern/mechanize-doc
removed mechanize links
==
==================
f8d455ea;Erik Bernhardsson;2015-02-09 22:45:42 -0500;removed mechanize links since docs build is failing in 2.7 due to 404 error

==

README.rst
doc/example_top_artists.rst
==================
c15bc361;Uldis Barbans;2015-02-09 22:26:59 +0100;Merge pull request #728 from spotify/ulzha/range
enable range use with luigi.rdbms.CopyToTable
==
==================
56c232fb;Uldis Barbans;2015-02-09 13:49:06 +0100;enable range use with luigi.rdbms.CopyToTable

==

debian/control
luigi/contrib/rdbms.py
luigi/task.py
luigi/tools/range.py
test/postgres_test.py
test/requirements.txt
==================
12a34cd5;Erik Bernhardsson;2015-02-08 23:31:06 -0500;1.0.21 release

==

setup.py
==================
10a2f671;Erik Bernhardsson;2015-02-08 15:57:31 -0500;Merge pull request #727 from spotify/erikbern/scheduler-config
Use new-style config mechanism for the scheduler
==
==================
7707525a;Erik Bernhardsson;2015-02-07 16:17:56 -0500;Use new-style config mechanism for the scheduler
Also removed _create_scheduler

==

luigi/scheduler.py
luigi/server.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
==================
788f4dea;Erik Bernhardsson;2015-02-08 02:16:13 -0500;Merge pull request #726 from spotify/erikbern/config-path
Use config_path only as a fallback
==
==================
6ce75253;Erik Bernhardsson;2015-02-07 18:11:57 -0500;Silenced some PEP8 issues
that we suddenly started getting errors for.

==

tox.ini
==================
aa9fe1b1;Erik Bernhardsson;2015-02-07 18:07:41 -0500;Use config_path only as a fallback

==

luigi/parameter.py
test/parameter_test.py
==================
3f9acbe5;Erik Bernhardsson;2015-02-06 14:49:17 -0500;Merge pull request #720 from spotify/erikbern/hive-stuff
Some small changes to the Hive support
==
==================
ee14dddb;Erik Bernhardsson;2015-02-06 08:08:58 -0500;Added test to run a hive task and mock out the hive command
Had to change a couple of things in luigi.contrib.hive (don't determine default client in global scope)

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
d159dd52;Erik Bernhardsson;2015-02-06 07:24:23 -0500;Fixed paths in Hive tests, moved old Hive tests

==

test/_hive_test.py
test/contrib/hive_test.py
==================
ccbaad77;Erik Bernhardsson;2015-02-05 23:13:49 -0500;Added redirect

==

luigi/hive.py
==================
a1a09a9c;Erik Bernhardsson;2015-02-05 23:07:12 -0500;Moved files

==

luigi/contrib/hive.py
test/contrib/hive_test.py
==================
85d2ffed;Erik Bernhardsson;2015-02-06 13:25:51 -0500;Merge pull request #724 from steenzout/fix_some_landscape_smells
fix smells reported by landscape.
==
==================
bf119073;steenzout;2015-02-06 09:12:24 -0700;fix smells reported by landscape.
* no exception type(s) specified
* specify string format arguments as logging function parameters
* removed unused import
* local variable is assigned but never used

==

luigi/contrib/esindex.py
luigi/contrib/pig.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
luigi/contrib/sqla.py
luigi/contrib/target.py
luigi/format.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/parameter.py
luigi/process.py
luigi/s3.py
luigi/scheduler.py
luigi/target.py
luigi/task.py
luigi/tools/range.py
luigi/util.py
luigi/worker.py
==================
2976bc01;Erik Bernhardsson;2015-02-06 11:40:31 -0500;Merge pull request #723 from spotify/erikbern/run-contrib-tests
Activated all tests in test.contrib
==
==================
33430ab8;Erik Bernhardsson;2015-02-06 10:15:17 -0500;Had to fix 2.6 compatibility for test.contrib.sqla_test

==

test/contrib/sqla_test.py
==================
556128c5;Erik Bernhardsson;2015-02-06 09:14:24 -0500;Activated all tests in test.contrib
Realized they weren't running.

Before: Ran 407 tests in 40.602s
After:  Ran 426 tests in 42.342s

==

test/contrib/__init__.py
==================
0f14d071;Erik Bernhardsson;2015-02-06 08:15:25 -0500;Merge pull request #721 from steenzout/cleanup_examples
enhanced examples documentation
==
==================
446b9b5c;Erik Bernhardsson;2015-02-06 07:48:39 -0500;Merge pull request #722 from spotify/arash/remove-spammy-email-output
Don't be oververbose in send_email()
==
==================
3fb25c23;Arash Rouhani;2015-02-06 13:17:54 +0100;Don't be oververbose in send_email()
    ERROR: [pid 20172] Worker Worker(salt=640365789, workers=1, host=myhost.spotify.com, username=arash, pid=20172) failed    AppleIAPDailyCohortsLuigiQa(test=False)
    Traceback (most recent call last):
      File "/usr/lib/python2.6/dist-packages/luigi/worker.py", line 87, in run
        task_gen = self.task.run()
      File "/tmp/tmp9vkWs9/python/imported_luigi_tasks/in_app_purchases.py", line 123, in run
        raise Exception()
    Exception
    INFO: Sending warning email to 'dataex-squad+notifications@spotify.com'
    DEBUG: Emailing:
    -------------
    To: ('myhost@spotify.com',)
    From: luigi-client@myhost.spotify.com
    Subject: Luigi: MyTask() FAILED
    Message:
    Runtime error:
    Traceback (most recent call last):
      File "/usr/lib/python2.6/dist-packages/luigi/worker.py", line 87, in run
        task_gen = self.task.run()
      File "/tmp/tmp9vkWs9/python/imported_luigi_tasks/in_app_purchases.py", line 123, in run
        raise Exception()
    Exception
    
    -------------

This is TOTALLY superflous information. Instead, I think we can just keep the
INFO line. The DEBUG line isn't useful even when debugging, because all of the
information is trivially retrieved anyway. Here's what I propose:


    ERROR: [pid 20172] Worker Worker(salt=640365789, workers=1, host=myhost.spotify.com, username=arash, pid=20172) failed    AppleIAPDailyCohortsLuigiQa(test=False)
    Traceback (most recent call last):
      File "/usr/lib/python2.6/dist-packages/luigi/worker.py", line 87, in run
        task_gen = self.task.run()
      File "/tmp/tmp9vkWs9/python/imported_luigi_tasks/in_app_purchases.py", line 123, in run
        raise Exception()
    Exception
    INFO: Sending warning email to 'dataex-squad+notifications@spotify.com'

This should be easier to read.
==

luigi/notifications.py
==================
63b6646d;steenzout;2015-02-05 22:32:16 -0700;enhanced examples documentation.
* added coding statement where it was missing
* added license where it was missing
* added docstring documentation with details that should make it easy to decipher what is going on

==

examples/__init__.py
examples/dynamic_requirements.py
examples/elasticsearch_index.py
examples/foo.py
examples/ftp_experiment_outputs.py
examples/spark_als.py
examples/ssh_remote_execution.py
examples/terasort.py
examples/top_artists.py
examples/wordcount.py
examples/wordcount_hadoop.py
==================
a944f7ab;Erik Bernhardsson;2015-02-05 23:01:36 -0500;hdfs config fix

==

luigi/hdfs.py
==================
cb1915ec;Erik Bernhardsson;2015-02-05 21:39:01 -0500;Merge pull request #711 from steenzout/landscape_errors_pig
fix landscape errors in luigi.contrib.pig
==
==================
18303d64;steenzout;2015-02-04 13:23:48 -0700;fixed landscape warnings.
* added missing sys import
* remove unnecessary import of datetime

==

luigi/contrib/pig.py
==================
84ccf78d;Erik Bernhardsson;2015-02-05 15:49:54 -0500;Merge pull request #718 from steenzout/fix_license_header
standardized Apache 2.0 license header
==
==================
ed5bff72;steenzout;2015-02-04 19:48:12 -0700;standardized Apache 2.0 license header.
updated copyright notice to add range of years: 2012-2015.

==

LICENSE
luigi/__init__.py
luigi/configuration.py
luigi/contrib/__init__.py
luigi/contrib/esindex.py
luigi/contrib/ftp.py
luigi/contrib/mysqldb.py
luigi/contrib/pig.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
luigi/contrib/sparkey.py
luigi/contrib/sqla.py
luigi/contrib/ssh.py
luigi/contrib/target.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/deprecate_kwarg.py
luigi/event.py
luigi/file.py
luigi/format.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/mrrunner.py
luigi/notifications.py
luigi/parameter.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scalding.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/task_status.py
luigi/tools/__init__.py
luigi/tools/parse_task.py
luigi/tools/range.py
luigi/util.py
luigi/webhdfs.py
luigi/worker.py
test/_esindex_test.py
test/_hive_test.py
test/_mysqldb_test.py
test/_postgres_test.py
test/_s3_test.py
test/_test_ftp.py
test/_test_ssh.py
test/central_planner_test.py
test/clone_test.py
test/cmdline_test.py
test/contrib/_webhdfs_test.py
test/contrib/pig_test.py
test/contrib/sqla_test.py
test/contrib/target_test.py
test/create_packages_archive_root/module.py
test/create_packages_archive_root/package/__init__.py
test/create_packages_archive_root/package/submodule.py
test/create_packages_archive_root/package/submodule_with_absolute_import.py
test/create_packages_archive_root/package/submodule_without_imports.py
test/create_packages_archive_root/package/subpackage/__init__.py
test/create_packages_archive_root/package/subpackage/submodule.py
test/customized_run_test.py
test/date_hour_test.py
test/date_interval_test.py
test/date_minute_test.py
test/db_task_history_test.py
test/decorator_test.py
test/dynamic_import_test.py
test/email_test.py
test/factorial_test.py
test/fib_test.py
test/file_test.py
test/foo_module.py
test/hadoop_test.py
test/hdfs_test.py
test/helpers.py
test/hive_test.py
test/instance_test.py
test/instance_wrap_test.py
test/interface_test.py
test/lock_test.py
test/minicluster.py
test/mock_test.py
test/most_common_test.py
test/namespace_test.py
test/namespace_test_helper.py
test/optparse_test.py
test/other_module.py
test/parameter_test.py
test/priority_test.py
test/range_test.py
test/recursion_test.py
test/redshift_test.py
test/remote_scheduler_test.py
test/rpc_test.py
test/runtests.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/server_test.py
test/set_task_name_test.py
test/snakebite_test.py
test/spark_test.py
test/subtask_test.py
test/target_test.py
test/task_history_test.py
test/task_test.py
test/test_event_callbacks.py
test/test_sigpipe.py
test/test_ssh.py
test/util_previous_test.py
test/worker_multiprocess_test.py
test/worker_parallel_scheduling_test.py
test/worker_task_test.py
test/worker_test.py
test/wrap_test.py
==================
cdd403af;Erik Bernhardsson;2015-02-05 06:49:22 -0500;Merge pull request #715 from spotify/ulzha/range
More documentation to RangeDaily/RangeHourly
==
==================
dc9f6a81;Erik Bernhardsson;2015-02-05 06:47:52 -0500;Merge pull request #716 from kalaidin/master
Fixed #713.
==
==================
234972b3;Erik Bernhardsson;2015-02-05 05:44:48 -0500;Merge pull request #684 from boosh/recheck-dependencies
Recheck dependencies (relates to issue #683)
==
==================
d4ea382a;Uldis Barbans;2015-02-05 10:51:11 +0100;More documentation to RangeDaily/RangeHourly

==

doc/luigi_patterns.rst
luigi/tools/range.py
==================
73164054;Al B;2015-02-05 09:29:03 +0000;Fix PEP8 issues

==

test/worker_external_task_test.py
==================
d27cde22;Erik Bernhardsson;2015-02-04 18:14:18 -0500;Merge pull request #707 from themalkolm/patch-19
Use @ trick to avoid escaping every / in sed script.
==
==================
6a240203;Erik Bernhardsson;2015-02-04 18:13:58 -0500;Merge pull request #708 from themalkolm/patch-20
Remove the temporary README.rst
==
==================
fa40c601;Erik Bernhardsson;2015-02-04 18:13:02 -0500;Merge pull request #712 from themalkolm/patch-22
Sort all imports
==
==================
00d144da;Al B;2015-02-04 22:31:41 +0000;Remove the extra call to prune in the scheduler, and instead decorate the call to get_work in the test that needed it.

==

luigi/scheduler.py
test/worker_external_task_test.py
==================
023a0958;Alexander Krasnukhin;2015-02-04 23:02:26 +0100;Sort all imports. Because we can.
$ tox -e isort

==

bin/deps.py
bin/luigi-grep.py
examples/dynamic_requirements.py
examples/elasticsearch_index.py
examples/foo.py
examples/ssh_remote_execution.py
examples/top_artists.py
examples/wordcount_hadoop.py
luigi/configuration.py
luigi/contrib/esindex.py
luigi/contrib/ftp.py
luigi/contrib/pig.py
luigi/contrib/redshift.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
luigi/contrib/sqla.py
luigi/contrib/ssh.py
luigi/contrib/target.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/file.py
luigi/format.py
luigi/hadoop.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/mrrunner.py
luigi/notifications.py
luigi/parameter.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scalding.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/tools/parse_task.py
luigi/tools/range.py
luigi/util.py
luigi/webhdfs.py
luigi/worker.py
test/_esindex_test.py
test/_hive_test.py
test/_mysqldb_test.py
test/_postgres_test.py
test/_s3_test.py
test/_test_ftp.py
test/_test_ssh.py
test/central_planner_test.py
test/clone_test.py
test/cmdline_test.py
test/contrib/_webhdfs_test.py
test/contrib/pig_test.py
test/contrib/sqla_test.py
test/contrib/target_test.py
test/create_packages_archive_root/package/submodule_with_absolute_import.py
test/customized_run_test.py
test/date_hour_test.py
test/date_interval_test.py
test/date_minute_test.py
test/db_task_history_test.py
test/decorator_test.py
test/dynamic_import_test.py
test/email_test.py
test/factorial_test.py
test/fib_test.py
test/file_test.py
test/hadoop_test.py
test/hdfs_test.py
test/hive_test.py
test/instance_test.py
test/instance_wrap_test.py
test/interface_test.py
test/lock_test.py
test/minicluster.py
test/mock_test.py
test/namespace_test.py
test/optparse_test.py
test/parameter_test.py
test/priority_test.py
test/range_test.py
test/recursion_test.py
test/redshift_test.py
test/rpc_test.py
test/runtests.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/set_task_name_test.py
test/snakebite_test.py
test/spark_test.py
test/subtask_test.py
test/task_history_test.py
test/task_test.py
test/test_event_callbacks.py
test/test_sigpipe.py
test/test_ssh.py
test/util_previous_test.py
test/worker_multiprocess_test.py
test/worker_parallel_scheduling_test.py
test/worker_task_test.py
test/worker_test.py
test/wrap_test.py
==================
1ef45e57;Alexander Krasnukhin;2015-02-04 22:59:06 +0100;Add isort target.

==

tox.ini
==================
515be876;Erik Bernhardsson;2015-02-04 16:37:02 -0500;Merge pull request #710 from steenzout/landscape_errors_redshift
usage of string format as logging function parameters
==
==================
09607557;Alexander Krasnukhin;2015-02-04 21:41:26 +0100;Remove the temporary README.rst
During docs generation we copy README.rst to doc/ and clean it up
a bit. Lets delete afterwards.

==

tox.ini
==================
7cac7325;Alexander Krasnukhin;2015-02-04 21:38:12 +0100;Use @ trick to avoid escaping every / in sed script.

==

tox.ini
==================
1660d038;steenzout;2015-02-04 13:20:16 -0700;usage of string format as logging function parameters. fixes 3 landscape errors on luigi.contrib.redshift.

==

luigi/contrib/redshift.py
==================
d7fd8971;Erik Bernhardsson;2015-02-04 15:03:56 -0500;Merge pull request #705 from mortardata/ddaniels_kill_redshift_sessions
Add task to kill open Redshift sessions
==
==================
9c922ae9;Erik Bernhardsson;2015-02-04 14:47:15 -0500;Merge pull request #696 from steenzout/sphinx_build_errors
sphinx build errors
==
==================
f07466e6;Erik Bernhardsson;2015-02-04 14:43:09 -0500;moving pig test to test.contrib

==

test/contrib/pig_test.py
==================
5c907d9e;Erik Bernhardsson;2015-02-04 14:42:31 -0500;Merge pull request #695 from mortardata/jkarn_pull_request_pig_task
Add Task for running Pig jobs.
==
==================
b0bdf508;Doug Daniels;2015-02-04 14:36:15 -0500;pep8: remove trailing whitespace

==

luigi/contrib/redshift.py
==================
a9b04c16;Doug Daniels;2015-02-04 14:32:48 -0500;Add task to kill open redshift sessions

==

luigi/contrib/redshift.py
==================
7d0b4ec1;steenzout;2015-02-03 11:19:16 -0700;fix sphinx build errors and enhanced .gitignore.
ignore autopep8 E309 since if class has docstring, it will be separated by blank line.

changed sqlalchemy import statements.

this is necessary to fix bug in sphinx-doc issue#1530:
https://github.com/sphinx-doc/sphinx/issues/1530

fixed luigi.interface.Interface.run sphinx complaints.
improved luigi.interface.run docstring.

fixed luigi.lock.getpcmd sphinx complaints.

fixed luigi.contrib.mysqldb.MySqlTarget docstring complaints and made 1st character of parameter description lowercase.

fixed luigi.contrib.redshift.RedshiftManifestTask sphinx complaints.

fixed sphinx SEVERE: Title level inconsistent.

fixed sphinx "ERROR: Unknown target name" errors.

fixed sphinx "WARNING: Explicit markup ends without a blank line" errors.

fixed sphinx "WARNING: Explicit markup ends without a blank line" errors.

fixed sphinx "Duplicate explicit target name: 'spotify'" error.

fixed broken URL to Yarn REST API.

fixed URL to oozie.

fixed URL for luigi-user Google group.
fixed URL to spotify.

changed URL to source code to make sphinx linkcheck pass.

added new readme.rst to exclude_pattern to fix sphinx complaint that it's not part of a table of content.
removed the html_static_path to fix sphinx build issue.

sphinx warnings now make the build break.

added docs-test tox environment to the travis build.
problems with documentation will now make the build break.

added more rules to .gitignore based on gitignore.io: Python, vim, OSX, Vagrant, PyCharm.

fixed sphinx warning to include luigi.tools.

merge tox docsapi with tox docs.
tox docsapi environment creates new files that might break the documentation generation so  moved the command into the tox docs environment.

synchronize README.rst in github and readthedocs.

copy of README.rst to doc directory.
URLs pointing to github changed to point to local files.
badges removed from the doc/README.rst.
added comments to build doc commands.
whitelist cp and sed commands.

README.rst added to sphinx exclude_patterns.
this will bypasses the warning sphinx gives due to the fact that README.rst is not part of a table of contents.

==

.gitignore
.travis.yml
README.rst
doc/api_overview.rst
doc/central_scheduler.rst
doc/conf.py
doc/configuration.rst
doc/example_top_artists.rst
doc/index.rst
luigi/contrib/mysqldb.py
luigi/contrib/redshift.py
luigi/db_task_history.py
luigi/hadoop.py
luigi/hdfs.py
luigi/interface.py
luigi/lock.py
tox.ini
==================
a1367f55;Jeremy Karn;2015-02-03 10:13:46 -0500;Pig Task
Adapted from code submitted to Luigi user list by Felix Gao:
* https://groups.google.com/forum/#!topic/luigi-user/BIqAChl8sdw

==

luigi/contrib/pig.py
test/pig_test.py
==================
d028434e;kalaidin;2015-02-04 19:30:17 +0300;BooleanParameter was renamed to BoolParameter.

==

luigi/tools/range.py
==================
0f50b7aa;Erik Bernhardsson;2015-02-04 10:41:11 -0500;Merge pull request #703 from spotify/erikbern/email-test
refactored email tests to get test coverage a bit higher
==
==================
4b858251;Al B;2015-02-04 14:36:57 +0000;Merged spotify/master

==
==================
ae084105;Al B;2015-02-04 14:25:51 +0000;Added tests for rechecking external dependencies. Added an extra call to prune().

==

luigi/scheduler.py
test/worker_external_task_test.py
==================
f9db4c18;kalaidin;2015-02-04 17:12:07 +0300;Handle hadoop command parameters. hadoop -> hadoop --config <>

==

luigi/hdfs.py
==================
ef0140b2;Erik Bernhardsson;2015-02-04 08:59:57 -0500;refactored email tests to get test coverage a bit higher

==

luigi/notifications.py
test/parameter_test.py
test/worker_test.py
==================
825b91bb;Al B;2015-02-04 11:35:31 +0000;Create a simple test that tests the mocks

==

test/worker_external_task_test.py
==================
cb73eb02;Erik Bernhardsson;2015-02-04 06:33:12 -0500;Merge pull request #672 from spotify/erikbern/remove-global-parameters
Remove global parameters
==
==================
8e9ddd19;Al B;2015-02-04 11:15:40 +0000;Fix test for re-evaluating external tasks while a workflow is running.

==

test/worker_external_task_test.py
==================
555cfbb8;Al B;2015-02-04 10:38:56 +0000;Create a test for re-evaluating external tasks while a workflow is running.

==

test/worker_external_task_test.py
==================
d7b2ef63;Arash Rouhani;2015-02-04 09:56:24 +0100;Merge pull request #702 from mortardata/ddaniels_redshift_table_create
Mortar Redshift improvements
==
==================
eafbc29a;Erik Bernhardsson;2015-02-03 18:07:59 -0500;hdfs.py ported to use new-style parameters
This new style makes it possible to override on runtime (using eg. --hdfs-namenode-port) but also use configuration file like previously

==

luigi/hdfs.py
==================
86352ab6;Doug Daniels;2015-02-03 19:10:39 -0500;Add support for passing Redshift table attributes to create table statement (see http://docs.aws.amazon.com/redshift/latest/dg/r_CREATE_TABLE_NEW.html)

==

luigi/contrib/redshift.py
==================
f2d381a6;Doug Daniels;2015-02-03 18:53:16 -0500;Add support for table truncation

==

luigi/contrib/redshift.py
==================
cf025ee0;Doug Daniels;2015-02-03 18:36:52 -0500;Fix bug where Redshift began throwing a different exception when table does not exist and cleanup pep8 warnings

==

luigi/contrib/redshift.py
==================
7ae7e177;Erik Bernhardsson;2015-02-03 17:47:08 -0500;Merge pull request #698 from themalkolm/patch-18
Add docsapi target to tox.
==
==================
0a6f3b3d;Erik Bernhardsson;2015-02-01 12:30:13 -0500;More tests

==

test/parameter_test.py
==================
8064956b;Erik Bernhardsson;2015-02-01 12:14:00 -0500;Renamed is_config to is_without_section
Also made the default Config task include the section in the command line arguments

==

luigi/__init__.py
luigi/interface.py
luigi/parameter.py
luigi/task.py
==================
32105b43;Erik Bernhardsson;2015-01-26 23:19:10 -0500;Added deprecation warning for is_global

==

luigi/parameter.py
==================
16bcb602;Erik Bernhardsson;2015-01-26 22:23:17 -0500;New Config class
This class adds support for "taskless" parameters

==

luigi/__init__.py
luigi/interface.py
luigi/parameter.py
luigi/task.py
test/cmdline_test.py
test/parameter_test.py
==================
72dc3018;Erik Bernhardsson;2015-02-03 17:38:33 -0500;Merge pull request #697 from themalkolm/patch-17
Use sphinx-build as it is more Windows friendly.
==
==================
cb48859c;Erik Bernhardsson;2015-02-03 17:37:57 -0500;Merge pull request #700 from steenzout/fix_access_path
fix for #699
==
==================
6479a26b;steenzout;2015-02-03 15:08:53 -0700;fix for access to self.path is done before definition. added docstring.

==

luigi/contrib/ftp.py
==================
024ee13e;Alexander Krasnukhin;2015-02-03 22:48:54 +0100;Update doc/api
$ tox -e docsapi
$ git add doc/api

==

doc/api/luigi.tools.rst
==================
0877d723;Alexander Krasnukhin;2015-02-03 22:48:30 +0100;Add docsapi target to tox.

==

tox.ini
==================
b7180e3c;Alexander Krasnukhin;2015-02-03 22:37:46 +0100;Use sphinx-build as it is more Windows friendly.
* Use sphinx-build
* User should not read tox.ini in order to understand how to use it,
  so use html as default output format.
* Kept same output dir for html just in case.

==

tox.ini
==================
0f386c86;Erik Bernhardsson;2015-02-03 16:07:15 -0500;Merge pull request #693 from steenzout/docstring_standardization
docstring standardization
==
==================
7f458824;steenzout;2015-02-03 11:33:57 -0700;autopep8 changes.

==

luigi/tools/range.py
==================
fc151a7d;steenzout;2015-02-03 11:31:03 -0700;ignore autopep8 E309 since if class has docstring, it will be separated by blank line.

==

tox.ini
==================
58293e08;steenzout;2015-02-03 11:22:41 -0700;tox ini settings now consistent.

==

tox.ini
==================
35c777b8;steenzout;2015-02-03 11:19:16 -0700;fixed PEP8 error.

==

luigi/interface.py
==================
580cd8de;steenzout;2015-02-02 13:23:34 -0700;docstring standardization.
added newlines to improve readability.
changed the wording in the "For the purpose of this exercise" paragraph.

fixed sphinx underline complaint.

Python code now has proper syntax highlighting.

added docs env in tox.ini.

added declaration for ini code-block.
changed python code declaration to code-block.

fixed typo.

==

doc/README.md
doc/api/luigi.contrib.rst
doc/api_overview.rst
doc/central_scheduler.rst
doc/command_line.rst
doc/example_top_artists.rst
doc/execution_model.rst
doc/luigi_patterns.rst
doc/more_info.rst
doc/programmatic_execution.rst
luigi/__init__.py
luigi/configuration.py
luigi/contrib/__init__.py
luigi/contrib/esindex.py
luigi/contrib/ftp.py
luigi/contrib/mysqldb.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
luigi/contrib/sparkey.py
luigi/contrib/sqla.py
luigi/contrib/ssh.py
luigi/contrib/target.py
luigi/contrib/webhdfs.py
luigi/db_task_history.py
luigi/deprecate_kwarg.py
luigi/file.py
luigi/format.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/mrrunner.py
luigi/notifications.py
luigi/parameter.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/task_status.py
luigi/tools/__init__.py
luigi/tools/parse_task.py
luigi/tools/range.py
luigi/util.py
luigi/worker.py
tox.ini
==================
90a1d44d;Erik Bernhardsson;2015-02-03 08:01:45 -0500;Merge pull request #694 from Houzz/ftp_pr
Improvement on ftp support
==
==================
3dae1c21;Erik Bernhardsson;2015-02-03 07:23:12 -0500;Merge pull request #692 from spotify/erikbern/argparse-2.7.9
Fixed a bug in argparse for Python 2.7.9 + added some new tests
==
==================
b62ee316;Kyle Sun;2015-01-27 16:48:05 -0800;extend ftp to support 1) port, 2) modified time, 3) tls

==

luigi/contrib/ftp.py
test/_test_ftp.py
==================
42b62825;Erik Bernhardsson;2015-02-02 19:33:08 -0500;Fixed a bug in argparse for Python 2.7.9 + added some new tests

==

luigi/interface.py
test/cmdline_test.py
test/dynamic_import_test.py
test/parameter_test.py
==================
c2f8c233;Erik Bernhardsson;2015-02-02 16:01:03 -0500;Merge pull request #691 from spotify/erikbern/reset-global-params
Reset global variables between runs
==
==================
d5c5d741;Erik Bernhardsson;2015-02-02 15:05:43 -0500;Trying to remove default=None for parameters
Found some claims that a regression was introduced in Python 2.7.9 that might cause issues:
- https://github.com/nickstenning/honcho/pull/121
- http://code.activestate.com/lists/python-dev/134014/

==

luigi/parameter.py
==================
653785e1;Erik Bernhardsson;2015-02-02 14:44:32 -0500;Reset global variables between runs

==

luigi/parameter.py
test/dynamic_import_test.py
test/fib_test.py
test/optparse_test.py
test/set_task_name_test.py
==================
472deb4d;Erik Bernhardsson;2015-02-02 11:45:11 -0500;Merge pull request #690 from spotify/erikbern/range-test-speedup
Improve performance of slow test
==
==================
960a27f4;Erik Bernhardsson;2015-02-02 11:44:53 -0500;Merge pull request #689 from spotify/erikbern/cmdline-speedup
Performance fix in argparse interface
==
==================
388b6ec0;Erik Bernhardsson;2015-02-02 11:07:02 -0500;Improve performance of slow test
nosetests -a '!minicluster':

Before: Ran 395 tests in 84.539s
After:  Ran 395 tests in 57.196s

==

test/range_test.py
==================
57a2100f;Erik Bernhardsson;2015-02-02 10:24:26 -0500;Performance fix in argparse interface
Instead of adding all global parameters to all subparsers (leading to a O(n^2) complexity where n is the number of tasks), just figure out the subparser that's needed and add it to that one

Running nosetests test/parameter_test.py:

Before: Ran 62 tests in 5.248s
After:  Ran 62 tests in 1.381s

Running nosetests -a '!minicluster':

Before: Ran 395 tests in 84.033s
After:  Ran 395 tests in 64.194s

==

luigi/interface.py
==================
99eb230c;Arash Rouhani;2015-02-02 11:57:47 +0100;Merge pull request #671 from plinton/master
if the glob is not present at all, a FileNotFoundException is raised. Ca...
==
==================
5ebd6f69;Paul Ellis Linton;2015-01-27 00:36:22 +0100;Check if glob exists before attempting to listdir.
RangeHourly attempts to listdir for each constrained glob.
The snakebite client in particular throws a
FileNotFoundException if the glob does not exist at all,
thus a check needs to be made before the listdir.

==

luigi/tools/range.py
test/range_test.py
==================
3ac15ead;Erik Bernhardsson;2015-02-01 11:19:47 -0500;Merge pull request #682 from spotify/erikbern/configuration
Pull parameter default from config
==
==================
2f80d011;Erik Bernhardsson;2015-01-31 16:27:09 -0500;More tests

==

test/parameter_test.py
==================
f91248c2;Erik Bernhardsson;2015-01-27 19:07:04 -0500;Use default values pulled from configuration for all parameters

==

doc/configuration.rst
luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
7e34b26f;Uldis Barbans;2015-01-30 16:14:22 -0500;Merge pull request #685 from spotify/ulzha/range
Add RangeDaily

Next up:
* simple glue code to apply it to CopyToTable and elsewhere,
* documentation...
==
==================
293316c4;Uldis Barbans;2015-01-30 15:07:36 -0500;fix pep8

==

luigi/tools/range.py
test/range_test.py
==================
ac14354e;Uldis Barbans;2015-01-30 02:44:04 -0500;tweak formatting so log output looks consistent with parameter serialization

==

luigi/tools/range.py
test/range_test.py
==================
410597a6;Uldis Barbans;2015-01-30 02:27:23 -0500;add RangeDaily
More generalization related verbosity ensued, to smooth over the fact
that DateParameter's value is datetime.date, not datetime.datetime,
which I want all arithmetic to be in.

==

luigi/tools/range.py
test/range_test.py
==================
a42fcf96;Uldis Barbans;2015-01-30 00:53:05 -0500;refactor out RangeBase (in preparation to reuse for RangeDaily)
Perform datetime arithmetic more systematically, therefore adjustments by one here and there.

Conflicts:
	luigi/tools/range.py
	test/range_test.py

==

luigi/tools/range.py
test/range_test.py
==================
a6ca0f5d;Erik Bernhardsson;2015-01-30 11:59:23 -0500;Merge pull request #688 from steenzout/python_classifiers
python classifiers
==
==================
d05d8905;steenzout;2015-01-30 09:36:18 -0700;added python classifiers.

==

setup.py
==================
54260253;Erik Bernhardsson;2015-01-29 10:48:29 -0500;Reverting previous commit
Turns out coveralls calculates total coverage correctly (for the whole project), but doesn't display coverage per file correctly. I think total coverage is more important (and with the last commit it went down from 77% to 70%). We can always run local test to get per-file coverage

==

tox.ini
==================
1dff0ac1;Erik Bernhardsson;2015-01-29 10:32:23 -0500;Only upload coverage stats for non-hdfs tests
Ideally we should merge with Hadoop tests, but I have no idea how to do that

==

tox.ini
==================
e29912da;Al B;2015-01-29 11:54:59 +0000;Update docs

==

doc/configuration.rst
==================
8daac075;Al B;2015-01-29 10:49:04 +0000;Update docs. Add a config setting to enable retrying external tasks.

==

doc/configuration.rst
luigi/worker.py
==================
e8c80cbf;Al B;2015-01-29 10:16:34 +0000;Recheck incomplete dependencies periodically, not just upon initial invocation.

==

luigi/worker.py
==================
7a2a95a2;Arash Rouhani;2015-01-28 15:24:54 +0100;Merge pull request #680 from spotify/erikbern/landscape
Fixed various things that Landscape was complaining about
==
==================
0b5d6437;Erik Bernhardsson;2015-01-28 08:09:22 -0500;Merge pull request #681 from spotify/erikbern/param-cleanup
removed some deprecated methods and simplified the code
==
==================
a045647a;Erik Bernhardsson;2015-01-27 17:22:21 -0500;Fixed various things that Landscape was complaining about

==

examples/top_artists.py
examples/wordcount.py
luigi/configuration.py
luigi/contrib/target.py
luigi/hadoop.py
luigi/hive.py
luigi/mock.py
luigi/mrrunner.py
luigi/scheduler.py
luigi/target.py
luigi/task.py
luigi/util.py
==================
c6107055;Erik Bernhardsson;2015-01-27 17:50:06 -0500;removed some deprecated methods and simplified the code

==

luigi/parameter.py
==================
1939a06c;Erik Bernhardsson;2015-01-27 16:48:22 -0500;Merge pull request #678 from themalkolm/patch-13
Run autopep8 on repo in aggressive mode
==
==================
486dfe67;Erik Bernhardsson;2015-01-27 16:16:08 -0500;Merge pull request #676 from themalkolm/patch-14
Do not use old-style classes.
==
==================
12c2e588;Erik Bernhardsson;2015-01-27 16:15:53 -0500;Merge pull request #677 from themalkolm/patch-15
Remove unused import.
==
==================
3c2032fe;Erik Bernhardsson;2015-01-27 16:15:19 -0500;Merge pull request #675 from themalkolm/patch-12
Rename local variable in pythonic way.
==
==================
47b3d73f;Alexander Krasnukhin;2015-01-27 21:14:25 +0100;Rename local variable in pythonic way.
Local variables should be lowercased and use underscore to connect
words. Lets follow the style around the repo.

==

luigi/interface.py
==================
5d68df43;Alexander Krasnukhin;2015-01-27 21:41:32 +0100;Remove unused import.
warnings are no longer used in util.py

==

luigi/util.py
==================
56e13cb4;Alexander Krasnukhin;2015-01-27 21:39:54 +0100;Do not use old-style classes.

==

luigi/contrib/target.py
luigi/event.py
==================
62c62240;Alexander Krasnukhin;2015-01-27 21:17:05 +0100;Run autopep8 on repo.
$ tox -e autopep8
$ git add -u

==

luigi/contrib/redshift.py
luigi/contrib/ssh.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/hadoop.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/lock.py
luigi/mrrunner.py
luigi/parameter.py
luigi/postgres.py
luigi/process.py
luigi/server.py
test/_test_ssh.py
test/hdfs_test.py
test/lock_test.py
test/most_common_test.py
test/parameter_test.py
test/server_test.py
==================
8b161861;Alexander Krasnukhin;2015-01-27 21:17:41 +0100;Run autopep8 in more aggressive mode.
This mode allows autopep8 to slightly modify code to meet better
python practices.

==

tox.ini
==================
76891f13;Alexander Krasnukhin;2015-01-27 21:22:13 +0100;Do not use octal numbers.
Yep, 07 is an octal number used without any need. Lets remove the
leading zero.

==

test/date_minute_test.py
==================
ec2e57ad;Erik Bernhardsson;2015-01-27 13:29:32 -0500;Merge pull request #674 from themalkolm/patch-10
Usually first parameter of @classmethods is named cls.
==
==================
7c68e19c;Alexander Krasnukhin;2015-01-27 19:18:11 +0100;Usually first parameter of @classmethods is named cls.

==

luigi/date_interval.py
luigi/task.py
test/range_test.py
==================
de89c476;Arash Rouhani;2015-01-27 17:53:41 +0100;Merge pull request #605 from Tarrasch/add_rename2_for_snakebite
Add rename2 for snakebite
==
==================
4e26d389;Arash Rouhani;2015-01-15 18:15:06 +0100;Revert "Manually revert parts of spotify/luigi#522"
So now that move_dir has the same behavior as rename (in worst case,
better yet it'll use rename_dont_move). It makes sense for this to use
the move_dir abstraction.

This reverts commit 51a4c7ced81d5ddd99bad4eb5846220838343465.

==

luigi/hadoop.py
==================
5c564840;Arash Rouhani;2015-01-15 18:13:36 +0100;Use rename_dont_move in HdfsClient.move_dir()
Most of the contreversy in this commit is covered in the docs of the
move_dir function. So note that this commit does change behavior. If
your client supports rename_dont_move, this fixes a bug. Otherwise, it
fixes a bug but introduces another. See spotify/luigi#557.

==

luigi/hdfs.py
==================
08c92faa;Arash Rouhani;2015-01-15 17:53:14 +0100;Make rename_dont_move part of HdfsClient interface

==

luigi/contrib/target.py
luigi/hdfs.py
test/hdfs_test.py
==================
bf094aa6;Arash Rouhani;2015-01-15 17:33:09 +0100;Add support for rename_dont_move in snakebite

==

luigi/hdfs.py
setup.py
test/snakebite_test.py
==================
7ef35664;Erik Bernhardsson;2015-01-27 10:02:48 -0500;Merge pull request #670 from spotify/erikbern/rpc-cleanup
Removed the RemoteSchedulerResponder class
==
==================
ace47a3b;Erik Bernhardsson;2015-01-26 18:45:59 -0500;Removed the RemoteSchedulerResponder class

==

luigi/rpc.py
luigi/scheduler.py
luigi/server.py
==================
ff87a030;Erik Bernhardsson;2015-01-26 23:37:39 -0500;Merge pull request #673 from spotify/erikbern/pep8-more
pep8 fixes
==
==================
7513c4ee;Erik Bernhardsson;2015-01-26 23:13:24 -0500;pep8 fixes

==

luigi/parameter.py
luigi/tools/parse_task.py
==================
86d3d996;Arash Rouhani;2015-01-26 10:52:13 +0100;Enable HdfsClientTest
Also the `main():` part is not superseded by whatever things we have, in
form of tox and stuff. For instance you can run

    export TOX_ENV=hdp; export PYTHONPATH='';
    JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64 tox -e $TOX_ENV
    test/hdfs_test.py:AtomicHdfsOutputPipeTests.test_atomicity

To run a single test.

==

test/hdfs_test.py
==================
cd1c3098;Erik Bernhardsson;2015-01-26 17:18:32 -0500;Merge pull request #626 from themalkolm/rename_boolean_parameter_to_bool_parameter
Rename BooleanParameter to BoolParameter.
==
==================
785a462a;Erik Bernhardsson;2015-01-26 16:04:40 -0500;Merge pull request #669 from spotify/erikbern/pep8
pep8 fixes
==
==================
ee1ecba0;Erik Bernhardsson;2015-01-26 15:59:47 -0500;Merge pull request #668 from spotify/erikbern/task-id-to-name-and-params
Moved luigi.id_to_task_name_and_params to luigi.util
==
==================
06ac494b;Erik Bernhardsson;2015-01-26 15:51:02 -0500;pep8 fixes

==

luigi/parameter.py
luigi/rpc.py
test/parameter_test.py
tox.ini
==================
4833831f;Erik Bernhardsson;2015-01-26 12:00:18 -0500;Moved luigi.id_to_task_name_and_params to luigi.util
1. Because it's deprecated and people shouldn't use it
2. Because task.py is pretty cluttered
3. Because having it in task.py required people to install pyparsing

==

luigi/task.py
luigi/tools/parse_task.py
==================
25f97c72;Alexander Krasnukhin;2015-01-22 19:24:45 +0100;Rename member variable is_boolean => is_bool.

==

luigi/parameter.py
==================
61094d08;Alexander Krasnukhin;2015-01-22 19:29:40 +0100;Warn if BooleanParameter is instantiated.

==

luigi/parameter.py
==================
2dfe08d6;Alexander Krasnukhin;2015-01-22 19:01:58 +0100;Deprecate is_boolean kwarg in luigi.Parameter.

==

luigi/parameter.py
==================
78433132;Alexander Krasnukhin;2015-01-22 19:15:58 +0100;Extract deprecate_kwarg to a separate file.
Otherwise we can't use it in luigi.parameter as instantly get
circular dependencies i.e.

luigi.parameter imports luigi.util.deprecate_kwarg
luigi.util imports luigi.parameter (for previous() function)

==

luigi/deprecate_kwarg.py
luigi/util.py
==================
bfb521f4;Alexander Krasnukhin;2015-01-22 18:58:01 +0100;Proper backward compatibility.

==

luigi/__init__.py
==================
f8d773a9;Alexander Krasnukhin;2015-01-22 01:14:49 +0100;Rename BooleanParameter to BoolParameter.
It is confusing indeed. Lets fix this nicely put TODO but keep
BooleanParameter as an alias for backward compatibility.

==

doc/example_top_artists.rst
examples/top_artists.py
luigi/__init__.py
luigi/interface.py
luigi/parameter.py
luigi/tools/range.py
test/hadoop_test.py
test/parameter_test.py
test/scheduler_visualisation_test.py
test/task_test.py
test/test_event_callbacks.py
test/worker_test.py
==================
942c61d0;Erik Bernhardsson;2015-01-26 13:48:41 -0500;Merge pull request #624 from themalkolm/command_line_explicit_local_scheduler
Explicitly note that examples work with local_scheduler only.
==
==================
363f9c9e;Erik Bernhardsson;2015-01-26 13:46:16 -0500;Merge pull request #631 from themalkolm/do_not_open_when_only_mkdirs_is_required
Do not open atomic_file for mkdirs result.
==
==================
9f539b65;Erik Bernhardsson;2015-01-26 11:39:49 -0500;removed broken file accidentally added

==

.coverage
==================
8969ef58;Erik Bernhardsson;2015-01-26 10:13:13 -0500;Merge pull request #666 from Tarrasch/mute_pep8_failures
Return 0 even when pep8 fails
==
==================
cc1ee3d2;Erik Bernhardsson;2015-01-26 09:23:37 -0500;Merge pull request #665 from spotify/erikbern/expose-class-parameters
Expose class parameters on command line
==
==================
0cd5f34a;Arash Rouhani;2015-01-26 15:03:33 +0100;Return 0 even when pep8 fails
Currently, all our travis builds are failing, because we don't strictly
comply with pep8. With this patch, we do see what the failure is but we
still get it green.

==

tox.ini
==================
9a5d04e4;Erik Bernhardsson;2015-01-26 08:45:00 -0500;Merge pull request #664 from Tarrasch/fix_tox_ini
Restructure tox.ini and test environments
==
==================
dd29271e;Erik Bernhardsson;2015-01-22 18:45:55 -0500;added documentation for new-style global parameters
Realized we never had documentation for is_global"

==

doc/api_overview.rst
luigi/parameter.py
==================
d9a5984d;Erik Bernhardsson;2015-01-22 18:12:04 -0500;Added more tests for new-style global parameters

==

luigi/parameter.py
test/parameter_test.py
==================
8abbbb21;Erik Bernhardsson;2015-01-21 19:09:56 -0500;Make it possible to override *any* parameter from the cmd line
If you have a task B that depends on A, and A has some parameter x, then it's now possible to run with --A-x 345 to pass it to A. Note that B may override that in runtime

==

luigi/interface.py
luigi/parameter.py
test/parameter_test.py
==================
9641faf2;Erik Bernhardsson;2015-01-21 16:20:39 -0500;Now is_global is only used by Parameter

==

luigi/interface.py
luigi/parameter.py
==================
86726aa4;Erik Bernhardsson;2015-01-26 08:29:39 -0500;Merge pull request #660 from themalkolm/improve_most_common_memory_footprint
Improve most common memory footprint
==
==================
af8f3e47;Arash Rouhani;2015-01-26 13:47:33 +0100;Restructure tox.ini and test environments
This patch fixes some fundamental flaws:

 * We managed to break the support of running individual tests (again)
   in spotify/luigi#641. This patch fixes this.
 * I don't wanna download a hadoop distribution if I run a non-hdfs
   tests. This patch fixes this.
 * We're running the non-hdfs tests twice, once for each hadoop
   distribution.  I solve this by introducing the nonhdfs environment,
   as a bonus, the tests will run faster.
 * We simplify the CI stuff by removing verify.sh

==

.travis.yml
doc/contributing.rst
scripts/ci/setup_hadoop_env.sh
scripts/ci/verify.sh
tox.ini
==================
d2352682;Erik Bernhardsson;2015-01-25 19:51:32 -0500;Merge pull request #659 from spotify/erikbern/get-work
Removed workaround for deprecated get_work RPC call
==
==================
385f54b2;Erik Bernhardsson;2015-01-25 18:11:12 -0500;Removed workaround for deprecated get_work RPC call
Deprecated in 2013, I think people have had enough time by now :)

==

luigi/rpc.py
==================
0f866fa6;Erik Bernhardsson;2015-01-25 18:04:09 -0500;Merge pull request #658 from spotify/erikbern/badges
Added a license badge and added copyright headers to some files
==
==================
53e87a19;Alexander Krasnukhin;2015-01-22 22:07:45 +0100;Improve most_common.
No need neither to create a list in items() nor to sort the whole
sequence. We need only the max one, right?

If we have two values with the same frequence than we still have
undefined result as before as dict.items() & dict.iteritems()
return values in an undefined order.

==

luigi/tools/range.py
==================
9c02759d;Alexander Krasnukhin;2015-01-22 22:05:29 +0100;Add tests for most_common.

==

test/most_common_test.py
==================
c497e964;Erik Bernhardsson;2015-01-25 17:50:38 -0500;Added a license badge and added copyright headers to some files

==

README.rst
luigi/configuration.py
luigi/hadoop_jar.py
luigi/notifications.py
luigi/webhdfs.py
==================
9d55b15b;Erik Bernhardsson;2015-01-25 17:42:28 -0500;Merge pull request #653 from themalkolm/patch-3
Add pep8 and autopep8 targets to tox
==
==================
242c34ff;Erik Bernhardsson;2015-01-25 17:42:05 -0500;Merge pull request #654 from themalkolm/patch-4
Remove unused import
==
==================
df29819a;Erik Bernhardsson;2015-01-25 17:41:19 -0500;Merge pull request #655 from themalkolm/patch-5
Do not import postgres twice
==
==================
1c1af6ec;Erik Bernhardsson;2015-01-25 17:41:02 -0500;Merge pull request #656 from themalkolm/patch-6
Remove unnecessary pass statement
==
==================
79dbc97e;Erik Bernhardsson;2015-01-25 17:40:54 -0500;Merge pull request #657 from themalkolm/patch-7
Remove unnecessary pass statement
==
==================
ef65876e;Alexander Krasnukhin;2015-01-25 22:51:38 +0100;Remove unnecessary pass statement
There is not need for pass here as statement is not empty otherwise.
==

luigi/task.py
==================
6ff7c46b;Alexander Krasnukhin;2015-01-25 22:50:35 +0100;Remove unnecessary pass statement
There is not need for pass here as statement is not empty otherwise.
==

luigi/process.py
==================
0dbcc83b;Alexander Krasnukhin;2015-01-25 22:48:17 +0100;Do not import postgres twice
Looks like we import postgres twice while only the second import is used.
==

luigi/contrib/redshift.py
==================
0322df21;Alexander Krasnukhin;2015-01-25 22:45:22 +0100;Remove unused import
warnings are not used in this module
==

luigi/interface.py
==================
d24ed0a0;Alexander Krasnukhin;2015-01-25 22:23:41 +0100;Enable pep8 check for travis builds.
This way we always run pep8 check on every pull-request and fail
whenever a commit has any style issues.

==

.travis.yml
tox.ini
==================
f30a504e;Alexander Krasnukhin;2015-01-25 22:20:32 +0100;Fix all default pep8 issues.
* tox -e autopep8
* manually fix remaining issues

==

bin/deps.py
bin/luigi-grep.py
examples/elasticsearch_index.py
examples/foo.py
examples/ftp_experiment_outputs.py
examples/spark_als.py
examples/ssh_remote_execution.py
examples/terasort.py
examples/top_artists.py
examples/wordcount.py
examples/wordcount_hadoop.py
luigi/configuration.py
luigi/contrib/__init__.py
luigi/contrib/esindex.py
luigi/contrib/ftp.py
luigi/contrib/mysqldb.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/contrib/scalding.py
luigi/contrib/spark.py
luigi/contrib/sparkey.py
luigi/contrib/sqla.py
luigi/contrib/ssh.py
luigi/contrib/target.py
luigi/contrib/webhdfs.py
luigi/date_interval.py
luigi/db_task_history.py
luigi/event.py
luigi/file.py
luigi/format.py
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/mock.py
luigi/mrrunner.py
luigi/notifications.py
luigi/parameter.py
luigi/postgres.py
luigi/process.py
luigi/rpc.py
luigi/s3.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/task_history.py
luigi/tools/range.py
luigi/util.py
luigi/worker.py
test/_esindex_test.py
test/_hive_test.py
test/_mysqldb_test.py
test/_postgres_test.py
test/_s3_test.py
test/_test_ftp.py
test/_test_ssh.py
test/central_planner_test.py
test/clone_test.py
test/cmdline_test.py
test/contrib/_webhdfs_test.py
test/contrib/sqla_test.py
test/contrib/target_test.py
test/customized_run_test.py
test/date_hour_test.py
test/date_interval_test.py
test/date_minute_test.py
test/db_task_history_test.py
test/decorator_test.py
test/dynamic_import_test.py
test/factorial_test.py
test/fib_test.py
test/file_test.py
test/foo_module.py
test/hadoop_test.py
test/hdfs_test.py
test/helpers.py
test/hive_test.py
test/instance_test.py
test/instance_wrap_test.py
test/interface_test.py
test/lock_test.py
test/minicluster.py
test/mock_test.py
test/namespace_test.py
test/optparse_test.py
test/other_module.py
test/parameter_test.py
test/priority_test.py
test/range_test.py
test/recursion_test.py
test/redshift_test.py
test/remote_scheduler_test.py
test/rpc_test.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/server_test.py
test/set_task_name_test.py
test/snakebite_test.py
test/spark_test.py
test/subtask_test.py
test/target_test.py
test/task_history_test.py
test/task_test.py
test/test_event_callbacks.py
test/test_sigpipe.py
test/test_ssh.py
test/util_previous_test.py
test/worker_multiprocess_test.py
test/worker_parallel_scheduling_test.py
test/worker_task_test.py
test/worker_test.py
test/wrap_test.py
==================
3b338e72;Alexander Krasnukhin;2015-01-25 21:25:36 +0100;Add pep8 and autopep8 targets to tox
Add handy tox targets to check against simplest pep8 check and automatically
correct them using autopep8.

Note that both pep8 and autopep8 could be run in more aggressive modes but
for the first time I leave them in the 'easy' mode.

Lets ignore line length for now i.e. --ignore E501.

==

tox.ini
==================
48ca400d;Erik Bernhardsson;2015-01-25 15:20:02 -0500;Merge pull request #652 from themalkolm/patch-2
Fix worker-keep-alive documentation
==
==================
5285a481;Alexander Krasnukhin;2015-01-25 21:12:38 +0100;Fix worker-keep-alive documentation
Looks like doc says that worker-keep-alive is true by default while it is actually
true.

Fix #640
==

doc/configuration.rst
==================
ba54dfe9;Erik Bernhardsson;2015-01-25 15:07:40 -0500;Merge pull request #651 from spotify/erikbern/badges
Moar badges, back on top
==
==================
698f8a31;Erik Bernhardsson;2015-01-25 15:02:22 -0500;Moar badges, back on top

==

README.rst
==================
1f5ce37c;Erik Bernhardsson;2015-01-25 14:50:41 -0500;Merge pull request #650 from spotify/erikbern/badges
Added landscape.io badge and moved badges to the bottom
==
==================
79d2e3c9;Erik Bernhardsson;2015-01-25 14:39:43 -0500;Added landscape.io badge and moved badges to the bottom

==

README.rst
==================
03b6f774;Erik Bernhardsson;2015-01-25 14:36:35 -0500;Merge pull request #648 from themalkolm/patch-1
Add coveralls badge to README
==
==================
9ed55f57;Erik Bernhardsson;2015-01-25 14:19:43 -0500;Accidentally was running all tests in Travis twice. Removed one of the entry points

==

scripts/ci/verify.sh
==================
6df679ca;Alexander Krasnukhin;2015-01-25 19:54:16 +0100;Add coveralls badge to README
* Add coveralls badge to README
* Shielded both badges via http://shields.io to keep the same style
==

README.rst
==================
ea8b59f9;Erik Bernhardsson;2015-01-25 13:45:37 -0500;s/pig/hive in readme :)

==

README.rst
==================
7421f876;Erik Bernhardsson;2015-01-24 15:38:32 -0500;Merge pull request #647 from themalkolm/add_missing_call_to_the_super
Add missing call the the parent.
==
==================
80e233aa;Erik Bernhardsson;2015-01-24 15:31:46 -0500;Merge pull request #645 from themalkolm/preserve_the_override_methods_signature
Preserve the overrided method's signature.
==
==================
f55d7d79;Erik Bernhardsson;2015-01-24 15:31:24 -0500;Merge pull request #646 from themalkolm/use_iteritems_when_iterating_over_dict_without_adding_or_removing_its_elements
Use iteritems(), it is faster as does not create a list.
==
==================
a08a6d73;Erik Bernhardsson;2015-01-24 15:30:04 -0500;Merge pull request #641 from spotify/erikbern/coveralls
Trying coveralls
==
==================
a8f045ee;Alexander Krasnukhin;2015-01-24 00:51:13 +0100;Add missing call the the parent.

==

luigi/contrib/ssh.py
==================
d9350148;Alexander Krasnukhin;2015-01-22 20:57:47 +0100;Do not open atomic_file for makedirs result.
Looks like we open file here only for a side effect that we makedirs
all folders. It is quite silly, lets just makedirs without open/close
invocations.

==

luigi/file.py
==================
35471b54;Erik Bernhardsson;2015-01-23 17:28:13 -0500;Merge pull request #642 from themalkolm/patch-1
Do not initialize _task_history twice
==
==================
7476f852;Erik Bernhardsson;2015-01-23 08:57:44 -0500;Trying coveralls

==

.coverage
.coveragerc
.travis.yml
scripts/ci/verify.sh
tox.ini
==================
af8e0a25;Alexander Krasnukhin;2015-01-23 20:23:25 +0100;Do not initialize _task_history twice
This code looks strange. Could it be a case of a merge failure?
==

luigi/scheduler.py
==================
f76e1cc6;Erik Bernhardsson;2015-01-23 13:50:01 -0500;Added SeatGeek to the list of Luigi users

==

README.rst
==================
987c8aee;Erik Bernhardsson;2015-01-23 11:25:38 -0500;Merge pull request #639 from spotify/erikbern/host-fix-2
Fixed another issue introduced in #634
==
==================
c616ec96;Erik Bernhardsson;2015-01-23 11:09:37 -0500;Fixed another issue introduced in #634

==

test/worker_test.py
==================
9065c06c;Erik Bernhardsson;2015-01-23 09:55:18 -0500;Merge pull request #638 from spotify/erikbern/host-fix
Fixed bug introduced in #634
==
==================
94eeb80f;Erik Bernhardsson;2015-01-23 09:22:16 -0500;Fixed bug introduced in #634
TaskProcess has no attribute host, not sure why nosetests ran

==

luigi/worker.py
==================
294c6eb2;Erik Bernhardsson;2015-01-23 08:09:15 -0500;Merge pull request #633 from spotify/erikbern/remove-util-deprecation
Removed some deprecated stuff in luigi.util
==
==================
1a84220b;Erik Bernhardsson;2015-01-23 08:09:04 -0500;Merge pull request #634 from tresata-opensource/master
Include host in error notifications
==
==================
98e36f7c;Jack Dwyer;2015-01-22 17:31:59 -0500;Include host in error notifications

==

luigi/worker.py
==================
0343e939;Erik Bernhardsson;2015-01-22 16:18:23 -0500;removed some deprecated stuff in luigi.util

==

luigi/util.py
test/copy_test.py
test/subtask_test.py
test/util_test.py
test/wrap_test.py
==================
5d1cfe3e;Alexander Krasnukhin;2015-01-22 21:54:58 +0100;Use iteritems(), it is faster as does not create a list.

==

luigi/hdfs.py
luigi/hive.py
luigi/parameter.py
luigi/s3.py
luigi/scheduler.py
luigi/task.py
test/_s3_test.py
==================
9ae23e4b;Erik Bernhardsson;2015-01-22 15:52:10 -0500;Merge pull request #630 from themalkolm/add_support_for_date_minute_parameter_to_previous_util
Add DateMinuteParameter support to previous()
==
==================
6f14e098;Alexander Krasnukhin;2015-01-22 21:49:40 +0100;Preserve the overrided method's signature.
FileSystem (parent class) had mkdir defined as:

def mkdir(self, path, parents=True, raise_if_exists=False):
   ...

==

luigi/file.py
==================
eeca94ea;Erik Bernhardsson;2015-01-22 14:06:10 -0500;Merge pull request #629 from themalkolm/moar_tests_for_date_minute_parameter
Moar tests.
==
==================
3e386d89;Alexander Krasnukhin;2015-01-22 19:48:24 +0100;Add DateMinuteParameter support to previous()
Note that we need to check for DateMinuteParameter before we check
for DateHourParameter as they are part of the same hierarchy.

==

luigi/util.py
test/util_previous_test.py
==================
e7711b99;Alexander Krasnukhin;2015-01-22 19:36:31 +0100;Moar tests.

==

luigi/parameter.py
test/date_minute_test.py
==================
b0523d2e;Erik Bernhardsson;2015-01-22 08:39:11 -0500;Merge pull request #625 from themalkolm/add_date_minute_parameter
Add date minute parameter
==
==================
ad9d263d;Erik Bernhardsson;2015-01-22 08:37:47 -0500;Merge pull request #627 from spotify/erikbern/parameter-cleanup
Parameter cleanup
==
==================
09040086;Erik Bernhardsson;2015-01-21 15:53:51 -0500;simplified add_global_parameters

==

luigi/interface.py
==================
20c37864;Erik Bernhardsson;2015-01-21 15:38:31 -0500;removed from_str_params and simplified interface.py a bit

==

luigi/interface.py
luigi/task.py
test/task_test.py
==================
3a1dd195;Erik Bernhardsson;2015-01-21 15:18:27 -0500;Removed anything dealing with global parameters from task.py
Global parameters are now a matter only for interface.py and parameter.py.

==

luigi/interface.py
luigi/task.py
luigi/util.py
==================
a78338c7;Erik Bernhardsson;2015-01-21 14:30:29 -0500;removed an is_global check, not sure why it wasn't caught by unit tests

==

luigi/task.py
==================
ecaec6d0;Alexander Krasnukhin;2015-01-22 00:55:20 +0100;Add DateMinuteParameter.

==

luigi/__init__.py
luigi/parameter.py
test/date_minute_test.py
==================
25bfb367;Alexander Krasnukhin;2015-01-22 01:01:10 +0100;Add date_format to DateHourParameter.

==

luigi/parameter.py
==================
4cecc7fd;Erik Bernhardsson;2015-01-21 18:57:25 -0500;Merge pull request #623 from themalkolm/do_not_use_mutable_default_value
Default values should not be mutable.
==
==================
cde5f1b0;Alexander Krasnukhin;2015-01-22 00:23:57 +0100;Default values should not be mutable.
It is a kind of popular gotcha in python. Just to avoid incidents
it is a good idea to not use mutable objects as default values.

==

luigi/interface.py
==================
af210685;Alexander Krasnukhin;2015-01-22 00:21:43 +0100;Explicitly note that examples work with local_scheduler only.
Update Interface.run as well to be able to specify local_scheduler
via kwargs.

==

doc/command_line.rst
luigi/interface.py
==================
70a0f17e;Erik Bernhardsson;2015-01-21 18:08:57 -0500;Merge pull request #622 from themalkolm/issue/435
Set default temp directory in a Windows friendly way.
==
==================
14aef22d;Erik Bernhardsson;2015-01-21 18:00:39 -0500;Merge pull request #621 from spotify/erikbern/dyn-deps-fix
Fix for new deps
==
==================
bbbc5444;Alexander Krasnukhin;2015-01-21 23:49:46 +0100;Set default temp directory in a Windows friendly way.
Using tempfile.gettempdir() makes sure that a proper temporary
directory will be picked up with respect to os and even env
variables like TMPDIR, TEMP, TMP etc.

Fix #435

==

luigi/interface.py
==================
97e0688d;Erik Bernhardsson;2015-01-21 17:01:52 -0500;Fix for new deps

==

luigi/worker.py
==================
7941d5a3;Erik Bernhardsson;2015-01-21 14:45:00 -0500;fix

==

README.rst
==================
1f158f22;Erik Bernhardsson;2015-01-21 14:44:13 -0500;Merge pull request #619 from spotify/erikbern/readme-stuff
Some updates to the README
==
==================
fca3f872;Erik Bernhardsson;2015-01-21 14:42:42 -0500;Added some external presentations and blog posts

==

README.rst
==================
938523e6;Erik Bernhardsson;2015-01-21 14:33:21 -0500;moved authors to the bottom of README

==

README.rst
==================
3987be5b;Erik Bernhardsson;2015-01-21 11:36:56 -0500;Changed links to documentation slightly
Pointing the user to the example pipeline and the API overview first, rather than the package documentation (which I think is pretty overwhelming and not so useful)

==

README.rst
==================
8e59a3a5;Erik Bernhardsson;2015-01-21 10:52:39 -0500;less strict timeout

==

test/worker_test.py
==================
061199aa;Arash Rouhani;2015-01-21 16:01:53 +0100;Merge pull request #618 from Tarrasch/only_use_core_dependencies
Don't have contrib-dependencies
==
==================
9ff982f3;Arash Rouhani;2015-01-21 16:01:47 +0100;Merge pull request #604 from Tarrasch/propagate_args_to_tox
Propagate tox's args to nosetest
==
==================
2ba448ec;Erik Bernhardsson;2015-01-21 09:52:23 -0500;Merge pull request #617 from spotify/erikbern/param-cleanup
Remove lock parameter
==
==================
4a4c5e24;Arash Rouhani;2015-01-15 16:53:48 +0100;Propagate tox's args to nosetest
In particular, this patch allows you to do

    tox test/only_run_this_test.py

By the way, here's a real life example of how I run the tests on Ubuntu
12.04.

    export TOX_ENV=hdp
    export PYTHONPATH=''
    export JAVA_HOME=/usr/lib/jvm/java-1.7.0-openjdk-amd64
    tox -e $TOX_ENV test/snakebite_test.py

==

scripts/ci/run_tests.sh
tox.ini
==================
5fb3e577;Arash Rouhani;2015-01-21 15:21:25 +0100;Don't have contrib-dependencies
Currently, we can't build the luigi debian package. The reason is that
the requirements in setup.py is including dependencies that are for
packages that (at least should) belong to contrib.

I also removed requests as I didn't see it being used anywhere. The test
suite should reveal if it was required or not. :)

==

setup.py
test/requirements.txt
==================
ecfb0dbd;Erik Bernhardsson;2015-01-19 22:32:41 -0500;remove lock parameter

==

luigi/interface.py
==================
4fb345f8;Erik Bernhardsson;2015-01-21 08:39:06 -0500;fix for broken formatting in doc

==

doc/api_overview.rst
==================
f66eeeb8;Erik Bernhardsson;2015-01-21 08:34:59 -0500;more doc about requiring a task

==

doc/api_overview.rst
==================
13bf5096;Erik Bernhardsson;2015-01-21 08:29:09 -0500;Merge pull request #614 from spotify/erikbern/dynamic-deps-cleanup
Cleaned up some parameter parsing & dynamic dependencies
==
==================
38383d07;Arash Rouhani;2015-01-21 11:17:59 +0100;Merge pull request #616 from Tarrasch/remove_whoops_dependency
Remove whoops from dependencies
==
==================
b552ffbb;Arash Rouhani;2015-01-21 10:34:04 +0100;Remove whoops from dependencies
It's not a used dependency anymore since
https://github.com/spotify/luigi/pull/504

Thanks @danielfrg !!!!

    ~/spotify/repos/luigis/github_luigi
    ❯ ag whoops
    setup.py
    48:    'whoops',

==

setup.py
==================
db3ad107;Erik Bernhardsson;2015-01-21 00:36:22 -0500;some docs on dynamic dependencies

==

doc/api_overview.rst
==================
f8cdfede;Erik Bernhardsson;2015-01-20 11:51:37 -0500;Cleaned up code for dynamic dependencies and added another test

==

luigi/interface.py
luigi/task.py
luigi/worker.py
test/other_module.py
test/worker_test.py
==================
9674ce1d;Erik Bernhardsson;2015-01-20 11:07:18 -0500;Move some argparse/optparse stuff to luigi.Parameter

==

luigi/interface.py
luigi/parameter.py
==================
2ce6fa44;Arash Rouhani;2015-01-20 15:01:28 +0100;Merge pull request #613 from Tarrasch/fix_hadoop_test_attributes
Fix test @attr-ibutes in hadoop_test.py
==
==================
0d784903;Arash Rouhani;2015-01-19 16:55:52 +0100;Fix test @attr-ibutes in hadoop_test.py
Apparently the fixtures came and bit us in the end after all. As was
feared from spotify/luigi#601. The attributes feature of nosetests is
completely borked when used together with mixins. It's a total mess and
nothing works. So I just removed all meta programming from these tests.

After this patch:

    ~/spotify/repos/luigis/github_luigi fix_hadoop_test_attributes*
    ❯ NOSE_ATTR='minicluster' nosetests --collect-only test/hadoop_test.py
    ....
    ----------------------------------------------------------------------
    Ran 4 tests in 0.000s

    OK

    ~/spotify/repos/luigis/github_luigi fix_hadoop_test_attributes*
    ❯ NOSE_ATTR='!minicluster' nosetests --collect-only test/hadoop_test.py
    ............
    ----------------------------------------------------------------------
    Ran 12 tests in 0.000s

    OK

Before this patch:

    ~/spotify/repos/luigis/github_luigi master
    ❯ NOSE_ATTR='minicluster' nosetests --collect-only test/hadoop_test.py
    .....
    ----------------------------------------------------------------------
    Ran 5 tests in 0.000s

    OK

    ~/spotify/repos/luigis/github_luigi master
    ❯ NOSE_ATTR='!minicluster' nosetests --collect-only test/hadoop_test.py
    .................
    ----------------------------------------------------------------------
    Ran 17 tests in 0.000s

    OK

The reason it shows 17 before was that it had an empty test.

==

test/hadoop_test.py
==================
3228b04f;Erik Bernhardsson;2015-01-20 07:34:45 -0500;Merge pull request #608 from DrAA/improved-spark-error-formatting
Improved Spark error formatting
==
==================
76d96246;Anders Arpteg;2015-01-20 13:01:22 +0100;Updated tests for improved spark error formatting

==

test/spark_test.py
==================
ac0901e6;Anders Arpteg;2015-01-16 14:47:30 +0100;Improved Spark error formatting

==

luigi/contrib/spark.py
==================
fea51ea9;Erik Bernhardsson;2015-01-18 16:26:30 -0500;additional documentation fix for scalding

==

luigi/contrib/scalding.py
==================
ae475c12;Erik Bernhardsson;2015-01-18 14:56:42 -0500;Merge pull request #611 from spotify/erikbern/scalding-doc
fixed documentation for scalding
==
==================
e48ae800;Erik Bernhardsson;2015-01-18 14:50:49 -0500;fixed documentation for scalding

==

doc/api/luigi.contrib.rst
doc/api/luigi.rst
==================
cc3ad2f0;Erik Bernhardsson;2015-01-18 14:47:19 -0500;Merge pull request #610 from hblanks/remove-sample-decorator-colons
doc - remove colons from sample decorator usage
==
==================
4fa918ba;Hunter Blanks;2015-01-18 11:18:09 -0800;doc - remove colons from sample decorator usage
Fix two examples in api_overview.rst where decorators are terminated
with a colon.

==

doc/api_overview.rst
==================
78348956;Erik Bernhardsson;2015-01-18 13:18:02 -0500;Merge pull request #609 from spotify/erikbern/parameter-cleanup
Cleaning up global parameters & config parameters
==
==================
ca587759;Erik Bernhardsson;2015-01-18 12:34:12 -0500;removed deprecated default_from_config argument

==

luigi/parameter.py
test/parameter_test.py
==================
fc560f30;Erik Bernhardsson;2015-01-18 00:19:55 -0500;Make it possible to override global parameters

==

luigi/task.py
test/parameter_test.py
==================
64471799;Erik Bernhardsson;2015-01-18 00:17:48 -0500;add no-lock to all parameter unit tests

==

test/interface_test.py
test/parameter_test.py
==================
4c0cdcfe;Erik Bernhardsson;2015-01-16 12:51:05 -0500;Merge pull request #607 from spotify/erikbern/scalding
Moved luigi.scalding to luigi.contrib.scalding
==
==================
137a24ed;Erik Bernhardsson;2015-01-16 10:58:33 -0500;Adding catch for old imports

==

luigi/scalding.py
==================
34cd7ae3;Erik Bernhardsson;2015-01-16 10:57:40 -0500;Moved luigi.scalding to luigi.contrib.scalding

==

luigi/contrib/scalding.py
==================
b4a34eed;Erik Bernhardsson;2015-01-16 10:55:33 -0500;fixed some small things with luigi.scalding

==

luigi/scalding.py
==================
56cd424f;Erik Bernhardsson;2015-01-15 11:27:53 -0500;Merge pull request #603 from Tarrasch/use_minicluster_helper_for_snakebite
Use MiniClusterTestCase in snakebite tests
==
==================
c79ba9a5;Arash Rouhani;2015-01-15 16:48:31 +0100;Use MiniClusterTestCase in snakebite tests
This patch continues to use the reuseable parts of spotify/luigi#601.

==

test/snakebite_test.py
==================
c217e9dd;Erik Bernhardsson;2015-01-15 09:10:18 -0500;Merge pull request #602 from Tarrasch/clean_gitignore
Remove hadoop_test.py from gitignore
==
==================
50b854b8;Arash Rouhani;2015-01-15 14:22:28 +0100;Remove hadoop_test.py from gitignore
No idea why it was added. My grep-tool ag didn't search in that file
because of it. Hopefully nobody else need to waste time on this.

==

.gitignore
==================
7b0952d4;Arash Rouhani;2015-01-15 11:41:06 +0100;Merge pull request #601 from spotify/erikbern/minicluster-test
Use the minicluster for Hadoop mapreduce jobs
==
==================
68d22990;Arash Rouhani;2015-01-15 11:29:31 +0100;Merge pull request #594 from RobCherry/feature_snakebite_effective_user
Add support for specifying Snakebite effective user
==
==================
d5372b73;Uldis Barbans;2015-01-15 08:49:35 +0100;Merge pull request #599 from spotify/ulzha/range
Add bulk_complete to Task to have an explicit API for range tools
==
==================
ded1afcb;Erik Bernhardsson;2015-01-14 16:38:12 +0000;hadoop_test.py now uses MiniCluster functionality

==

test/hadoop_test.py
test/hdfs_test.py
test/minicluster.py
==================
91f1301c;Erik Bernhardsson;2015-01-14 16:09:32 +0000;factored out minicluster functionality

==

test/hdfs_test.py
test/minicluster.py
==================
f975e6ef;Uldis Barbans;2015-01-13 13:38:05 +0100;add explicit bulk_complete API
Shuffled range.py code around to better separate inference from explicit stuff.

==

luigi/task.py
luigi/tools/range.py
test/range_test.py
==================
7f09fc8a;Erik Bernhardsson;2015-01-12 19:25:23 -0500;Merge pull request #598 from gouthambs/SqlAlchemyTargets
Fix broken third example
==
==================
bf5df69c;Gouthaman Balaraman;2015-01-12 15:56:52 -0800;Fix broken docs

==

luigi/contrib/sqla.py
==================
4ddae24d;Erik Bernhardsson;2015-01-12 18:37:41 -0500;removed some empty lines to see if sphinx formatting works

==

luigi/contrib/sqla.py
==================
856b4d8b;Erik Bernhardsson;2015-01-12 18:08:00 -0500;Merge pull request #597 from spotify/erikbern/sqla-doc
Fixed another documentation issue
==
==================
ea95fdaf;Erik Bernhardsson;2015-01-12 17:30:50 -0500;Fixed another documentation issue
Also changed some relative imports to absolute to see if it addresses another documentation issue that occurred. Either way absolute imports are slightly more clean

==

luigi/contrib/sqla.py
==================
b3b93a48;Erik Bernhardsson;2015-01-12 16:17:48 -0500;fixed formatting for example code in luigi.contrib.sqla

==

luigi/contrib/sqla.py
==================
0b2bffef;Erik Bernhardsson;2015-01-12 16:08:47 -0500;Merge pull request #596 from gouthambs/SqlAlchemyTargets
Add sqla to docs
==
==================
44323bae;Gouthaman Balaraman;2015-01-12 12:32:54 -0800;Add sqla to docs

==

doc/api/luigi.contrib.rst
==================
544ffafa;Rob Cherry;2015-01-12 10:42:05 -0500;Added support for specifying the effective user when using the Snakebite client

==

doc/configuration.rst
luigi/hdfs.py
==================
d7e9c34d;Erik Bernhardsson;2015-01-12 07:35:03 -0500;Merge pull request #593 from gouthambs/SqlAlchemyTargets
Sql alchemy targets
==
==================
23a772f3;Erik Bernhardsson;2015-01-09 10:08:30 +0100;Merge pull request #584 from Houzz/status_dict
Keeps track of tasks in scheduler grouped by status
==
==================
7096bcd1;Gouthaman Balaraman;2015-01-08 21:34:46 -0800;Minor fixes and cleanups

==

luigi/contrib/sqla.py
==================
a5bc6c93;Dave Buchfuhrer;2014-12-23 15:10:56 -0800;Keeps track of tasks in scheduler grouped by status
I've been seeing half-second get_work runtimes recently on my scheduler. The
cause of this has been a large backfill that scheduled a lot of done tasks. With
about 100k done tasks and about 350 pending tasks, a lot of time is wasted
looping over done tasks just to ignore them. This essentially caches these
computations by keeping a dictionary to group tasks by status and updating it
whenever task statuses are changed. This has sped my scheduling up by an order
of magnitude, now taking about 20ms per get_work.

In order to ensure updates happen every time, the task state has to take over
any functions that modify status. This is a necessary for remote task storage
anyway, so it had to be done eventually. There are no new tests here because
there are no functionality changes, only improvements in efficiency and
different internal representations.

==

luigi/scheduler.py
==================
47103219;Gouthaman Balaraman;2015-01-08 17:32:28 -0800;Add docs, incorporarte PR sugggestions, and improve test coverage

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
5f21334a;Erik Bernhardsson;2015-01-08 13:56:34 +0100;Merge pull request #589 from jcrobak/document-task-history
Document Task History
==
==================
09171a19;Erik Bernhardsson;2015-01-08 13:56:17 +0100;Merge pull request #590 from jcrobak/fix-task-parsing
Make task_id parsing support additional ids.
==
==================
4cfe532a;Gouthaman Balaraman;2015-01-07 21:48:30 -0800;Minor docs and copyright info

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
956634ef;Gouthaman Balaraman;2015-01-07 21:37:51 -0800;Fixed the test issues.

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
3110905c;Gouthaman Balaraman;2015-01-05 18:54:01 -0800;Added test for chunk size. Rearranged tests.

==

test/contrib/sqla_test.py
==================
936e7684;Gouthaman Balaraman;2015-01-05 18:44:11 -0800;Incorporated chunk size in the sqla implementation

==

luigi/contrib/sqla.py
==================
796afc24;Gouthaman Balaraman;2015-01-04 10:47:19 -0800;Minor  modifications

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
a5444e00;Gouthaman Balaraman;2015-01-03 08:51:05 -0800;Fixed the broken tests

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
2acc7c73;Gouthaman Balaraman;2015-01-02 22:37:44 -0800;Initial implementation of the SQLAlchemy target

==

luigi/contrib/sqla.py
test/contrib/sqla_test.py
==================
575cd2d4;Joe Crobak;2014-12-31 20:49:18 +0000;Make task_id parsing support additional ids.
Adds support for tasks with non-alphanumeric values (e.g. dates
with dashes in them).

==

luigi/task.py
test/task_test.py
==================
c1d983ee;Joe Crobak;2014-12-31 20:47:17 +0000;Document Task History
Add sphinx docs about how to enable the db task history, and what
functionality it provides (including screen shots). Adds a bit more
context to the existing docs on configuring the scheduler.

==

doc/central_scheduler.rst
doc/configuration.rst
doc/example_top_artists.rst
doc/history.png
doc/history_by_id.png
doc/history_by_name.png
==================
c0de97f4;Erik Bernhardsson;2014-12-29 15:45:33 +0100;Merge pull request #587 from berkerpeksag/patch-1
Remove deprecated apply() builtin.
==
==================
f59217dd;Erik Bernhardsson;2014-12-29 15:45:18 +0100;Merge pull request #585 from Houzz/max_shown_tasks
Limit number of shown tasks in visualiser
==
==================
e3f05797;Berker Peksag;2014-12-29 08:46:49 +0200;Remove deprecated apply() builtin.

==

luigi/worker.py
==================
3a91b05f;Erik Bernhardsson;2014-12-27 19:48:04 -0500;Merge pull request #582 from srirampmalladi/master
[scalding] allow single jobs in requires
==
==================
add826fc;Erik Bernhardsson;2014-12-27 19:47:35 -0500;Merge pull request #569 from Houzz/worker_timeout
Times out long-running workers
==
==================
4b1a0a00;Erik Bernhardsson;2014-12-27 19:46:51 -0500;Merge pull request #580 from zenlucent/improve_deps_script
improved deps.py script. see issue 542 for details
==
==================
1f38c788;Erik Bernhardsson;2014-12-27 19:35:41 -0500;Merge pull request #581 from hblanks/interface-logging-in-docs
Add setup_interface_logging() to execution docs.
==
==================
1ecafdc5;Erik Bernhardsson;2014-12-27 19:35:07 -0500;Merge pull request #583 from berkerpeksag/add-stacklevel-parameter
Set appropriate stacklevel values for deprecation warnings.
==
==================
bd1a1683;Dave Buchfuhrer;2014-12-26 12:01:32 -0800;Limit number of shown tasks in visualiser
I've noticed that my visualiser has become unusable recently when it has too
many done tasks scheduled. The tab freezes up for a long time while processing
all the tasks, and then is very sluggish afterward. When I have this many done
tasks, it's too much to really browse through anyway, so this limits the
information shown to just the count. This trades off available information with
usability of the tool.

The maximum number of shown tasks is controlled by the scheduler and can be
adjusted in client.cfg. It may be better to make this part of the query so that
it could potentially be controlled by the end user. We may also in the future
want to add additional server queries to update larger sections for searches,
as this removes useful search information.

==

doc/configuration.rst
luigi/scheduler.py
luigi/server.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
test/central_planner_test.py
==================
7e66d1d8;Berker Peksag;2014-12-22 22:41:41 +0200;Set appropriate stacklevel values for deprecation warnings.

==

luigi/interface.py
luigi/parameter.py
==================
d5b8c751;Sriram Malladi;2014-12-19 02:34:59 +0000;[scalding] allow single jobs in requires
as opposed to expecting lists always
also cleared up the docs a bit

==

luigi/scalding.py
==================
6a6f632f;Hunter Blanks;2014-12-18 15:52:56 -0800;Add setup_interface_logging() to execution docs.
Correct the programmatic execution example so that it, like run(),
configures interface logging.

Fixes the runtime error that occurs when following
the current docs/programmatic_execution.rst, namely:

    No handlers could be found for logger "luigi-interface"

==

doc/programmatic_execution.rst
==================
d7353f87;zenlucent;2014-12-18 11:13:41 -0800;improved deps.py script. see issue 542 for details

==

bin/deps.py
==================
e496d16d;Erik Bernhardsson;2014-12-14 23:30:43 -0500;Merge pull request #579 from majj/master
bypass os.getuid on Windows
==
==================
fdae8baf;majj;2014-12-14 21:25:19 +0800;Fix SIGQUIT on Windows

==

luigi/server.py
==================
b5d4a5a5;majj;2014-12-14 21:17:28 +0800;bypass os.getuid on Windows

==

luigi/lock.py
==================
7f98cd62;Erik Bernhardsson;2014-12-12 17:31:42 -0500;Merge pull request #575 from Houzz/use_task_id_in_reschedule
Uses the right task_id for unfulfilled counts in rescheduling
==
==================
344c817b;Dave Buchfuhrer;2014-12-11 20:19:13 -0800;Uses the right task_id for unfulfilled counts in rescheduling
When rescheduling a task, we loop over all the missing dependencies and count
how many times they've each been rescheduled. Due to bit of a typo, we actually
looped over the missing dependencies and counted the dependent task each time.
This fixes that typo and counts the correct tasks.

==

luigi/worker.py
test/worker_test.py
==================
58dc4172;Dave Buchfuhrer;2014-12-11 11:25:50 -0800;Times out long-running workers
I woke up this morning to find that very few jobs had run overnight because
something weird happened with our hadoop cluster that caused all of our jobs to
hang permanently. When I checked in the morning, all workers were busy running
jobs that had been going for about 10 hours, and thousands of pending jobs that
would normally have been run overnight had piled up.

After killing and restarting all of my workers, everything started running fine
again because whatever weird issue had caused everything to hang was over. In
order to automate this fix, I've added a worker_timeout property to tasks that
tells the worker how long to attempt to run the task before killing it.

This property defaults to 0, meaning do not time tasks out. It can be changed
individually for a task by override or globally for all non-overridden tasks
via client.cfg. This only applies when running with more than 1 worker process,
as we need to run the task in a separate process in order to be able to kill it
after the timeout.

==

doc/configuration.rst
luigi/task.py
luigi/worker.py
test/worker_test.py
==================
38eb8502;Erik Bernhardsson;2014-12-12 11:50:43 -0500;Merge pull request #568 from Houzz/viz_filter_pr
Add a task filter for visualizer
==
==================
ef32a07e;Erik Bernhardsson;2014-12-12 11:50:28 -0500;Merge pull request #572 from Houzz/multi_purge_bug
Fixes multiple purging bug.
==
==================
4b3a2736;Arash Rouhani;2014-12-12 09:33:29 +0100;Merge pull request #576 from Houzz/test_dynamic_dependencies_fix
Possible flakiness fix for test_dynamic_dependencies
==
==================
a88a0941;Arash Rouhani;2014-12-12 08:01:24 +0100;Merge pull request #573 from berkerpeksag/patch-1
Fix a markup error in luigi/task.py.
==
==================
b7c9fdc7;Erik Bernhardsson;2014-12-12 00:39:45 -0500;Merge pull request #574 from Houzz/fix_time_typo
Fixes a typo in a variable name in fix_time
==
==================
8d47de4c;Dave Buchfuhrer;2014-12-11 20:37:03 -0800;Possible flakiness fix for test_dynamic_dependencies
test_dynamic_dependencies has been flaky lately (see #571). I can't reproduce it
locally, so I assume it has something to do with Travis running things more in
parallel than I do. test_dynamic_dependencies uses mktemp, which according to
the tempfile documentation should not be used and causes race conditions in
which another program may get access to the temp file first. Replacing this with
mkdtemp should fix the issue while also clarifying that a temporary directory is
wanted and not a temporary file. I haven't been able to verify that this will
fix the flakiness, but it should probably be done anyway. I also added cleanup.

==

test/worker_test.py
==================
d900a0af;Dave Buchfuhrer;2014-12-11 20:13:14 -0800;Fixes a typo in a variable name in fix_time

==

luigi/scheduler.py
==================
f438476c;Berker Peksag;2014-12-12 05:17:55 +0200;Fix another markup in the externalize() function.

==

luigi/task.py
==================
e40988e1;Berker Peksag;2014-12-12 04:58:57 +0200;Fix a markup error in luigi/task.py.

==

luigi/task.py
==================
338e889b;Dave Buchfuhrer;2014-12-11 17:26:46 -0800;Fixes multiple purging bug.
If two worker processes get killed at the same time, we'll add them both to the
task handling queue as failures, then remove one of them from running tasks.
After this, we'll add the other one to the queue and remove it. On the third
attempt at task handling, we'll have the second task in the queue but not in
the running dict, resulting in duplicated error messages and a KeyError when
popping from running.

Even if we cut off the purge loop after it finds its first item, this could
still happen if there is already stuff in the queue or other workers insert
into the queue during/after the loop. In order to cleanly avoid removing items
multiple times, this ignores queue items that aren't in the running dict.
==

luigi/worker.py
test/worker_test.py
==================
d50ff003;Kyle Sun;2014-12-09 19:50:49 -0800;added filter for luigi visualizer

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
448eb668;Erik Bernhardsson;2014-12-10 19:19:56 -0500;Merge pull request #567 from spotify/erikbern/scheduler-refactoring
Erikbern/scheduler refactoring
==
==================
3d6f72cd;Erik Bernhardsson;2014-12-10 09:36:20 -0500;Bonux fix: Consistency fix for all internal time paramters. Now everything uses unix timestamps
I'm not sure if this could lead to issues if restoring a pickled state. Otoh I don't know if anyone uses the disabling feature, and worst case the issues will be small (i.e. things are never re-enabled automatically for those tasks, until they are re-added).

==

luigi/scheduler.py
==================
ea056a27;Erik Bernhardsson;2014-12-10 09:29:30 -0500;pass scheduler config object instead of a lot of arguments

==

luigi/scheduler.py
==================
3947255a;Erik Bernhardsson;2014-12-10 09:26:14 -0500;move scheduler config to a separate named tuple

==

luigi/scheduler.py
==================
cbef2250;Erik Bernhardsson;2014-12-09 19:47:02 -0500;move worker pruning logic to the Worker class

==

luigi/scheduler.py
==================
02f0c220;Erik Bernhardsson;2014-12-09 19:34:31 -0500;don't update worker objects from scheduler

==

luigi/scheduler.py
==================
054770b0;Erik Bernhardsson;2014-12-09 19:28:32 -0500;moved prune_task to Task class

==

luigi/scheduler.py
==================
ee26b569;Erik Bernhardsson;2014-12-09 19:25:55 -0500;moved out task pruning into its own method

==

luigi/scheduler.py
==================
38193790;Erik Bernhardsson;2014-12-09 19:16:30 -0500;moved set_status to the Task class

==

luigi/scheduler.py
==================
f4f9be62;Erik Bernhardsson;2014-12-09 19:02:13 -0500;small fix merging two for loops into one

==

luigi/scheduler.py
==================
7ca3d66f;Erik Bernhardsson;2014-12-10 18:46:58 -0500;Merge pull request #565 from Houzz/simplify_set_status
Simplifies CentralPlannerScheduler.set_status
==
==================
6b80c95f;Dave Buchfuhrer;2014-10-23 17:42:37 -0700;Simplifies CentralPlannerScheduler.set_status
This removes some lines that were special-cased for trying to set status for
a DISABLED task, but simply duplicate functionality from later in the method.

==

luigi/scheduler.py
==================
e06cfeb0;Erik Bernhardsson;2014-12-09 08:23:43 -0500;Merge pull request #564 from berkerpeksag/use-not-in
Use "not in" to test for membership.
==
==================
f5d4c074;Arash Rouhani;2014-12-09 08:27:31 +0100;Merge pull request #563 from berkerpeksag/use-assertequal
Use assertEqual instead of deprecated assertEqauls.
==
==================
55bb3a78;Berker Peksag;2014-12-09 03:47:38 +0200;Use "not in" to test for membership.

==

luigi/contrib/esindex.py
luigi/contrib/ftp.py
luigi/parameter.py
==================
794c8545;Berker Peksag;2014-12-09 03:42:12 +0200;Use assertEqual instead of deprecated assertEqauls.

==

test/_esindex_test.py
test/_postgres_test.py
test/_s3_test.py
test/_test_ssh.py
test/clone_test.py
test/contrib/_webhdfs_test.py
test/date_hour_test.py
test/date_interval_test.py
test/db_task_history_test.py
test/decorator_test.py
test/dynamic_import_test.py
test/email_test.py
test/hadoop_test.py
test/hdfs_test.py
test/hive_test.py
test/lock_test.py
test/mock_test.py
test/namespace_test.py
test/parameter_test.py
test/recursion_test.py
test/scheduler_test.py
test/scheduler_visualisation_test.py
test/server_test.py
test/spark_test.py
test/subtask_test.py
test/task_history_test.py
test/test_event_callbacks.py
test/util_test.py
test/worker_test.py
==================
8775fad7;Arash Rouhani;2014-12-08 22:43:44 +0100;Merge pull request #562 from berkerpeksag/test-discovery
Silence "outputs has no custom" warnings in the test suite.
==
==================
5d51dd44;Erik Bernhardsson;2014-12-08 15:59:14 -0500;Merge pull request #540 from Houzz/multiprocess_scheduling
Allows complete functions to be computed in parallel during scheduling
==
==================
58016243;Berker Peksag;2014-12-08 14:40:06 +0200;Filter "outputs has no custom" warnings for tests
If you run the tests using nosetests, you see this being printed out:

    ...
    /home/travis/build/spotify/luigi/luigi/task.py:471: UserWarning: Task MyDynamicTask(x=44) without outputs has no custom complete() method
    warnings.warn("Task %r without outputs has no custom complete() method" % self)
    /home/travis/build/spotify/luigi/luigi/task.py:471: UserWarning: Task MyDynamicTask(x=45) without outputs has no custom complete() method
    warnings.warn("Task %r without outputs has no custom complete() method" % self)
    /home/travis/build/spotify/luigi/luigi/task.py:471: UserWarning: Task MyDynamicTask(x=46) without outputs has no custom complete() method
    warnings.warn("Task %r without outputs has no custom complete() method" % self)
    ...

This patch silences those warnings.

==

luigi/task.py
scripts/ci/run_tests.sh
test/hdfs_test.py
test/runtests.py
tox.ini
==================
a5f1855b;Erik Bernhardsson;2014-12-08 11:20:00 -0500;Merge pull request #561 from ysagal/patch-1
Fixing broken Nose link
==
==================
f89642eb;ysagal;2014-12-08 11:02:33 -0500;Fixing broken Nose link
Previous link was broken and pointed to pypi, but looks like Nose has a readthedocs home, so pointed it there.
==

doc/contributing.rst
==================
f5cfa8bc;Erik Bernhardsson;2014-12-08 07:37:59 -0500;Merge pull request #550 from berkerpeksag/fix-stacklevel
Set stacklevel to 2 in Derived and Copy helpers.
==
==================
a82e51cc;Erik Bernhardsson;2014-12-08 07:37:27 -0500;Merge pull request #553 from berkerpeksag/improve-cli-example
Improve CLI example.
==
==================
419e3b2c;Erik Bernhardsson;2014-12-08 07:37:09 -0500;Merge pull request #560 from Tarrasch/remove_luigi_dot_expose
Remove ancient luigi.expose{,_main} methods
==
==================
1d8e49ef;Arash Rouhani;2014-12-08 10:13:17 +0100;Remove luigi.reset and luigi.expose methods
I got motivated to do this when I saw some test starting to fail as of
spotify/luigi#530. However, on its own, this is just a cleanup commit.

==

luigi/__init__.py
luigi/interface.py
test/cmdline_test.py
test/recursion_test.py
test/set_task_name_test.py
==================
b1d7bf5c;Arash Rouhani;2014-12-07 22:18:53 +0100;Merge pull request #557 from Tarrasch/revert-bad-parts-of-spotify-luigi-522
Manually revert parts of spotify/luigi#522
==
==================
52478476;Arash Rouhani;2014-12-07 18:16:18 +0100;Merge pull request #559 from berkerpeksag/issue-558
Add all dependencies to install_requires.
==
==================
3074e4c7;Berker Peksag;2014-12-07 04:06:17 +0200;Add all dependencies to install_requires.
Fixes #558.

==

.travis.yml
setup.py
test/hdfs_test.py
test/requirements.txt
test/snakebite_test.py
tox.ini
==================
a5e670e6;Arash Rouhani;2014-12-07 17:43:09 +0100;Merge pull request #546 from pfhayes/sendgrid
Add sendgrid email support
==
==================
51a4c7ce;Arash Rouhani;2014-12-05 15:33:30 +0100;Manually revert parts of spotify/luigi#522
Apparently, a much more serious bug was introduced due to that PR.

In summary, the move-dir strategy introduced in the spotify/luigi#522
does fix the "nested directory" problem. But it introduces the
non-atomicity problems. Users of luigi who don't use ExternalTasks
should not be affected, as the centralized scheduler will not let you
run the dependent tasks too early. However, if you use ExternalTasks or
say --local-scheduler, then you can get the serious issue of starting
tasks with half-finished input. The culprit here is  step 2 of the
used move-dir schema:

        1.   mkdir abc
        2.   mv    abc-luigi-tmp-12346/* abc
        3.   rmdir abc-luigi-tmp-12346

Right after 1 and anytime before 2 has finished (which is not that short of a
time either!), a Task with an ExternalTask-dependency on `abc` can be
scheduled. In Spotify's case, we had map reduce tasks starting too early
without all input, seeing suspiciously little output and not as many
mappers as input.  If this has affected you, it's probably easiest
to just nuke the output folders and reprocess the tasks.

==

luigi/hadoop.py
==================
92ebf72f;Erik Bernhardsson;2014-12-04 17:20:03 -0500;Merge pull request #556 from DrAA/master
Added additional Spark parameters
==
==================
d18210b9;Arash Rouhani;2014-12-04 19:12:12 +0100;Merge pull request #555 from drincruz/bugfix/HdfsTarget_documentation_fix
fix HdfsTarget call in docs
==
==================
011cb654;Anders Arpteg;2014-12-04 18:26:28 +0100;Made Spark master parameter backwords compatible

==

luigi/contrib/spark.py
==================
4950138a;Anders Arpteg;2014-12-04 18:12:43 +0100;Added additional Spark options

==

luigi/contrib/spark.py
==================
aa10cb08;Adrian Cruz;2014-12-04 09:46:19 -0500;Found a mistake in the documentation example for using HdfsTarget. It's calling it from luigi.HdfsTarget instead of luigi.hdfs.HdfsTarget

==

doc/example_top_artists.rst
doc/execution_model.rst
==================
3a7cdcb5;Erik Bernhardsson;2014-12-04 09:27:30 -0500;Merge pull request #554 from berkerpeksag/improve-setup
Read whole content instead of iterating all lines to generate long_description.
==
==================
6ef21564;Berker Peksag;2014-12-04 14:46:30 +0200;Read whole content instead of iterating all lines to generate long_description.
Also, use a ``.. note::`` directive.

==

setup.py
==================
d4e4345b;Berker Peksag;2014-12-04 14:27:36 +0200;Improve CLI example.
It would be good to be able to just copy/paste and run the example
locally.

This commit also improves the markup a bit.

==

doc/command_line.rst
==================
fc295bb6;Erik Bernhardsson;2014-12-04 07:24:56 -0500;Merge pull request #552 from berkerpeksag/unused-imports
Remove unused imports.
==
==================
d32ce2c0;Berker Peksag;2014-12-04 14:09:29 +0200;Remove unused imports.

==

luigi/contrib/sparkey.py
luigi/contrib/webhdfs.py
luigi/hadoop.py
luigi/hdfs.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/task_history.py
luigi/worker.py
==================
de6c2e27;Arash Rouhani;2014-12-04 10:20:34 +0100;Merge pull request #549 from berkerpeksag/remove-asserts
Convert isinstance assertions to TypeErrors.
==
==================
24e26ba4;Erik Bernhardsson;2014-12-03 22:19:14 -0500;Merge pull request #551 from spotify/arash/add-travis-build-image
Add travis build image to README.rst
==
==================
673f939b;Berker Peksag;2014-12-02 11:49:03 +0200;Convert isinstance assertions to TypeErrors.
Using assert statements can cause subtle bugs when Python
interpreter invoked with the -O option..

See https://code.djangoproject.com/ticket/23924 for an example report.

==

luigi/contrib/sparkey.py
luigi/hadoop.py
luigi/hdfs.py
luigi/util.py
test/decorator_test.py
==================
1b6d6fae;Arash Rouhani;2014-12-03 15:43:53 +0100;Add travis build image to README.rst
It's impossible to see if the current travis build is building or not. I had to waste time looking up the status when I was reviewing #549
==

README.rst
==================
5acb0860;Berker Peksag;2014-12-03 11:55:54 +0200;Set stacklevel to 2 in Derived and Copy helpers.
Currently, the warning messages are not helpful.

For example, without the patch applied the output is:

/home/berker/projects/luigi/luigi/util.py:209: DeprecationWarning: Derived is deprecated, please use the @inherits decorator instead
  warnings.warn('Derived is deprecated, please use the @inherits decorator instead', DeprecationWarning)

With patch applied:

t.py:9: DeprecationWarning: Derived is deprecated, please use the @inherits decorator instead
  class MyTask(luigi.util.Derived(AnotherTask)):

==

luigi/util.py
==================
c12bad7b;Dave Buchfuhrer;2014-11-20 16:19:44 -0800;Allows complete functions to be computed in parallel during scheduling
I've noticed that most of the time spent during scheduling is spend computing
complete functions, as these can involve various kinds of expensive checks
against remote file systems and services. This modifies the add function in
worker to allow complete functions to be computed asynchronously while
traversing the dependency graph. This can result in significant savings,
lowering the time needed for my twice-hourly scheduling from about 9 minutes to
about 3.5 minutes.

Using multiprocess requires picklable tasks, and this is incompatible with many
of the unit tests in worker_test. In order to get around this issue and allow
maximum compatibility with client code, multiprocess is not used at all unless
enabled via the command line or client.cfg. In order to minimize the code
difference between these cases, I added wrapper objects simulating the necessary
pool and queue interfaces for the single-processor case. This also allows the
existing unit tests to test most of the new code path, and I've only had to
write a few new unit tests to exercise the multiprocessing code.

==

doc/configuration.rst
luigi/interface.py
luigi/worker.py
test/worker_parallel_scheduling_test.py
==================
63de56ec;Patrick Hayes;2014-11-26 18:13:50 -0500;Add sendgrid email support

==

luigi/notifications.py
==================
230380cc;Erik Bernhardsson;2014-11-26 15:57:21 -0500;Merge pull request #541 from Houzz/remote_context_hash
Allows RemoteContext to be used in dicts
==
==================
7bbb2806;Erik Bernhardsson;2014-11-24 19:37:14 -0500;Merge pull request #544 from spiceworks/master
Removal of pid file can cause error
==
==================
ba1b3f73;Sajan Alexander;2014-11-24 10:18:53 -0600;only chmod if pid file is owned by current user
I ran into the same issue that #497 was trying to fix, but I don't think
the merged solution will work. The problem is that the old pid file is
owned by the previous user(abc123 in #497) and thus, the file cannot be
removed by the new user (xyz789). A solution is to check if the current
user owns the file and only performs the chmod if that is the case.

Squashed commit of the following:

commit 80acee57966998fe0781f4a3263440e6a2c21bef
Author: Sajan Alexander <sajana@spiceworks.com>
Date:   Mon Nov 24 09:33:01 2014 -0600

    use uid, not gid

commit 1c954afdc452df57c282a19377ce13e26930d9c8
Author: Sajan Alexander <sajana@spiceworks.com>
Date:   Sun Nov 23 17:11:59 2014 -0600

    remove removal of pid file since permission error still exists

commit f5cb7a8a113d43d4ae0050fa4380c90db243b45b
Author: Sajan Alexander <sajana@spiceworks.com>
Date:   Sun Nov 23 16:47:26 2014 -0600

    make sure existing pid file is owned by the current user

==

luigi/lock.py
==================
c6b91f9e;Erik Bernhardsson;2014-11-21 08:41:30 -0500;Merge pull request #539 from joshk/patch-1
Use the new build env on Travis
==
==================
9905395f;Dave Buchfuhrer;2014-11-13 18:13:54 -0800;Allows RemoteContext to be used in dicts
This implements equality and hash functions for RemoteContext so that it can be
used as a dictionary key. This was necessary for me to cache the output of a
function that took in a RemoteContext to check remote directory contents.

==

luigi/contrib/ssh.py
==================
6e06d2b9;Josh Kalderimis;2014-11-20 18:35:04 -0500;cat an error log if it fails

==

.travis.yml
==================
d49ea0f0;Josh Kalderimis;2014-11-20 16:15:09 -0500;Use the new build env on Travis
faster vms, more ram, more cpu, faster boot times,

docs coming soon
==

.travis.yml
==================
52be01aa;Erik Bernhardsson;2014-11-20 11:54:48 -0500;Merge pull request #537 from mojn/master
Add support for writing a string directly to s3
==
==================
c63aef0b;Erik Bernhardsson;2014-11-20 11:53:35 -0500;Merge pull request #534 from andpol/master
Add a lock for when the process forks
==
==================
a2790851;Erik Bernhardsson;2014-11-18 08:50:06 -0500;Merge pull request #532 from dvxam/dvxam/es-basic-auth-support
Adding support for basic auth for task esindex.CopyToIndex && target
==
==================
4b3ca03f;Arash Rouhani;2014-11-18 14:00:37 +0100;Merge pull request #538 from anyman/master
Updating debian/control with dependencies
==
==================
1d47f616;jalkjaer;2014-11-18 13:08:06 +0100;S3Client put_string testcase added

==

test/_s3_test.py
==================
d413568e;Anders Nyman;2014-11-18 12:08:12 +0100;Updating debian/control with dependencies

==

debian/control
==================
fa7d3a71;jalkjaer;2014-11-18 12:00:48 +0100;Add support for writing a string directly to s3

==

luigi/s3.py
==================
cbd699f4;Arash Rouhani;2014-11-17 14:46:40 +0100;Merge pull request #535 from anyman/master
Annotating tests needing the minicluster
==
==================
8f609e67;Anders Nyman;2014-11-17 14:44:00 +0100;Annotating tests needing the minicluster

==

test/hdfs_test.py
test/snakebite_test.py
==================
4da00d65;Erik Bernhardsson;2014-11-17 08:23:36 -0500;Merge pull request #504 from danielfrg/patch-1
Refactor webhdfs.py
==
==================
d9cd0ee9;Andrey Polyakov;2014-11-13 10:17:30 -0800;Add a lock for when the process forks
Deadlocks were occuring with DNS lookups because of the following case:

"The non-obvious problem in this approach is that at the moment of the
fork(2) call some threads may be in critical sections of code, doing
non-atomic operations protected by mutexes. In the child process the
threads just disappears and left data half-modified without any
possibility to "fix" them, there is no way to say what other threads
were doing and what should be done to make the data consistent.
Moreover: state of mutexes is undefined, they might be unusable and the
only way to use them in the child is to call pthread_mutex_init() to
reset them to a usable state. It's implementation dependent how mutexes
behave after fork(2) was called. On my Linux machine locked mutexes are
locked in the child."
[1] http://www.linuxprogrammingblog.com/threads-and-fork-think-twice-before-using-them

This thread-fork issue can be replicated quickly by having a background
thread call getaddrinfo() repeatedly, and then have the main thread
start a child process which itself calls getaddrinfo().
Timing-dependent, the child process may hang in a locked state. Example
script can be found here:
https://gist.github.com/andpol/ca7432afc09b1bc914f5

==

luigi/worker.py
==================
75548e56;dvxam;2014-11-10 11:48:31 +0100;Adding support for basic auth for task esindex.CopyToIndex & target esindex.ElasticsearchTarget & test coverage
Allow Elasticsearch tests with HTTP basic auth.

Added test support for HTTP basic auth and factored out ES settings.

To use a non-standard host and port, use `ESINDEX_TEST_HOST`,
`ESINDEX_TEST_PORT` environment variables to override defaults.

To test HTTP basic authentication use `ESINDEX_TEST_HTTP_AUTH`.

Example running tests against port 9201 with basic auth:

    $ ESINDEX_TEST_PORT=9201 ESINDEX_TEST_HTTP_AUTH='admin:admin' nosetests test/_esindex_test.py

==

luigi/contrib/esindex.py
test/_esindex_test.py
==================
5c742c1c;Daniel Rodriguez;2014-11-11 10:36:33 -0600;Refactor webhdfs.py
I refactored the whole file using the hdfs library instead of whoops because apparently whoops has some problems when uploading files.

I also added a basic WebHdfsTarget that provides basic read and write operations. The WebHdfsTarget is based on the S3Target. A simple example would be:

from luigi import webhdfs

target = webhdfs.WebHdfsTarget('TEST/file.py')

output = target.open('w')
output.write('pew pew pew\npow pow pow\n')
output.write('piw piw piw\npow pow pow')
output.close()

target = webhdfs.WebHdfsTarget('TEST/file.py')
input = target.open('r')
print input.read()
print [i for i in input]
input.close()

Output:

pew pew pew
pow pow pow
piw piw piw
pow pow pow
['pew pew pew', 'pow pow pow', 'piw piw piw', 'pow pow pow']

==

luigi/contrib/webhdfs.py
luigi/webhdfs.py
test/_webhdfs_test.py
test/contrib/_webhdfs_test.py
==================
af55d872;Uldis Barbans;2014-11-11 12:34:35 +0100;Merge pull request #518 from spotify/ulzha/range
emit metrics about range completeness as events
==
==================
da39bb1d;Arash Rouhani;2014-11-10 21:07:41 +0100;Merge pull request #522 from Tarrasch/mapreduce_atomic_movedir
Make streaming map-reduce use atomic move_dir
==
==================
901f7997;Erik Bernhardsson;2014-11-10 14:48:59 -0500;Merge pull request #513 from Houzz/greedy_num_workers
Takes number of workers into account in scheduler resource planning
==
==================
10f78e71;Uldis Barbans;2014-11-03 11:11:17 +0100;emit metrics about range completeness as events
A nice source of health information for a scheduled job. See RangeEvent documentation.

==

luigi/tools/range.py
test/range_test.py
==================
edc48e47;Erik Bernhardsson;2014-11-09 13:27:08 -0500;Merge pull request #529 from Tarrasch/fix_getpcmd_test
Fix test_getpcmd, which occasionally fails
==
==================
13085281;Arash Rouhani;2014-11-08 19:06:45 +0100;Fix test and unveil horrible naming convention
This patch fixes test case

    test_run_real (test.hadoop_test.HadoopJobTest)

It's very very saddening to have to commit this. But at the moment I
just want the test case to pass.

Apperently "File" uses "move", "MockFile" uses "rename" and
"HdfsTarget" uses both "move" and "rename". Yuck!

==

luigi/mock.py
==================
9fc2da67;Arash Rouhani;2014-11-08 18:00:32 +0100;Fix test_getpcmd, which occasionally fails
This have been pestering me and other luigi developers a lot. For
example, when you send a correct PR, it will sometimes fail on Travis
and you have to retrigger the bulid.

For example, it happened to me recently. This is what Travis prints:

    ======================================================================
    FAIL: test_getpcmd (lock_test.TestCmd)
    ----------------------------------------------------------------------
    Traceback (most recent call last):
      File "/home/travis/build/spotify/luigi/test/lock_test.py", line 32, in test_getpcmd
        "sleep 1"
    AssertionError: '[sleep]' != 'sleep 1'

    ----------------------------------------------------------------------

==

test/lock_test.py
==================
330ea6ac;Arash Rouhani;2014-11-08 17:29:19 +0100;Merge pull request #526 from Tarrasch/simplify_task_complete
Simplify task complete
==
==================
8a6ea75c;Erik Bernhardsson;2014-11-07 10:35:04 -0500;Merge pull request #512 from ziky90/master
Added support for PySpark
==
==================
81c8175c;Erik Bernhardsson;2014-11-07 08:55:04 -0500;Merge pull request #527 from Tarrasch/remove_ancient_test
Remove ancient file test/test.py
==
==================
6dfbfacf;Arash Rouhani;2014-11-07 09:55:10 +0100;Remove ancient file test/test.py
It doesn't even contains tests. I guess this is from pre-nosetests time.

    $ LUIGI_CONFIG_PATH=test/testconfig/client.cfg HADOOP_HOME=cdh ./scripts/ci/run_tests.sh test/test.py
    Using  distribution of Hadoop from cdh

    ----------------------------------------------------------------------
    Ran 0 tests in 0.000s

    OK

==

test/test.py
==================
8aff92cb;Arash Rouhani;2014-11-07 09:33:49 +0100;Simplify Task.complete()
Just using standard functional tools. Note that it's necessary to use
itertools to not change the semantics, in case one of the exists()
methods have side effects.

==

luigi/task.py
==================
6372f17f;Arash Rouhani;2014-11-07 09:30:31 +0100;Update documentation for Task.complete()
The old documentation was lying I believe, there is no "False only first
time" behavior.  I even wrote this small sample program.

    import luigi.interface
    import luigi.task

    luigi.interface.setup_interface_logging()

    class MyTask(luigi.task.Task):
        def run(self):
            print 'hi'

    my_task = MyTask()

    print my_task.complete()
    my_task.run()
    print my_task.complete()

Which gave:

    $ ipython arash_test.py
    /home/arash/spotify/repos/luigis/github_luigi/luigi/task.py:471: UserWarning: Task MyTask() without outputs has no custom complete() method
      warnings.warn("Task %r without outputs has no custom complete() method" % self)
    False
    hi
    False

Also removed the 2 year old TODO. It's hard to change semantics this far
up in the project I think.

==

luigi/task.py
==================
35243056;Arash Rouhani;2014-11-06 15:54:28 +0100;Add missing `pass` keyword
I have no idea why this compiled before.

==

luigi/task.py
==================
3a5e8d58;Arash Rouhani;2014-11-05 17:22:01 +0100;Make streaming map-reduce use atomic move_dir
This is essentially using the code introduced in spotify/luigi#393,
solving the exact same issue described there.

Without this patch, the renaming is of LBYL nature, and you could end up
with moving a directory inside another instead of actually renaming a
directory.

So others don't fall into the same pitfall, I added a comment to the
rename and move function discouraging it to be used for directories.

==

luigi/hadoop.py
luigi/hdfs.py
luigi/mock.py
==================
4d13e894;Arash Rouhani;2014-11-06 15:41:19 +0100;Merge pull request #524 from Tarrasch/less_verbose_tests
Lessen verbosity of tests
==
==================
fd5cf48a;Arash Rouhani;2014-11-06 13:26:53 +0100;Lessen verbosity of tests
The problem at hand is that the travis logs get truncated to 10'000
lines.  Even though you can download the whole log file, you still get
completely log blind due to the super-verbose output.

The reason we get so much output is because the python logging module
defaults to outputting to stderr which nosetests does not capture. We
want it to capture the output from the loggers, since you only care
about the output if the test fails.

My solution is nice in the sense that it doesn't touch the code at all.
Instead, we configure the logger through the built in way of doing
configuration files in luigi.

I ping @jcrobak since he added client.cfg in `.gitignore` in commit
c642a9ec. I found this use case for commiting client.cfg sensible.

The logging config file was inspired by
https://docs.python.org/2/howto/logging.html

==

test/testconfig/client.cfg
test/testconfig/logging.cfg
tox.ini
==================
9bd64763;Erik Bernhardsson;2014-11-06 08:53:52 -0500;Merge pull request #525 from Tarrasch/remove_deprecated_get_config
Remove deprecated interface.get_config()
==
==================
488ce134;Arash Rouhani;2014-11-06 13:33:48 +0100;Remove deprecated interface.get_config()
Been >1 year. Instead, use luigi.configuration.get_config()

==

luigi/interface.py
==================
4a3ecf6b;Arash Rouhani;2014-11-06 12:08:43 +0100;Merge pull request #523 from Tarrasch/remove_configuration_LuigiConfigParser
Remove deprecated interface.LuigiConfigParser
==
==================
95a7c116;Arash Rouhani;2014-11-06 11:27:56 +0100;Remove deprecated interface.LuigiConfigParser
It's been depreceated for > 1 year.

Instead use luigi.configuration.LuigiConfigParser

==

luigi/interface.py
test/_webhdfs_test.py
==================
a8c56ea4;Erik Bernhardsson;2014-11-05 10:26:39 -0500;Merge pull request #515 from ddaniels888/s3_multipart_upload
Add support for S3 multipart uploads, allowing files larger than 5GB to be uploaded to S3
==
==================
5b4d0b44;Erik Bernhardsson;2014-11-03 15:37:29 -0500;Merge pull request #510 from anyman/master
Running hdfs tests locally with minicluster
==
==================
09115fd9;Erik Bernhardsson;2014-11-01 11:21:07 -0600;Merge pull request #516 from hydrogen18/master
Add 'tools' package & Improve command line option documentation
==
==================
be0d7376;Eric Urban;2014-11-01 06:56:18 -0500;fix indentation

==

setup.py
==================
c6d430e7;Eric Urban;2014-10-31 18:06:18 -0500;Add 'tools' package so the package works when installed

==

setup.py
==================
1bf83fe4;Eric Urban;2014-10-30 16:32:40 -0500;correct a typo in the command line options documentation, expand the meaning of 'logdir'

==

bin/luigid
==================
6579f755;Doug Daniels;2014-10-30 12:46:48 -0400;Add support for S3 multipart uploads, allowing files larger than 5GB to be uploaded to S3

==

luigi/s3.py
test/_s3_test.py
==================
a6979d5e;Erik Bernhardsson;2014-10-30 11:17:44 -0400;Merge pull request #480 from spotify/ulzha/range
RangeHourly
==
==================
5e1ba0c3;Uldis Barbans;2014-10-02 13:47:46 +0200;initial RangeHourly implementation
Efficiently produces contiguous completed ranges of recurring tasks.

Already in:
* RangeHourlyBase general API
* RangeHourly subclass which automagically facilitates filesystem listing
  as the most common case. Supports tasks with multiple outputs and, as a
  convenience, WrapperTask hierarchies as well
* Convenient CLI usage

Coming soon:
* Events emitted with relevant metrics
* RangeDaily/Weekly/X-ly generalization
* More sanity checks to behave gracefully when preconditions aren't
  satisfied

Wishlist:
* More common cases facilitated, that are not like filesystem listing

==

luigi/__init__.py
luigi/task.py
luigi/tools/__init__.py
luigi/tools/range.py
test/range_test.py
==================
58182ae7;Anders Nyman;2014-10-20 11:14:06 +0200;Running hdfs tests locally with minicluster

==

.travis.yml
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
scripts/ci/run_tests.sh
scripts/ci/setup_env.sh
setup.py
test/hdfs_test.py
test/scheduler_test.py
test/snakebite_test.py
test/testconfig/client_hadoopcli.cfg
test/testconfig/core-site.xml
test/testconfig/log4j.properties
tox.ini
==================
92fd2d0a;Dave Buchfuhrer;2014-10-23 14:32:34 -0700;Takes number of workers into account in scheduler resource planning
I've noticed recently that sometimes I'll have a job with thousands of pending
tasks scheduled all using the same resource, but it's not running anything. All
of the tasks are ready and nothing else is using the resource.

It turned out that another worker had several tasks using the same resource
scheduled with higher priority. It only had one worker and wasn't going to get
to them anytime soon, but the greedy scheduling assigned all the resources to
this worker so it could sit for hours preparing to use them.

In order to alleviate this issue and allow resources to be used more freely,
this commit only allows workers to reserve resources when they are actually
about to use them.

==

luigi/scheduler.py
test/central_planner_test.py
==================
e16f2a80;Erik Bernhardsson;2014-10-23 16:52:03 -0600;Merge pull request #509 from Houzz/config_param_docs
Updates documentation for configuration
==
==================
ba6ace4f;Jan Zikeš;2014-10-22 19:11:46 +0200;Implemented and tested PySpark support

==

luigi/contrib/spark.py
test/spark_test.py
==================
2e46fad5;Jan Zikeš;2014-10-21 19:16:09 +0200;added PySpark support

==

luigi/contrib/spark.py
==================
95bb3132;Dave Buchfuhrer;2014-10-20 16:48:31 -0700;Updates documentation for configuration
This updates the documentation to contain explanations of most configuration
options that can be specified in client.cfg. I tried to include as many as
possible, but I've probably missed some. I grepped the code to try to find all
of them. For completeness, these include my best understanding of how each
parameter works. Many descriptions are therefore incomplete and need to be
filled out better by people who understand them.

Some descriptions may be wrong, but only in ways that reflect the understanding
an average user would have after reading the code to figure out how to properly
configure luigi. So this shouldn't be any worse than what we already have even
where it's inaccurate.

==

doc/configuration.rst
==================
cba512e6;Arash Rouhani;2014-10-20 15:30:01 +0200;Merge pull request #508 from nailor/add-unittest-trailing-slash
Add tests for the trailing slash snakebite rename case
==
==================
5004abe8;Jyrki Pulliainen;2014-10-20 13:38:56 +0200;Add tests for the trailing slash snakebite rename case

==

test/_snakebite_test.py
==================
005e3583;Erik Bernhardsson;2014-10-18 11:18:49 -0600;Merge pull request #501 from campanja/s3target-clean-up-after-unpacking
Make S3Target clean up when using format
==
==================
86f398dd;Erik Bernhardsson;2014-10-18 11:12:09 -0600;Merge pull request #507 from nailor/strip-trailing-slash-snakebite-rename
Remove trailing slash when using snakebite rename
==
==================
9d070fd2;Jyrki Pulliainen;2014-10-17 18:19:41 +0200;Remove trailing slash when using snakebite rename
Old functionality caused odd behavior when doing:

    snakebite.rename('foo/', 'bar/')

and the bar did not exist. As result it created the 'bar' first and
then moved 'foo' in there, resulting in 'bar/foo'.

By stripping the slashes on the right, the behavior works as one would
think: renames 'foo' to 'bar'.

==

luigi/hdfs.py
==================
944f0741;Erik Bernhardsson;2014-10-17 11:38:25 -0400;Merge pull request #505 from liquid-sky/master
Another Hadoop native libraries warning fix.
==
==================
7a8ce0e3;Evgeny Lazarev;2014-10-17 15:05:44 +0100;Another Hadoop native libraries warning fix.
By default 64bit Apache Hadoop binaries come with 32bit native libraries, which, unless compiled separately, cause warning header to be appended:

"OpenJDK 64-Bit Server VM warning: You have loaded library /usr/local/hadoop-2.3.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.
It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'."

>>> from luigi import hdfs
>>> cmd = ['hadoop', 'fs', '-count', '/cache']
>>> stdout = hdfs.call_check(cmd)
>>> print stdout
OpenJDK 64-Bit Server VM warning: You have loaded library /usr/local/hadoop-2.3.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.
It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.
           1            1           50214873 /cache

This fix will get rid of this header.

==

luigi/hdfs.py
==================
f75246e8;Erik Bernhardsson;2014-10-16 14:18:59 -0400;Merge pull request #503 from Houzz/disable_email_fix
Fixes wrong units in disable e-mail message
==
==================
236340eb;Dave Buchfuhrer;2014-10-16 10:59:36 -0700;Fixes wrong units in disable e-mail message
When the units for the disable parameters changed, I neglected to
update the e-mail message accordingly.

==

luigi/scheduler.py
==================
d501d6ea;Tommy Engström;2014-10-16 16:01:36 +0200;Make S3Target clean up when using format

==

luigi/s3.py
test/_s3_test.py
==================
06b34519;Erik Bernhardsson;2014-10-16 10:17:42 -0400;Merge pull request #500 from campanja/s3client-accept-any-boto-config
S3client accept any boto config
==
==================
043988b6;Tommy Engström;2014-10-16 15:15:29 +0200;Test s3 config from luigi configuration

==

test/_s3_test.py
==================
7a99fd2c;Tommy Engström;2014-10-16 12:16:26 +0200;Fix pep8 errors

==

test/_s3_test.py
==================
f90bb9c8;Tommy Engström;2014-10-16 11:59:47 +0200;S3Client accepts kwargs and pass them to boto
All options can be inserted in s3 section in config. All values will be
converted to int if possible to allow port etc to be specified.

==

luigi/s3.py
==================
11e8e061;Tommy Engström;2014-10-16 11:59:01 +0200;Fix pep8 errors

==

luigi/s3.py
==================
e1f341f4;Arash Rouhani;2014-10-16 11:41:59 +0200;Merge pull request #497 from Tarrasch/fix_lock_file_owner
Fix lock file owner issue
==
==================
356cf37c;Erik Bernhardsson;2014-10-15 21:50:21 -0400;Merge pull request #499 from Houzz/priority_update_bug_fix
Fixes scheduler bug caused by updating priority on pruned tasks
==
==================
1c2127ae;Dave Buchfuhrer;2014-10-15 13:49:32 -0700;Fixes scheduler bug caused by updating priority on pruned tasks
If a task is pruned in the scheduler but a task that depends on it still exists,
the priority update recursion in add_task becomes vulnerable to encountering the
pruned task before it has been added back. Even worse, if the task that depends
on the pruned task is done, the pruned task will never be rescheduled.

This adds a test to demonstrate the code flaw and fixes it by skipping over
missing tasks in priority update. The test also shows that the priority will
still be updated appropriately if the task is eventually added back.
==

luigi/scheduler.py
test/central_planner_test.py
==================
7fc28d74;Erik Bernhardsson;2014-10-15 14:09:46 -0400;Merge pull request #482 from Houzz/disabled_tasks
Adds DISABLED status for tasks in scheduler.
==
==================
723b03ba;Dave Buchfuhrer;2014-10-08 14:50:56 -0700;Adds DISABLED status for tasks in scheduler.
Tasks can get the disabled status either through scheduling or from repeated
failures. The scheduler handles disabling via repeated failures, and tasks
disabled this way are automatically re-enabled after a fixed amount of time
or when pruned. This allows tasks that are repeatedly running and blocking
progress on other tasks to be pushed aside until someone can have a look.

Tasks can be set as disabled via the disabled parameter in Task. Tasks with
this parameter set to true have will be scheduled as disabled and will not be
run. This disable can only be removed by setting disabled to false in the task
and re-scheduling it. This makes it easier to stop running broken tasks without
having to manually figure out all upstream dependents and remove those as well.

==

luigi/scheduler.py
luigi/server.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/task.py
luigi/task_status.py
luigi/worker.py
test/central_planner_test.py
==================
fc8ee32b;Arash Rouhani;2014-10-15 16:54:00 +0200;Fix lock file owner issue
When user abc123 runs luigi and leaves a lock file, you will have a
state something like this

    $ ll /var/tmp/luigi/4c2ae353c4616cf210b3dc2b673d07ab.pid
    -rwxrwxrwx 1 abc123 abc123 6 Oct 14 14:21 /var/tmp/luigi/4c2ae353c4616cf210b3dc2b673d07ab.pid*

Then, when user xyz789 runs the same luigi command which has the same
hash for the lock file, the user will run on a runtime exceptin when
the code in `luigi/lock.py` is doing chmod on the file, because the
owner of the file is abc123. Since there's no way to chown the file to
yourself if you're not the owner. So we just delete the file before
doing an overwrite of the file. This is the most reliable solution I
coud come up with.

I would love to create a test case for this, but I'm not sure how to do
it. Is there any way to chown a file to some other user (anyone) that
works on all supported luigi platforms?

==

luigi/lock.py
==================
0b2b8550;Erik Bernhardsson;2014-10-13 22:05:22 -0400;Merge pull request #496 from Houzz/greedy_scheduling
Improves resource management in scheduler.
==
==================
5dfbc450;Erik Bernhardsson;2014-10-13 19:23:09 -0400;Merge pull request #494 from Houzz/prune_workers
Removes deleted workers from task.workers
==
==================
db49ae0e;Erik Bernhardsson;2014-10-13 19:18:30 -0400;Merge pull request #495 from ivuk/fix-typo
Trim whitespace, fix a few typos in examples
==
==================
bf16c10a;Dave Buchfuhrer;2014-10-13 11:23:58 -0700;Improves resource management in scheduler.
I've noticed recently that my scheduler has been limiting a lot of my tasks to
run 1 at a time when the resource limitations should allow 4 simultaneous jobs.
This happens when tasks have multiple resources. Some of my tasks would have
a resource for writing to mysql and one for making a hive query, while others
would only have one for making a hive query. I have 1 write resource, and 4
hive resources, so I should be able to run 1 mysql write job and 3 other hive
jobs that don't write to mysql. Unfortunately, the mysql write jobs have higher
priority, so the end up getting scheduled in the greedy scheduling and take all
of the hive resources without being able to actually run more than one.

I added a test case for this as well as a few other similar issues and re-wrote
get_work to keep track of the greedy resources and the actual resources
separately. A task must fit in both of these to be scheduled, but this gives
more flexibility to allow tasks to run that don't interfere with the running of
higher priority tasks. Running 3 of the hive-only resource jobs doesn't
interfere with running the next hive plus mysql write task when the current one
is finished.
==

luigi/scheduler.py
test/central_planner_test.py
==================
4e8b97cd;Dave Buchfuhrer;2014-10-13 10:34:26 -0700;Removes deleted workers from task.workers
After deleting workers, they remain in each task's worker list. This breaks the
unique pending counts in the scheduler, as tasks have appear to have multiple
workers even when only one of those workers is active. This fixes that issue by
removing deleted workers from each task's active list.

I also moved the stakeholders update into SimpleTaskState, as that should really
be the only place where we modify task properties.

==

luigi/scheduler.py
==================
97e45fb3;Igor Vuk;2014-10-13 21:21:24 +0200;Trim whitespace, fix a few typos in examples

==

examples/elasticsearch_index.py
examples/ssh_remote_execution.py
examples/top_artists.py
==================
db90a2a0;Arash Rouhani;2014-10-12 21:37:10 +0200;Merge pull request #486 from jcrobak/remove-deprecated-fn-get-fn
Remove deprecated fn and get_fn.
==
==================
bf18a6df;Joe Crobak;2014-10-04 21:41:36 +0000;Remove deprecated fn and get_fn.
These functions were deprecated in 2012 (before the project
was open-sourced?)

Also remove extraneous `import warnings`

==

luigi/hdfs.py
==================
cca08545;Erik Bernhardsson;2014-10-10 11:04:24 -0700;Merge pull request #493 from Houzz/graph_width
Adapts visualizer graph width to screen size
==
==================
a0834056;Dave Buchfuhrer;2014-10-10 09:48:52 -0700;Adapts visualizer graph width to screen size
This uses window.innerWidth - 51 to scale the graph to the screen size and allow
a 20-pixel padding on either side. This should be innerWidth - 40, but the graph
exceeds graphWidth by 11 pixels for some reason.

==

luigi/static/visualiser/js/graph.js
==================
91a1ada7;Erik Bernhardsson;2014-10-10 08:33:56 -0700;Merge pull request #492 from liquid-sky/master
Modify HDFS to ignore Hadoop Native Libraries warning
==
==================
0af58e0d;Evgeny Lazarev;2014-10-10 15:01:05 +0100;Modify HDFS to ignore Hadoop Native Libraries warning
- By default 64bit Hadoop binaries come with 32bit Native Libraries, which means that hadoop cli tools will add a header to the output:

```
14/10/10 13:38:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
OpenJDK 64-Bit Server VM warning: You have loaded library /usr/local/hadoop-2.3.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.
It's highly recommended that you fix the library with 'execstack -c <libfile>', or link it with '-z noexecstack'.
```

The first line will be directed to `stderr` by subprocess and the latter two will be stored in `stdout`.

==

luigi/hdfs.py
==================
dbd5861a;Erik Bernhardsson;2014-10-08 17:22:55 -0700;Merge pull request #481 from Houzz/pyparsing_requirement
Adds pyparsing to requirements.txt
==
==================
f77df745;Erik Bernhardsson;2014-10-08 17:21:19 -0700;Merge pull request #490 from Houzz/fix_worker_list
Fixes workers list
==
==================
942dbdf4;Dave Buchfuhrer;2014-10-08 15:57:21 -0700;Fixes workers list

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
60e4412b;Erik Bernhardsson;2014-10-08 08:10:43 -0700;Merge pull request #489 from Houzz/worker_viz
Adds a worker list view to the visualizer
==
==================
96a65b69;Erik Bernhardsson;2014-10-08 07:45:53 -0700;Merge pull request #446 from spotify/erikbern/scheduler-refactoring
Erikbern/scheduler refactoring
==
==================
46db6fe7;Erik Bernhardsson;2014-10-07 15:00:25 -0700;Merge pull request #488 from Houzz/workers_count
Adds number of workers to worker_info
==
==================
d1faaee7;Dave Buchfuhrer;2014-10-07 14:24:29 -0700;Adds a worker list view to the visualizer

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/worker.py
==================
0a6e031f;Dave Buchfuhrer;2014-10-07 14:32:00 -0700;Adds number of workers to worker_info

==

luigi/worker.py
==================
fe96e485;Erik Bernhardsson;2014-10-07 13:59:40 -0700;Merge pull request #487 from Houzz/sudo_user
Adds sudo user to worker info when available
==
==================
5339987a;Dave Buchfuhrer;2014-10-07 12:41:13 -0700;Adds sudo user to worker info when available
Many of the jobs I use have to be run as hadoop, so it's impossible to tell from
the user who actually ran the job. This adds sudo_user to the worker info so
that it's easier to tell who's running what. This is very handy when I need to
figure out why a large backfill or test job is running if it's causing a lot of
errors or hogging all the resources.

==

luigi/worker.py
==================
4bcb2ca8;Erik Bernhardsson;2014-09-29 13:53:55 +0200;This refactoring is functionally equivalent, but separates the state of the scheduler into its own class. The interface between the scheduler and the state is defined in a way so that it can be easily replaced with a SQL database or some other storage engine.

==

luigi/scheduler.py
test/scheduler_test.py
==================
ade5c78f;Erik Bernhardsson;2014-10-06 13:10:09 -0400;Merge pull request #484 from Houzz/viz
include priority and resource information in visualizer
==
==================
7c33b2e8;Erik Bernhardsson;2014-10-05 16:26:19 -0400;Merge pull request #483 from RUNDSP/spark-1x-job-pr
add support for spark 1.x
==
==================
09517773;Erik Bernhardsson;2014-10-05 16:23:41 -0400;Merge pull request #485 from jcrobak/fix-luigi-hdfs-deprecation-warning
Fix deprecation warning when importing luigi.hdfs.
==
==================
25532a4d;Joe Crobak;2014-10-04 21:37:17 +0000;Fix deprecation warning when importing luigi.hdfs.
You will still see a deprecation warning when creating an
HdfsTarget if you haven't specified a config.

==

luigi/hdfs.py
==================
acf835b5;Kyle Sun;2014-10-02 18:20:51 -0700;include priority and resource information in visualizer

==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/visualiserApp.js
test/scheduler_visualisation_test.py
==================
6cfd2bb6;Mike Placentra;2014-10-03 15:59:04 -0400;fix for python 2.6

==

luigi/contrib/spark.py
==================
0f76f7d0;Tim Conklin;2014-10-03 15:48:49 -0400;add support for spark 1.x

==

luigi/contrib/spark.py
test/spark_test.py
==================
84f27085;Erik Bernhardsson;2014-10-03 08:25:38 -0400;Merge pull request #462 from Houzz/schedule_for_dependents
Prefers tasks with more dependents in scheduling
==
==================
a7c536a7;Dave Buchfuhrer;2014-10-02 14:44:00 -0700;Adds pyparsing to requirements.txt

==

test/requirements.txt
==================
5e4c1ab8;Dave Buchfuhrer;2014-09-22 14:41:46 -0700;Prefers tasks with more dependents in scheduling

==

luigi/scheduler.py
test/central_planner_test.py
==================
0c9aca8e;Erik Bernhardsson;2014-10-02 16:24:08 -0400;Merge pull request #461 from Houzz/unique_pending
Allows workers to keep alive only for unique pending tasks
==
==================
e102b547;Elias Freider;2014-09-30 14:18:26 +0200;Merge pull request #478 from spotify/tarrasch/add-pyparsing-dependency
Add python-pyparsing as runtime dependency in deb
==
==================
4b74aac3;Arash Rouhani;2014-09-30 14:06:46 +0200;Add build packages as runtime dependency in deb
Packages that depend on luigi, like company internal versions of luigi,
will fail, as it's not sufficient to only have pyparsing as a build
dependency.

==

debian/control
==================
3c282cf3;Arash Rouhani;2014-09-30 13:33:15 +0200;Merge pull request #477 from freider/remove_skiptest
Remove SkipTest which isn't Python 2.6-compatible.
==
==================
96a60766;Elias Freider;2014-09-30 11:44:21 +0200;Remove SkipTest which isn't Python 2.6-compatible. Adding python-sqlalchemy debian dependency as to not break db_task_history tests

==

debian/control
test/db_task_history_test.py
==================
e7583941;Arash Rouhani;2014-09-29 16:59:16 +0200;Merge pull request #475 from Tarrasch/add_pyparsing_dependency
Add pyparsing as build dependency
==
==================
afff37da;Arash Rouhani;2014-09-29 14:24:44 +0200;Add pyparsing as deb build dependency
I verified that this works by running this on Spotify's internal build
agents. Previous builds were failing with message

    ImportError: No module named pyparsing

==

debian/control
==================
cede0be1;Erik Bernhardsson;2014-09-26 14:44:37 +0200;Merge pull request #472 from sisidra/sisidra/task-previous
Implement Task.previous and Task.get_previous_completed
==
==================
0949fab8;Martins Kalvans;2014-09-26 11:36:12 +0200;Move previous to util.py

==

luigi/task.py
luigi/task_previous.py
luigi/util.py
test/util_previous_test.py
==================
530c8b5a;Erik Bernhardsson;2014-09-26 01:13:13 +0200;Merge pull request #474 from spotify/erikbern/priority-doc
More tests for priority
==
==================
d982b881;Erik Bernhardsson;2014-09-26 01:06:22 +0200;More tests for priority

==

test/priority_test.py
==================
b788922f;Erik Bernhardsson;2014-09-26 00:48:55 +0200;Merge pull request #473 from spotify/erikbern/dynamic-reqs-fix
send outputs back into yield statement (for dynamic requirements, #424)
==
==================
df2a4c4e;Martins Kalvans;2014-09-25 17:46:04 +0200;Use clone instead of class constructor

==

luigi/task_previous.py
==================
46228bca;Martins Kalvans;2014-09-25 17:13:02 +0200;Refactor previous as utility functions

==

luigi/task.py
luigi/task_previous.py
test/task_previous_test.py
==================
f9d0a7b2;Martins Kalvans;2014-09-25 16:06:38 +0200;Implement Task.previous and Task.get_previous_completed
Move from Spotify internal to public

==

luigi/task.py
test/task_previous_test.py
==================
5b955ccd;Erik Bernhardsson;2014-09-25 17:10:32 +0200;Merge pull request #464 from vishalrp/master
Allow multiple hiverc files.
==
==================
6946e0cd;Erik Bernhardsson;2014-09-25 16:21:54 +0200;send outputs back into yield statement (for dynamic requirements, #424)

==

luigi/worker.py
test/worker_test.py
==================
a14cb60c;Erik Bernhardsson;2014-09-25 14:47:35 +0200;Merge pull request #470 from spotify/freider/no_importlib
Remove unnecessary importlib dependency
==
==================
588aa945;Erik Bernhardsson;2014-09-25 14:46:43 +0200;Merge pull request #469 from spotify/erikbern/mock-cleanup
Cleanup of luigi.mock
==
==================
df326512;Erik Bernhardsson;2014-09-25 13:01:06 +0200;Cleanup of luigi.mock
This change makes sure the manager (needed by MockFile) isn't instantiated in the global scope. Also a bunch of other cleanup to avoid pulling out internal variables in tests etc

luigi.mock would instantiate multiprocessing.Manager() in the global scope which ends up calling bind(). There is a limitation in the Linux kernel where named Unix sockets can't have longer names than 120 bytes, or else you will segfault. In Hadoop jobs, it turns out that the TMPDIR is actually a path longer than 120 bytes, which meant that any Hadoop job that accidentally imports luigi.mock will fail with a really obscure error.

==

luigi/mock.py
test/cmdline_test.py
test/copy_test.py
test/decorator_test.py
test/fib_test.py
test/hadoop_test.py
test/mock_test.py
test/optparse_test.py
test/recursion_test.py
test/wrap_test.py
==================
6d897647;Elias Freider;2014-09-25 14:05:50 +0200;Remove unnecessary importlib dependency

==

.travis.yml
luigi/interface.py
==================
71cd8fd9;Dave Buchfuhrer;2014-09-22 15:47:58 -0700;Allows workers to keep alive only for unique pending tasks
With resource limitations, it's very easy to have a lot of workers
sitting around just waiting for resources. This is problematic for
people using locks to prevent scheduling, as it will stop new tasks from
getting scheduled. To limit this behavior, this commit adds an option to
keep alive only if there is a pending task with all requirements done
which no other worker can work on. So older workers whose tasks are all
being waited on by newer workers can just die. I require the unique
tasks to be ready because all of my workers have a unique WrapperTask at
the root, and I don't want to wait for those. Having a unique ready task
tends to mean the same thing as having a unique pending task other than
the root one for me, so this works well for my scheduling patterns.

Since this won't work well for all scheduling patterns, it has to be
activated via a config parameter, worker-require-unique-ready as well as
enabling worker-keep-alive.

==

luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
test/worker_test.py
==================
d7fc6f4f;Erik Bernhardsson;2014-09-24 10:56:25 +0200;Merge pull request #424 from tommyengstrom/dynamic
Dynamic requirements
==
==================
cf94429f;Tommy Engstrom;2014-09-13 23:13:54 +0200;Add dynamic dependency test
Also fix import problem where it would try to import worker_test
from luigi/test/test.py due to luigi/test having higher priority
in sys.path and worker_test being located in the test folder.

==

luigi/interface.py
test/worker_test.py
==================
b825ee12;Tommy Engstrom;2014-09-13 22:12:00 +0200;Add test for task to str params conversion

==

test/task_test.py
==================
64cd2122;Tommy Engstrom;2014-09-13 19:53:14 +0200;Remove id_to_parsable from task.py

==

luigi/task.py
luigi/worker.py
==================
8a871b5f;Tommy Engstrom;2014-09-11 23:24:10 +0200;Add load_task function in interface

==

luigi/interface.py
luigi/worker.py
==================
d9037140;Tommy Engstrom;2014-09-08 20:29:42 +0200;Change init proceduce for dynamic requirements
It used to be initialized using task_id now it's done using
task_family + str_params.

==

luigi/interface.py
luigi/worker.py
==================
fcad9b87;Tommy Engstrom;2014-09-08 19:47:29 +0200;Make parameter.serialize handle is_list

==

luigi/parameter.py
==================
c29f0bfd;Tommy Engstrom;2014-09-08 07:03:15 +0200;Make it compatible with Python 2.6

==

.travis.yml
examples/__init__.py
examples/dynamic_requirements.py
luigi/task.py
==================
367dc009;Tommy Engstrom;2014-09-08 06:50:30 +0200;Add pyparsing to .travis.yml

==

.travis.yml
==================
43faf11e;Tommy Engstrom;2014-09-07 23:24:11 +0200;Add dynamic requirement example

==

examples/dynamic_requirements.py
==================
b708ffc8;Tommy Engstrom;2014-09-07 23:23:37 +0200;Add support for dynamic requiremnets
Tasks may now yield new requirements in run just as they are returned
in requires. If requirements are fulfilled when yielded the task will
continue, if not it will be rescheduled to be run when requirements are
finished. Note that this means that the task will be rerun from start.

==

luigi/rpc.py
luigi/scheduler.py
luigi/task.py
luigi/task_status.py
luigi/worker.py
==================
1c96bafc;Vishal Patel;2014-09-23 10:34:43 -0700;Updated the doc string of the hiverc function.

==

luigi/hive.py
==================
73b90f43;Vishal Patel;2014-09-23 10:32:12 -0700;Allow hiverc to be a list so that multiple RC files can be loaded. The hive command hive

==

luigi/hive.py
==================
ddf5c6ff;Uldis Barbans;2014-09-23 13:24:26 +0200;Merge pull request #463 from spotify/ulzha/range
refactor to make a reusable Register.get_task_cls
==
==================
9e02ece7;Uldis Barbans;2014-09-23 12:41:45 +0200;refactor to make a reusable Register.get_task_cls

==

luigi/interface.py
luigi/task.py
==================
47014a31;Erik Bernhardsson;2014-09-23 11:31:01 +0200;Merge pull request #460 from Houzz/worker_sleep
Allows configuration of wait between tasks finishing
==
==================
d56e2875;Elias Freider;2014-09-23 11:14:02 +0200;Merge pull request #433 from hwrdprkns/better_hive_exists
More robust exists for hive. 
==
==================
67cade1a;Dave Buchfuhrer;2014-09-22 13:30:09 -0700;Allows configuration of wait time for next task to finish

==

luigi/worker.py
==================
93fe1b73;Erik Bernhardsson;2014-09-22 14:15:01 +0200;v1.0.19

==

setup.py
==================
54984663;Erik Bernhardsson;2014-09-22 14:12:28 +0200;Merge pull request #455 from Tarrasch/tmp-paths-with-username
Hdfs /tmp paths with username
==
==================
5c9c27bf;Erik Bernhardsson;2014-09-22 14:12:15 +0200;Merge pull request #456 from Tarrasch/fix-_hdfs_test
Fix hdfs tests
==
==================
f665dfef;Erik Bernhardsson;2014-09-22 14:11:54 +0200;Merge pull request #454 from edx/edx/brianhw/include-egginfo-in-packages
Edx/brianhw/include egginfo in packages
==
==================
5fac0c64;Taylor Perkins;2014-09-20 10:29:41 -0700;More robust exists for hive.
Instead of trying to scrape the output for a "table not found" we can just look at the database and see if the table exists by querying for all the tables with the exact name.

==

luigi/hive.py
test/hive_test.py
==================
8ba2001d;Erik Bernhardsson;2014-09-19 23:50:04 -0400;Merge pull request #458 from Houzz/update_resources
Fixes resource tracking bug in scheduler
==
==================
b8e935c4;Dave Buchfuhrer;2014-09-19 15:36:56 -0700;Fixes resource tracking bug in scheduler

==

luigi/scheduler.py
test/central_planner_test.py
==================
ce0732ef;Erik Bernhardsson;2014-09-19 15:54:13 -0400;Merge pull request #445 from Houzz/resources
Allows specification of resource limitations for tasks
==
==================
2029e663;Erik Bernhardsson;2014-09-19 12:03:02 -0400;Merge pull request #457 from Tarrasch/use-logger-not-print
hdfs: Use logger rather than print statements
==
==================
c97583c6;Arash Rouhani;2014-09-19 15:21:45 +0200;hdfs: Add unix username to /tmp paths
The idea is that we would rather see paths like

        /tmp/<username>/blah/luigi-tempfile-1234

over just

        /tmp/blah/luigi-tempfile-1234

The (very) common issue that Spotify is experiencing is that users first
run their job as their own user to test their luigi job, then they use
the production user. The production user will then fail to run, because
the owner of the file will be the interactive user and not the
production user. It's a serious waste of time to chowning folders all
the time and encountering quite unnecessary permission errors.

==

luigi/hdfs.py
test/_hdfs_test.py
==================
c42ca344;Arash Rouhani;2014-09-19 10:36:44 +0200;hdfs: Use logger rather than print statements
I tested this by running the following on a hdfs-configured machine:

    import luigi.hdfs
    import luigi.interface

    luigi.interface.setup_interface_logging()

    pipe = luigi.hdfs.HdfsAtomicWritePipe('my_file')
    pipe.writeLine('Hello')
    pipe.abort()
    pipe.writeLine('world')
    pipe.close()

==

luigi/hdfs.py
==================
7596215a;Arash Rouhani;2014-09-19 15:35:35 +0200;_hdfs_test: Fix failing test case
I think this started to fail since the changes I introduced in
spotify/luigi#393.

==

test/_hdfs_test.py
==================
fabd8b04;Arash Rouhani;2014-09-19 15:31:35 +0200;Fix deprecation warning
We should use raise_if_exists over fail_if_exists. I guess my clever and
tricky `deprecate_kwarg` method is a bit too meta. :)

==

luigi/hdfs.py
==================
f7603bbc;Arash Rouhani;2014-09-19 15:05:16 +0200;_hdfs_test: 2.6 backport for assertRegexpMatches

==

test/_hdfs_test.py
==================
fe93272f;Erik Bernhardsson;2014-09-19 07:08:30 -0400;Merge pull request #453 from Houzz/ignore_empty_package_path
Treats empty package.__path__ like it's missing
==
==================
e23a01ea;Brian Wilson;2014-09-18 18:26:00 -0400;Add test data for creating package archives with egg-info.

==

test/create_packages_archive_root/package.egg-info/top_level.txt
test/hadoop_test.py
==================
195db32a;Dave Buchfuhrer;2014-09-18 14:43:33 -0700;Treats empty package.__path__ like it's missing

==

luigi/hadoop.py
==================
6450c746;Dave Buchfuhrer;2014-09-18 14:01:54 -0700;Changes resource example

==

luigi/task.py
==================
d98b79fa;Brian Wilson;2014-09-17 15:33:11 -0400;Add support for adding egg-info files to packages archive.
In order for packages that make use of entry points to work on Hadoop
node, the relevant egg-info directories also need to be copied to those
nodes. This change performs a simple check to see if a related egg-info
is present for a requested package, and adds those files as well.

==

luigi/hadoop.py
==================
31c9c7ed;Dave Buchfuhrer;2014-09-11 20:13:39 -0700;Adds resource limitations for tasks

==

luigi/configuration.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/task.py
luigi/worker.py
test/central_planner_test.py
==================
6f130584;Erik Bernhardsson;2014-09-18 10:53:22 -0400;Merge pull request #452 from spotify/erikbern/444-patch
Move creating dummy tasks for task deps from _update_prority to _add_task
==
==================
b96d1911;Erik Bernhardsson;2014-09-17 14:16:04 -0400;Merge pull request #428 from jcrobak/s3-api-changes
luigi.s3 api changes.
==
==================
2f6625f7;Erik Bernhardsson;2014-09-17 14:09:00 -0400;Move creating dummy tasks for task deps from _update_prority to _add_task
See #444

==

luigi/scheduler.py
==================
1dc56187;Erik Bernhardsson;2014-09-17 14:01:14 -0400;Merge pull request #444 from Houzz/recursive_priority
Ensures that dependencies have at least as high priority as dependents
==
==================
a23ecc25;Dave Buchfuhrer;2014-09-15 16:37:37 -0700;Removes duplicate loops over deps in priority update

==

luigi/scheduler.py
==================
539cd2cf;Erik Bernhardsson;2014-09-15 16:50:22 -0400;Merge pull request #448 from Houzz/html_email
Allows sending of html e-mail
==
==================
d37fb917;Dave Buchfuhrer;2014-09-12 13:59:56 -0700;Allows sending of html e-mail

==

luigi/notifications.py
luigi/worker.py
==================
5bc6a0bd;Erik Bernhardsson;2014-09-12 18:01:12 -0400;Merge pull request #447 from Houzz/update_requirements
Updates test/requirements.txt to allow running of all unit tests
==
==================
b9e22eec;Dave Buchfuhrer;2014-09-12 13:00:47 -0700;Updates test/requirements.txt to allow running of all unit tests

==

test/requirements.txt
==================
1d4df6e5;Dave Buchfuhrer;2014-09-11 17:28:58 -0700;Ensures that dependencies have at least as high priority as dependents

==

luigi/scheduler.py
test/central_planner_test.py
==================
4b4e49c7;Erik Bernhardsson;2014-09-10 13:50:36 -0400;Merge pull request #442 from spotify/erikbern/dead-children-processes
Catch dead child processes
==
==================
0fc98b98;Erik Bernhardsson;2014-09-10 12:40:40 -0400;Merge pull request #437 from freider/fix_open_mkdir
Don't raise if parent dir exists when writing hdfs files
==
==================
3d988136;Erik Bernhardsson;2014-09-10 09:22:26 -0400;Catch dead child processes
See discussion in #440 and #434 - this might address some of the issues

There's still some issues where events aren't triggered for dead children, but that bug has always been there, so let's fix separately

==

luigi/worker.py
test/worker_test.py
==================
41e09996;Erik Bernhardsson;2014-09-10 06:41:30 -0400;Merge pull request #441 from Tarrasch/default_deprecation_warning
Fix deprecation warning
==
==================
3c7cf8e5;Erik Bernhardsson;2014-09-10 06:35:41 -0400;Merge pull request #440 from spotify/erikbern/unittest-439
Test for #439 – worker that catches a SystemExit exception
==
==================
bfdd3ffa;Arash Rouhani;2014-09-10 09:31:18 +0200;Fix deprecation warning
     INFO:subp.spluigi:/home/arash/spotify/repos/luigis/github_luigi/luigi/parameter.py:190: DeprecationWarning: Use value rather than default. The meaning of "default" has changed
     INFO:subp.spluigi:  warnings.warn('Use value rather than default. The meaning of "default" has changed', DeprecationWarning)

I verified this by running a normal Spotify luigi job.

==

luigi/interface.py
luigi/parameter.py
==================
f6ffcbd3;Erik Bernhardsson;2014-09-09 17:57:33 -0400;Test for #439 – worker that catches a SystemExit exception

==

test/worker_test.py
==================
1c63a201;Erik Bernhardsson;2014-09-09 17:57:01 -0400;Merge pull request #439 from tommyengstrom/no-worker-response-bugfix
Make TaskProcess catch all Exceptions
==
==================
9ff5d249;Tommy Engström;2014-09-09 22:34:05 +0200;Make sure variables exists when put on queue

==

luigi/worker.py
==================
90137add;Tommy Engström;2014-09-09 21:31:30 +0200;Make TaskProcess catch all Exceptions
"except Exception" will not catch all types of exceptions.
Also moved the put on queue to a finally block in case the error
handeling crashes for some reason

==

luigi/worker.py
==================
2a32a607;Erik Bernhardsson;2014-09-09 11:18:09 -0400;Merge pull request #438 from spotify/erikbern/import-worker-event
Don't import luigi.worker from __init__.py
==
==================
bb5d81d9;Erik Bernhardsson;2014-09-09 10:18:09 -0400;Don't import luigi.worker from __init__.py
There's some really fishy bug going on with multiprocessing that we are investigating. It *seems* like (but still to be confirmed) that luigi.hadoop ends up importing luigi.worker which in turn imports multiprocessing. multiprocessing *seems* to have a bug causing an exception in the global scope in case the temporary directory is too long (bind() fails if the temp path is > 107 characters, this is a known UNIX issue)

Exception from a Hadoop job:

  __import__('pkg_resources').declare_namespace(__name__)
Process SyncManager-1:
Traceback (most recent call last):
  File "/usr/lib/python2.6/multiprocessing/process.py", line 232, in
_bootstrap
    self.run()
  File "/usr/lib/python2.6/multiprocessing/process.py", line 88, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python2.6/multiprocessing/managers.py", line 517, in
_run_server
    server = cls._Server(registry, address, authkey, serializer)
  File "/usr/lib/python2.6/multiprocessing/managers.py", line 136, in
__init__
    self.listener = Listener(address=address, backlog=5)
  File "/usr/lib/python2.6/multiprocessing/connection.py", line 106, in
__init__
    self._listener = SocketListener(address, family, backlog)
  File "/usr/lib/python2.6/multiprocessing/connection.py", line 227, in
__init__
    self._socket.bind(address)
  File "<string>", line 1, in bind
error: AF_UNIX path too long

Even if the theory above isn't correct, this still cleans up some import dependencies, by moving Event to its own module

==

luigi/__init__.py
luigi/event.py
luigi/worker.py
==================
e9aae5d5;Elias Freider;2014-09-09 15:04:28 +0200;Don't raise if parent dir exists when writing hdfs files

==

luigi/hdfs.py
==================
1947f0e8;Erik Bernhardsson;2014-09-08 10:04:20 -0400;Merge pull request #431 from Tarrasch/fix_has_default_deprecation
Fix deprecation warnings being emitted
==
==================
8221a62d;Arash Rouhani;2014-09-08 15:40:26 +0200;Fix deprecation warnings being emitted
~arash/luigi/parameter.py:168: DeprecationWarning: Use has_value rather than has_default. The meaning of "default" has changed
  warnings.warn('Use has_value rather than has_default. The meaning of "default" has changed', DeprecationWarning)

I verified that it works for me by running a normal Spotify luigi job.

==

luigi/interface.py
luigi/parameter.py
==================
a832c042;Erik Bernhardsson;2014-09-07 21:06:01 -0400;Merge pull request #427 from jcrobak/doc-fixes
Doc fixes
==
==================
dd19b1df;Joe Crobak;2014-09-07 20:10:15 +0000;luigi.s3 api changes.
* Add support for flags other than _SUCCESS.
* Introduce S3FlagTarget instead of S3EmrTarget, as there's really
  nothing EMR specific about that target (which could be confusing).

==

luigi/s3.py
==================
e1ec0042;Joe Crobak;2014-09-07 20:06:13 +0000;Fix luigi.s3 and luigi.webhdfs default imports
Don't fail when importing luigi.s3 or luigi.webhdfs if deps
aren't satisified. This improves the ability to generate api
docs for these modules when required packages aren't installed,
and it is in line with the pattern used in luigi.{hdfs,hive,postgres}
and other places.

==

luigi/s3.py
luigi/webhdfs.py
==================
d74afeb7;Joe Crobak;2014-09-07 20:05:10 +0000;Add auto-docs for new luigi.contrib packages.

==

doc/api/luigi.contrib.rst
==================
b4445230;Erik Bernhardsson;2014-09-05 11:21:43 -0400;Merge pull request #425 from freider/freider/ssh_dependency
Adding openssh-client as a dependency to make sure ssh tests work.
==
==================
0602c151;Elias Freider;2014-09-05 15:41:02 +0200;Adding openssh-client as a dependency to make sure ssh tests work.
On build systems without the ssh executable some ssh tests would previously fail

==

debian/control
==================
8453ab4b;Erik Bernhardsson;2014-09-04 12:00:30 -0400;Merge pull request #416 from tresata/notifications-boto
Allow use of Amazon SES for notification Emailing
==
==================
8bbcf50b;Erik Bernhardsson;2014-09-04 12:00:08 -0400;Merge pull request #419 from spotify/erikbern/worker-multiprocessing
Refactored luigi.worker a bit to use multiprocessing
==
==================
83187636;Arash Rouhani;2014-09-03 23:20:21 +0200;Merge pull request #407 from Houzz/simplify_atomic_mkdir
Uses mkdir function in HdfsAtomicWritePipe init
==
==================
7409f56d;Erik Bernhardsson;2014-08-28 20:31:59 -0400;Refactored luigi.worker a bit to use multiprocessing
...instead of os.fork and os.wait

This commit features the following stuff
- multiprocessing instead of os.fork
- Added a bunch of unit tests to run with multiple workers
- Fixed MockFile to support multiple processes
- Multiple processes are now supported even with a local scheduler

Other things I had to fix that was marginally related:
- Added --no-lock to a bunch of tests
- Fixed an issue in lock_test.py that triggered an error on my machine

I have no idea if/how this will work on non-Unix platforms (eg. Windows). On thing that should work (in theory) is to replace multiprocessing.Process with threading.Thread. I doubt that the previous code was working since it was relying directly on os.fork.

==

luigi/mock.py
luigi/worker.py
test/cmdline_test.py
test/hadoop_test.py
test/lock_test.py
test/worker_test.py
test/wrap_test.py
==================
ebd6d3bd;Jack Dwyer;2014-09-02 15:56:46 -0400;renamed notify to send_email, removed globals()

==

luigi/notifications.py
==================
399be9a8;Arash Rouhani;2014-09-02 21:37:47 +0200;Merge pull request #422 from spotify/arash/remove-deprecated-stuff
Remove deprecated code from hive.py
==
==================
7c2eddd8;Jack Dwyer;2014-09-02 14:54:55 -0400;seperated notify commands for ses and email

==

luigi/notifications.py
==================
2e4c15b7;Erik Bernhardsson;2014-09-02 08:41:39 -0400;Merge pull request #421 from spotify/erikbern/pidfile-777
set permissions of pidfiles to 777
==
==================
91aa14d4;Arash Rouhani;2014-09-02 14:02:25 +0200;Remove deprecated code from hive.py

==

luigi/hive.py
==================
d09e33ab;Erik Bernhardsson;2014-09-01 12:50:17 -0400;Merge pull request #411 from campanja/http-post-in-rpc
Switch to using POST for RPC requests.
==
==================
2e9d0cdc;Erik Bernhardsson;2014-09-01 11:16:48 -0400;set permissions of pidfiles to 777
This commit also features some super minor refactoring of luigi.lock

==

luigi/lock.py
test/lock_test.py
==================
5d0c64d7;Konstantin Tcepliaev;2014-08-29 13:41:45 +0200;Remove GET request size workaround.

==

luigi/server.py
==================
007fe57f;Konstantin Tcepliaev;2014-08-29 13:41:14 +0200;Fallback to GET if scheduler doesn't support POST.

==

luigi/rpc.py
==================
f70597b6;Konstantin Tcepliaev;2014-08-28 10:28:22 +0200;Switch to using POST for RPC requests.

==

luigi/rpc.py
luigi/server.py
==================
07eb5f02;Erik Bernhardsson;2014-08-29 12:06:54 -0400;Merge pull request #413 from spotify/erikbern/max-header-size-fallback
Fallback since older versions of Tornado can't handle max_hader_size
==
==================
40a64264;Elias Freider;2014-08-29 16:49:04 +0200;Merge pull request #417 from freider/ordereddict
Adding ordereddict dependency to debian/control
==
==================
e7528c68;Elias Freider;2014-08-29 16:34:52 +0200;Adding ordereddict dependency to debian/control

==

debian/control
==================
0a55ffe2;Jack Dwyer;2014-08-28 22:00:30 -0400;use amazon ses for emailing

==

luigi/notifications.py
==================
4983e7c2;Erik Bernhardsson;2014-08-28 13:52:43 -0400;Merge pull request #414 from spotify/revert-399-graceful-shutdown
Revert "Gracefully close worker on term."
==
==================
dd808322;Erik Bernhardsson;2014-08-28 13:49:16 -0400;Revert "Gracefully close worker on term."

==

luigi/interface.py
luigi/worker.py
==================
25817a7c;Erik Bernhardsson;2014-08-28 12:27:18 -0400;Merge pull request #408 from Houzz/fix_unknown_task_bug
Fixes a bug in graph creation for unknown dependencies
==
==================
64f53ed0;Erik Bernhardsson;2014-08-28 12:25:19 -0400;Merge pull request #406 from Houzz/mr_priority
Allows specification of priority for hadoop jobs
==
==================
46d54b2c;Erik Bernhardsson;2014-08-28 12:25:11 -0400;Merge pull request #401 from tommyengstrom/S3Target-format-fix
Make S3Target respect format
==
==================
603ea492;Erik Bernhardsson;2014-08-28 12:25:00 -0400;Merge pull request #399 from danielhfrank/graceful-shutdown
Gracefully close worker on term.
==
==================
c821ff0d;Erik Bernhardsson;2014-08-28 10:34:52 -0400;Fallback since older versions of Tornado can't handle max_hader_size

==

luigi/server.py
==================
dd1a2a9b;Erik Bernhardsson;2014-08-28 08:47:03 -0400;Merge pull request #409 from campanja/fix-large-rpc-requests
Fix scheduling tasks with many deps/params.
==
==================
258f9dc4;Konstantin Tcepliaev;2014-08-27 17:01:39 +0200;Fix scheduling tasks with many deps/params.

==

luigi/server.py
==================
58b0c451;Erik Bernhardsson;2014-08-26 10:32:56 -0400;Bumped version to 1.0.17 and uploaded to PyPI

==

setup.py
==================
2d141556;Erik Bernhardsson;2014-08-25 15:53:52 -0400;Merge pull request #402 from upworthy/trigger-processing-time-event
Add an event that tells how long run() took.
==
==================
7c5d71e3;Dave Buchfuhrer;2014-08-22 11:10:11 -0700;Fixes a bug in graph creation for unknown dependencies

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
be5a4dbe;Dave Buchfuhrer;2014-08-18 11:49:19 -0700;Uses mkdir function in HdfsAtomicWritePipe init

==

luigi/hdfs.py
==================
901446f0;Dave Buchfuhrer;2014-08-18 11:46:16 -0700;Allows specification of priority for hadoop jobs

==

luigi/hadoop.py
==================
873b2a42;Arash Rouhani;2014-08-18 10:55:28 +0200;Merge pull request #404 from Tarrasch/fix-snakebite-mkdir-race
Fix race condition in SnakebiteHdfsClient.mkdir()
==
==================
de267002;Erik Bernhardsson;2014-08-15 12:48:40 -0400;Security fix

==

luigi/server.py
==================
fefc7008;Arash Rouhani;2014-08-14 15:32:35 +0200;Merge pull request #405 from Tarrasch/cleanup-hadoopcli-mkdir
Cleanup hadoopcli mkdir
==
==================
3f758819;Arash Rouhani;2014-08-14 11:01:35 +0200;Use NotImplementedError in HdfsClient.mkdir()
It's more proper to raise NotImplementedError rather than raising an
AssertionError

==

luigi/hdfs.py
==================
7dbd249c;Arash Rouhani;2014-08-14 10:51:06 +0200;Allow HdfsClient.mkdir(parents=False, raise=False)
It was just laziness from my part that I did not do this in previous
patches.

==

luigi/hdfs.py
==================
bc2705ec;Arash Rouhani;2014-08-14 09:16:50 +0200;Fix race condition in SnakebiteHdfsClient.mkdir()
Rewritten in EAFP style:
https://docs.python.org/2/glossary.html#term-eafp

==

luigi/hdfs.py
==================
122a76d9;Pavel Repin;2014-08-13 11:09:20 -0700;Make the test pass under py2.6 version of unittest.

==

test/test_event_callbacks.py
==================
c65da20b;Pavel Repin;2014-08-12 17:12:44 -0700;Add an event that tells how long run() took.
Quintessential example:

@luigi.Task.event_handler(luigi.Event.PROCESSING_TIME)
def be_mindful_of_time(task, x):
	my.metrics.send_value(type(task).__name__, x)

==

luigi/worker.py
test/test_event_callbacks.py
==================
cf61799a;Arash Rouhani;2014-08-13 15:43:00 +0200;Merge pull request #403 from Tarrasch/hdfs-client-configuration
Overhaul the hdfs client configuration
==
==================
bfc1d5ed;Arash Rouhani;2014-08-07 15:58:30 +0200;Overhaul the hdfs client configuration
So the old syntax was something very hackish and very special-case oriented.

    [hdfs]
    use_snakebite: true

Now it becomes:

    [hdfs]
    client: snakebite

This patch also adds the configuration:

    [hdfs]
    client: snakebite_with_hadoopcli_fallback

This patch maintains backwards compatibility with old configuration.

This patch depend on spotify/luigi#395, so that must be merged before
this one.

==

luigi/hdfs.py
==================
155cc42a;Arash Rouhani;2014-08-13 15:03:05 +0200;Merge pull request #395 from Tarrasch/chained-hdfs-client
Chainable hdfs-clients
==
==================
98cbdf17;Arash Rouhani;2014-08-07 15:29:29 +0200;Create CascadingClient for fallbacking clients
The intended use case is that a company (like Spotify) is going to
switch over from a slow HdfsClient to a much faster SnakebiteHdfsClient.
To avoid surprises if say the SnakebiteHdfsClient can't handle some
corner case, then a given fallback will be used.

Example instantiation:

    client = CascadingClient([SnakebiteHdfsClient(), HdfsClient()])

==

luigi/contrib/target.py
test/contrib/target_test.py
==================
ce2d4a3f;Arash Rouhani;2014-08-12 17:29:17 +0200;Merge pull request #393 from Tarrasch/movedir-atomic
Make `move_dir()` atomic again
==
==================
eca5c2dc;Tommy Engström;2014-08-05 14:27:39 +0200;Make S3Target respect format

==

luigi/s3.py
==================
4b8a0f51;Erik Bernhardsson;2014-08-11 20:48:51 -0400;Merge pull request #400 from Houzz/eq_op
Adds equality operator to Task
==
==================
bb14503e;Dave Buchfuhrer;2014-08-11 14:14:19 -0700;Equality operator for Task

==

luigi/task.py
==================
3f0d80f9;Arash Rouhani;2014-08-11 14:13:35 +0200;Sync mkdir raise_if_exists=False up to Snakebite
This will *slightly* break backwards compatibility. But the behavior was
really undefined before so.

==

luigi/hdfs.py
==================
db1a6a67;Arash Rouhani;2014-08-11 14:10:53 +0200;Push down parent and raise_if_exists flags to abc
From real life experience of how hdfs.mkdir() behavior changed due to
lack of explicitness, we think it's good for all FileSystem
implementations to encourage explicitness in their implementations of
mkdir().

Discussion in spotify/luigi#393

==

luigi/target.py
==================
c6f144d1;Arash Rouhani;2014-08-06 16:21:41 +0200;Add raise_if_exists flag to hdfs_client.mkdir()
It is *way* to complicated to actually implement it. So I just went with
assertions to make sure that the programmers who want can explicitly
state their intent.  See spotify/luigi#393 for a discussion about this.

Oh, and I also started to use it at one place to get the ball rolling.

==

luigi/hdfs.py
==================
63d23ec2;Arash Rouhani;2014-08-11 11:39:24 +0200;Merge pull request #394 from spotify/arash/clean-hdfs-test
Fix imports in _hdfs_test
==
==================
3e870131;Arash Rouhani;2014-08-11 11:38:58 +0200;Merge pull request #397 from Tarrasch/raise-if-exists
Rename fail_if_exists to raise_if_exists
==
==================
b025630b;Erik Bernhardsson;2014-08-08 16:01:56 -0400;Merge pull request #398 from danielhfrank/rpc-connect-timeout
Add default / configurable rpc connect timeout
==
==================
c33dec90;Dan Frank;2014-08-08 14:23:41 -0400;Gracefully close worker on term.
This change (attempts to) add a signal handler to the worker allowing it
to gracefully shutdown on a TERM signal. This means that it will finish
the tasks that it has accepted but not request any more work.

==

luigi/interface.py
luigi/worker.py
==================
da07f350;Dan Frank;2014-08-08 13:14:18 -0400;Add default / configurable rpc connect timeout
Without this timeout, it was possible for rpc connections
(for example, reporting that a task was done) to hang forever

==

luigi/rpc.py
==================
ee2b7cd7;Arash Rouhani;2014-08-08 11:01:47 +0200;Rename fail_if_exists to raise_if_exists
I'm not sold myself that adding the decorator is the cleanest way. Some
static analyzers will go wild, but you have to live with that when
using such dynamic programming languages.

==

luigi/file.py
luigi/hadoop.py
luigi/hdfs.py
luigi/mock.py
luigi/util.py
==================
ddc01e08;Arash Rouhani;2014-08-07 14:35:35 +0200;Fix imports in _hdfs_test
There is no such thing as unittes2 right? I mean the code always threw ...
==

test/_hdfs_test.py
==================
5051f8ce;Arash Rouhani;2014-08-04 15:37:54 +0200;Make HdfsTarget.move_dir() atomic again
As was said in the comments of that function, it relied on mkdir failing
if the directory already exists. This was not explicit in the code
unfortunately and the underlying behavior of mkdir() changed since
move_dir() was written.

==

luigi/hdfs.py
==================
6eb4a3df;Arash Rouhani;2014-08-04 15:08:28 +0200;Optional parameter 'parents' to HdfsClient.mkdir()
This patch should not change behavior, since the optional parameters
default is to what was used previously.

The name parents was used since it is what is used by the snakebite
client.

==

luigi/hdfs.py
==================
ba150a00;Erik Bernhardsson;2014-08-01 10:16:17 -0400;Merge pull request #392 from erikbern/worker-cleanup
Simplified some worker logic
==
==================
25a69983;Erik Bernhardsson;2014-07-30 19:27:50 -0400;Simplified some worker logic
1. Don't do string magic on the scheduler to break down a task into a task family and parameters
   Instead, send it as an argument when scheduling the task
   This is useful because it's a step towards remote execution
2. Cleanup of worker code
   There was three different code paths leading up to add_task(...) - cleaned up so that there's only one

==

luigi/interface.py
luigi/parameter.py
luigi/rpc.py
luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/central_planner_test.py
==================
39fb86cc;Erik Bernhardsson;2014-07-30 15:59:14 -0400;Merge pull request #389 from spotify/erikbern/entrypoint
Added a "luigi" command with some documentation
==
==================
229ea784;Erik Bernhardsson;2014-07-30 15:58:39 -0400;Merge pull request #381 from erikbern/erikbern/parameter-cleanup
Various parameter cleanup
==
==================
f1a09a35;Erik Bernhardsson;2014-07-29 13:01:15 -0400;Merge pull request #388 from Houzz/reschedule_unfulfilled
Reschedules unfulfilled dependencies
==
==================
9522b7bf;Erik Bernhardsson;2014-07-20 18:33:01 -0400;Some cleanup/changes to how parameters are read from config
- Missing parameters in config now raise a MissingParameterException instead of UnknownConfigException since there might be multiple places a parameter could be initialized from.
- Introduced "global" parameters separately from "default" parameters
- Added a bunch of deprecation warnings for old parameters
- Soft fail for _get_value_from_config and loops to pull value
- Use config_path for the defaults for the global configs
- Also don't enforce that only one of default and default_from_config is defined. In many cases it's useful to define both

==

luigi/interface.py
luigi/parameter.py
luigi/task.py
test/cmdline_test.py
test/parameter_test.py
==================
5d673be2;Erik Bernhardsson;2014-07-28 23:59:57 -0400;Merge pull request #384 from rtshadow/fix_metastore_partition_check
Metastore client properly checks existence of complex partitions
==
==================
2b1e4ff8;Erik Bernhardsson;2014-07-28 22:09:52 -0400;Added a "luigi" command with some documentation

==

bin/luigi
doc/command_line.rst
setup.py
test/cmdline_test.py
==================
200ad438;Dave Buchfuhrer;2014-07-25 11:35:21 -0700;Reschedules unfulfilled dependencies

==

luigi/worker.py
test/worker_task_test.py
test/worker_test.py
==================
958bb16b;Przemek;2014-07-25 23:45:22 +0200;create server instance only once in ServerTest to avoid situation when server is unable to start after being shutdown just a second ago

==

test/server_test.py
==================
d2cb93f3;Przemek;2014-07-25 23:32:20 +0200;add timeout to ServerTest to avoid hanged test

==

test/server_test.py
==================
03942a3a;Przemek;2014-07-25 22:52:35 +0200;add verbose flag for nosetests to help identify hanging test

==

.travis.yml
==================
253ec9ee;Przemek;2014-07-25 19:38:43 +0200;set appropriate imports of ordereddict for both python versions

==

test/hive_test.py
==================
8050b536;Przemek;2014-07-25 19:30:30 +0200;apply comment for stable partition string

==

luigi/hive.py
test/hive_test.py
==================
45f01123;Erik Bernhardsson;2014-07-25 12:56:15 -0400;Merge pull request #385 from Houzz/only_schedule_once
Prevents scheduling complete tasks multiple times
==
==================
2f6b7e5e;Erik Bernhardsson;2014-07-25 12:55:57 -0400;Merge pull request #387 from yonromai/master
add init_* handling to LocalJobRunner
==
==================
476bf7c2;Przemek;2014-07-25 18:01:29 +0200;add ordereddict to dependencies

==

.travis.yml
==================
ffb6160c;Romain Yon;2014-07-25 11:28:25 +0200;remove useless implementation checks

==

luigi/hadoop.py
==================
c4dd12b0;Romain Yon;2014-07-24 14:52:08 +0200;add init_* handling to LocalJobRunner

==

luigi/hadoop.py
==================
3b6677d5;Erik Bernhardsson;2014-07-23 18:14:18 -0400;Merge pull request #386 from Houzz/better_unfulfilled_message
Makes unfulfilled dependency error message more helpful
==
==================
17c9e452;Dave Buchfuhrer;2014-07-23 11:58:52 -0700;Makes unfulfilled dependency error message more helpful

==

luigi/worker.py
==================
ef8e07be;Dave Buchfuhrer;2014-07-22 14:56:14 -0700;Prevents scheduling complete tasks multiple times

==

luigi/worker.py
==================
2dc9fe56;Przemek;2014-07-22 23:20:58 +0200;Metastore client properly checks existence of complex partitions

==

luigi/hive.py
test/hive_test.py
==================
07f497fa;Erik Bernhardsson;2014-07-22 06:36:20 -0400;Merge pull request #383 from oldpa/master
Fixed issue with grouping keys when running locally
==
==================
dbdafbf1;William James;2014-07-22 11:26:11 +0200;Fixed issue with grouping keys when running locally
When running a job on the hadoop cluster unicode strings and str strings
are grouped to different reducers since we wrap repr() around the key.
This patch simulates that behaviour when running locally.

==

luigi/hadoop.py
test/hadoop_test.py
==================
8b949f1c;Erik Bernhardsson;2014-07-21 10:02:13 -0400;Merge pull request #371 from miku/test_cmdline_logger
Fix test failure if client.cfg defines a logging_conf_file.
==
==================
1c9156f4;Erik Bernhardsson;2014-07-18 11:44:15 +0200;Merge pull request #379 from rtshadow/worker_returns_action_status
Worker returns action status
==
==================
405933dd;Przemek;2014-07-12 15:12:31 +0200;More unit tests, interface.run returns success value

==

luigi/interface.py
test/interface_test.py
test/worker_test.py
==================
5b5c870c;Erik Bernhardsson;2014-07-11 18:53:29 -0400;Merge pull request #365 from rantav/find-upstream-deps
Create a script to find upstream dependencies
==
==================
2b685c5a;Ran Tavory;2014-07-11 23:15:37 +0300;Add a script to find all deps on the paths b/w task T and task S. This is a practical way of finding all upstream tasks of task S

==

bin/deps.py
==================
2c9e79ce;Erik Bernhardsson;2014-07-11 11:00:54 -0400;Merge pull request #378 from spotify/erikbern/dynamic-module-loading
Provide dynamic loading of modules
==
==================
735ab57f;Przemek;2014-07-11 00:30:58 +0200;Worker returns boolean value for add and run commands, depending on their outcome

==

luigi/worker.py
test/worker_multiprocess_test.py
test/worker_test.py
==================
e869d1d7;Erik Bernhardsson;2014-07-10 12:53:21 -0400;Provide dynamic loading of modules
This adds a new interface to Luigi that takes a module parameter on the command line

Eg. you can run
python something.py --module my_luigi_job FooTask --x 1 --y 2

Inspired by discussion in #365

==

luigi/interface.py
test/dynamic_import_test.py
test/foo_module.py
==================
2a5e1861;Erik Bernhardsson;2014-07-09 10:43:41 -0400;Merge pull request #377 from rtshadow/broken_task_event
Add event for broken task
==
==================
2cf8b9cc;rtshadow;2014-07-09 15:37:58 +0200;Add event for broken task

==

luigi/worker.py
==================
3bb303e1;Elias Freider;2014-07-08 16:10:57 +0200;Merge pull request #374 from Tarrasch/remove-lock-warning
Remove --lock warning when it's not passed
==
==================
c5bafaaf;Elias Freider;2014-07-08 10:12:56 +0200;Merge pull request #355 from spotify/freider/load_no_crash_rebased
Don't crash if loading a corrupt pickle state file
==
==================
e40f6b26;Elias Freider;2014-06-13 15:25:23 +0200;Don't crash if loading a corrupt pickle state file
Previously the luigi server would crash on startup if the pickle file that stores its state is corrupt for some reason

==

luigi/scheduler.py
test/scheduler_test.py
==================
0d478c69;Erik Bernhardsson;2014-07-07 22:16:57 -0400;Merge pull request #376 from erikbern/erikbern/fix-335
Fixed issue introduced in #335
==
==================
4e7af9dc;Erik Bernhardsson;2014-07-07 22:15:36 -0400;Fixed issue introduced in #335
Forgot to add the RPC method, so workers would always fail invoking add_worker.

This was a pure cosmetic change that didn't lead to any deeper issues

==

luigi/rpc.py
==================
2c640778;Erik Bernhardsson;2014-07-07 16:27:38 -0400;Merge pull request #375 from bearstech/host_and_port
Choosing port and interface.
==
==================
60ea09f5;Mathieu Lecarme;2014-07-07 18:25:05 +0200;Choosing port and interface.

==

bin/luigid
luigi/process.py
==================
8fd0ac9f;Arash Rouhani;2014-07-07 15:05:08 +0200;Remove --lock warning when it's not passed
Previously you would *always* get the deprecation warning. Regardless if
it was passed.

Note however that it still can have an effect to pass the flag.
Unfortunately, the hash of the lock-file is based on even the
non-semantical flags like --lock (I want to kill myself).

==

luigi/interface.py
==================
82885350;Erik Bernhardsson;2014-07-04 12:04:56 -0400;Merge pull request #373 from anyman/master
Adding debug message when using the HDFS existence check
==
==================
63c648f1;Anders Nyman;2014-07-04 15:02:28 +0200;Adding debug message when using the HDFS existence check

==

luigi/hdfs.py
==================
315e08eb;Erik Bernhardsson;2014-07-02 11:36:20 -0400;Merge pull request #363 from jurnix/master
Add support for FTP
==
==================
688aeb06;Erik Bernhardsson;2014-07-02 07:35:44 -0400;Merge pull request #368 from aldanor/master
Can now add config paths before configparser is created (fixes #367)
==
==================
4d47596a;Erik Bernhardsson;2014-07-02 07:34:57 -0400;Merge pull request #335 from spotify/erikbern/more-worker-info
More info for each worker
==
==================
26028956;Martin Czygan;2014-07-01 23:17:38 +0200;Fix test failure if client.cfg defines a logging_conf_file.
When /etc/luigi/client.cfg had a logging_conf_file entry, like

    logging_conf_file = /etc/luigi/logging.ini

test_cmdline_logger would fail with something like

    AssertionError: [call(None)] != [call('/etc/luigi/logging.ini')]

==

test/cmdline_test.py
==================
21fed537;Ivan Smirnov;2014-07-01 19:46:52 +0100;Can now add config paths before configparser is created (fixes #367)

==

luigi/configuration.py
==================
a7134622;jurnix;2014-06-26 17:55:41 +0200;Add support for FTP

==

examples/ftp_experiment_outputs.py
luigi/contrib/ftp.py
test/_test_ftp.py
test/requirements.txt
==================
6039b26d;Erik Bernhardsson;2014-06-29 23:06:48 -0400;Merge pull request #349 from Houzz/lock_size
Adds a --lock-size parameter to control number of simultaneous commands
==
==================
77e027b5;Erik Bernhardsson;2014-05-24 16:06:11 -0400;More info for each worker

==

luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
==================
5d25c49c;Erik Bernhardsson;2014-06-29 01:51:01 -0400;Merge pull request #364 from miku/miku/esindex
Added support for elasticsearch 1.0 or newer.
==
==================
97fb824b;Erik Bernhardsson;2014-06-29 01:50:03 -0400;Merge pull request #340 from soxofaan/feature-start-event
Add triggering “event.core.start” when starting a task
==
==================
2d7601fa;Erik Bernhardsson;2014-06-29 01:49:46 -0400;Merge pull request #361 from Houzz/vis_non_blocking
Render each task family independantly
==
==================
f08e4092;Martin Czygan;2014-06-27 13:24:49 +0200;Added support for elasticsearch 1.0 or newer.
Provides an `ElasticsearchTarget` and a `CopyToIndex` template task.

Modeled after `luigi.contrib.rdbms.CopyToTable`.

A minimal example (assuming elasticsearch is running on localhost:9200):

    class ExampleIndex(CopyToIndex):
        index = 'example'

        def docs(self):
            return [{'_id': 1, 'title': 'An example document.'}]

    if __name__ == '__main__':
        task = ExampleIndex()
        luigi.build([task], local_scheduler=True)

Tests can be run against a local elasticsearch index.

==

examples/elasticsearch_index.py
luigi/contrib/esindex.py
test/_esindex_test.py
==================
0d478c3b;Erik Bernhardsson;2014-06-26 09:46:27 -0400;Merge pull request #356 from Sergeant007/issue_347
#347. Fixed tmppath with schemas
==
==================
535e2432;Erik Bernhardsson;2014-06-26 00:27:36 -0400;Merge pull request #362 from jvns/patch-1
Display how long a task has been running instead of its start time
==
==================
6dafc9df;Julia Evans;2014-06-25 12:07:45 -0700;Display how long the task has been running

==

luigi/static/visualiser/js/visualiserApp.js
==================
bfdb7c3d;Kyle Sun;2014-06-19 20:57:21 -0700;make task family rendering not depending on each other
and expand running tasks by default

==

luigi/static/visualiser/js/visualiserApp.js
==================
a97f1575;Stefaan Lippens;2014-05-30 14:40:52 +0200;Issue #340: Add triggering “event.core.start” when starting a task
- add event.core.start
- minor documentation fix
- add test and fine-tune other event tests a bit

==

doc/api_overview.rst
luigi/worker.py
test/test_event_callbacks.py
==================
56fd325f;Erik Bernhardsson;2014-06-16 18:59:22 -0400;Merge pull request #359 from SamRozen/samuelr/hadoop
Case insensitive job tracking
==
==================
79646062;Samuel Rozenberg;2014-06-16 16:36:30 -0400;Case insensitive job tracking
Required for new cascasding version

==

luigi/hadoop.py
==================
2242546c;Erik Bernhardsson;2014-06-16 16:27:59 -0400;Merge pull request #344 from rantav/fix-historydb-repending
Fix marking a task as PENDING while it is still running 
==
==================
e8ffa730;Ran Tavory;2014-06-02 13:38:55 +0300;Fix marking a task as PENDING while it is still running - in the history DB Update the task in the historydb only if there was a change in status, prevent multiple updates of the same status Refine the check for writing into the history db. If the status is PENDING - write no matter what the value of task.status is - since it's the default value

==

luigi/scheduler.py
==================
e8788e13;Erik Bernhardsson;2014-06-16 09:32:44 -0400;Merge pull request #358 from spotify/lallea/lock_dir_777
Create lock pid directory with global write permissions.
==
==================
4e71b25b;Lars Albertsson;2014-06-16 15:01:09 +0200;Create lock pid directory with global write permissions.

==

luigi/lock.py
==================
583d6d00;Sergey Tryuber;2014-06-15 14:14:25 +0400;#347. Fixed tmppath with schemas

==

luigi/hdfs.py
test/_hdfs_test.py
==================
8b66a715;Erik Bernhardsson;2014-06-14 19:17:23 -0400;Merge pull request #351 from rantav/email-prefix
Add support for email subject prefix
==
==================
0b9610ab;Erik Bernhardsson;2014-06-13 16:21:20 -0400;Merge pull request #353 from Houzz/time_running
Show the timestamp when tasks are picked up by workers
==
==================
fcf6ee0b;Erik Bernhardsson;2014-06-13 13:35:31 -0400;Merge pull request #354 from Houzz/task_search
Add task_search api to search for task by task_id
==
==================
96c8c5de;Kyle Sun;2014-06-05 13:28:31 -0700;add task_search api to search for task by task_id

==

luigi/rpc.py
luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
8f628637;Kyle Sun;2014-06-12 15:59:47 -0700;record the time when the task picked up by worker

==

luigi/scheduler.py
luigi/static/visualiser/js/visualiserApp.js
==================
0ec10788;Erik Bernhardsson;2014-06-12 21:06:37 -0400;Merge pull request #352 from fuziontech/master
Support COPY from JSON format on Redshift
==
==================
8a6bb90d;James Greenhill;2014-06-12 17:18:49 -0700;Support COPY from JSON format in redshift

==

luigi/contrib/redshift.py
==================
f8f51fea;Erik Bernhardsson;2014-06-12 08:01:45 -0400;Fixed issue where the server was upgraded and the clients not

==

luigi/rpc.py
==================
e3c4b4fd;Ran Tavory;2014-06-12 11:00:18 +0300;Add support for email subject prefix

==

luigi/notifications.py
test/email_test.py
==================
4b7e2319;Dave Buchfuhrer;2014-06-11 13:58:55 -0700;Fixes comment pluralization

==

luigi/lock.py
==================
03df57e9;Dave Buchfuhrer;2014-06-11 13:19:08 -0700;Adds tests for multiple lock acquisitions

==

test/lock_test.py
==================
862b8c06;Dave Buchfuhrer;2014-06-11 11:50:35 -0700;Allows multiple commands to share the same lock

==

luigi/interface.py
luigi/lock.py
==================
cd6e89f3;Erik Bernhardsson;2014-06-11 08:25:55 -0400;Merge pull request #338 from soxofaan/feature-task-priority
Add “priority” property to task, to take into account in scheduler.get_work
==
==================
c143f95a;Stefaan Lippens;2014-05-30 00:00:28 +0200;Issue #338: Add “priority” property to task, to take into account in scheduler.get_work
- implement handling of priority property in Task and CentralPlannerScheduler
- add documentation about task priorities
- add tests for handling priorities in CentralPlannerScheduler

==

doc/api_overview.rst
luigi/rpc.py
luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/central_planner_test.py
==================
052c025a;Erik Bernhardsson;2014-06-10 18:18:16 -0400;Merge pull request #348 from Houzz/stack_safe_map
Uses less stack-intensive map in renderTasks
==
==================
b3751592;Dave Buchfuhrer;2014-06-10 12:50:37 -0700;Uses less stack-intensive map in renderTasks

==

luigi/static/visualiser/js/visualiserApp.js
==================
ff41e07a;Erik Bernhardsson;2014-06-05 19:19:20 -0400;Merge pull request #346 from Houzz/uncheck_upstream
Unchecks the upstream dependencies checkbox by default
==
==================
2e52574e;Dave Buchfuhrer;2014-06-05 14:59:54 -0700;Unchecks the upstream dependencies checkbox by default

==

luigi/static/visualiser/index.html
==================
62a29a09;Erik Bernhardsson;2014-06-02 14:30:35 -0400;Merge pull request #343 from edwardnewett/master
Move initial reading of configuration out of global scope
==
==================
bdcf7053;Edward Newett;2014-06-02 13:33:18 -0400;Move reading of configuration out of EnvironmentParamsContainer global scope
Reading the configuration at EPC instantiation (env_params) allows additional
configuration files to override default-scheduler-host.

Also added reading of default-scheduler-port from configuration for consistency.

Change-Id: Idf68ed7b21d3ae65dd233587eaf284df2fa6fcf7

==

luigi/interface.py
==================
aa58e847;Erik Bernhardsson;2014-06-02 09:07:01 -0400;Merge pull request #342 from erikbern/fix-341
Fixed issue #341 and added unit test
==
==================
ea847665;Erik Bernhardsson;2014-06-02 08:28:56 -0400;Fixed issue #341 and added unit test

==

luigi/scheduler.py
test/scheduler_test.py
==================
21735765;Erik Bernhardsson;2014-05-30 08:42:24 -0400;Merge pull request #339 from soxofaan/master
Fixed installation instructions for unit test requirements
==
==================
9140c87e;Stefaan Lippens;2014-05-30 14:05:19 +0200;Fixed installation instructions for unit test requirements

==

doc/contributing.rst
==================
77749f1e;Erik Bernhardsson;2014-05-29 22:01:42 -0400;Merge pull request #334 from miku/miku/updep-checkbox-label
use label for upstream dependency checkbox
==
==================
8befe17b;Erik Bernhardsson;2014-05-29 21:57:52 -0400;Merge pull request #337 from pswaminathan/patch-1
Update example_top_artists.rst
==
==================
a91d2645;Erik Bernhardsson;2014-05-29 21:57:33 -0400;Merge pull request #336 from mikepii/flatten-strings-2
Flatten strings (squash merged)
==
==================
5c05c1a2;Prasanna Swaminathan;2014-05-29 12:26:58 -0400;Update example_top_artists.rst
Fix spelling of "exercise".
==

doc/example_top_artists.rst
==================
f0973417;Mike Placentra;2014-05-29 11:40:06 -0400;squash merge flatten-strings branch

==

luigi/task.py
test/task_test.py
==================
b5700bd5;Erik Bernhardsson;2014-05-24 16:04:38 -0400;Hotfixed an error caused by c75085b3c812c8054ef76d39676ab473e45b9600

==

luigi/worker.py
==================
5158fc44;Erik Bernhardsson;2014-05-24 15:44:44 -0400;Merge pull request #323 from spotify/ulzha/worker_ref
include worker id and host in log output
==
==================
5a05a1ba;Erik Bernhardsson;2014-05-23 09:41:07 -0400;Merge pull request #317 from erikbern/task-register-fixes
Fixed an issue introduced in 6330e9d0332e6152996292a39c42f752b9288c96
==
==================
34a79d88;Martin Czygan;2014-05-22 16:22:43 +0200;use label for upstream dependency checkbox

==

luigi/static/visualiser/index.html
==================
59eb9461;Erik Bernhardsson;2014-05-21 16:52:24 +0200;Merge pull request #326 from actsasgeek/fix-hive-module
Fixed bugs in hive.py
==
==================
e6f01618;Erik Bernhardsson;2014-05-21 16:52:16 +0200;Merge pull request #324 from bstempi/feature/S3EmrTarget
Feature/s3 emr target
==
==================
6dc531b2;Elias Freider;2014-05-21 13:55:49 +0200;Merge pull request #316 from spotify/freider/lock_by_default
Use process locking by default when running on command line
==
==================
a50b6c17;Erik Bernhardsson;2014-05-17 18:35:36 +0200;bumped version to 1.0.16

==

setup.py
==================
7ebd459f;Erik Bernhardsson;2014-05-16 09:38:27 +0200;Merge pull request #330 from danielhfrank/history_template_fixes
Fixes to history page templates
==
==================
91c9e62d;Dan Frank;2014-05-15 23:21:00 -0700;Fixes to history page templates
* Get templates from dir relative to install
* Include templates in package data from setup.py

==

luigi/server.py
setup.py
==================
bf849f08;Erik Bernhardsson;2014-05-14 16:18:58 +0200;Bumped version number after fixing the broken manifest

==

setup.py
==================
2d16840e;Erik Bernhardsson;2014-05-14 16:17:35 +0200;Merge pull request #329 from mlaldrid/manifest_readme_fix
update MANIFEST.in for new README.rst
==
==================
04c8a58a;Matt Aldridge;2014-05-14 10:02:39 -0400;update MANIFEST.in for new README.rst

==

MANIFEST.in
==================
5a8346dc;Erik Bernhardsson;2014-05-14 13:57:39 +0200;PyPI now using RST docs + uploaded new 1.0.14 version

==

README.rst
setup.py
==================
b28df058;Erik Bernhardsson;2014-05-14 08:25:09 +0200;Merge pull request #327 from a1k0n/dcachecheck
Check for missing files in distributed cache setup
==
==================
1e0ade2f;Andy Sloane;2014-05-13 15:00:28 +0000;Check for missing files in distributed cache setup

==

luigi/hadoop.py
==================
443c53b1;Steve Butcher;2014-05-12 15:29:12 -0400;Fixed bugs in hive.py

==

luigi/hive.py
==================
2e8276fa;bstempi;2014-05-09 13:45:30 -0400;Adding a target and external task for EMR output stored on S3

==

luigi/s3.py
==================
7043cae3;bstempi;2014-05-08 12:31:11 -0400;Adding my local Vagrant bits to gitignore

==

.gitignore
==================
c75085b3;Uldis Barbans;2014-05-08 16:18:49 +0200;include worker id and host in log output
Makes log output more usable for troubleshooting when somewhere a worker process is hung. The "is currently run by worker-RANDOM_NUMBER" error message will now include the host, and logs on that host will let associate it with the pid.

==

luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
==================
7ae59768;Erik Bernhardsson;2014-05-07 08:49:48 -0400;Merge pull request #322 from rantav/mysql-improvements
Add ON DUPLICATE KEY UPDATE clause to the MySQL target touch method. 
==
==================
595dd2bd;Ran Tavory;2014-05-07 14:12:19 +0300;Add ON DUPLICATE KEY UPDATE clause to the MySQL target touch method. This will prevent errors and do a no-op in case the update marker already exists

==

luigi/contrib/mysqldb.py
==================
dc48d3a9;Erik Bernhardsson;2014-05-06 13:25:33 -0400;Merge pull request #320 from daleroberts/daleroberts/allow_worker_subclassing
Minor refactoring of Worker to allow easier subclassing
==
==================
31740169;Erik Bernhardsson;2014-05-06 13:24:57 -0400;Merge pull request #321 from JonNelson/no_disable_existing_loggers
- don't disable existing loggers when logging.config.fileConfig is called by luigi
==
==================
60df98f5;Jon Nelson;2013-12-07 18:21:50 -0600;- don't disable existing loggers when logging.config.fileConfig is   called by luigi

==

luigi/interface.py
==================
d66d9606;Elias Freider;2014-05-05 15:37:27 -0400;Makes getpcmd and thereby process locking MacOSX-compatible

==

luigi/lock.py
test/lock_test.py
==================
52844a5c;Elias Freider;2014-05-05 15:36:02 -0400;Renames flag to --no-lock and adds warning when --lock is used

==

luigi/interface.py
==================
8352947c;Erik Bernhardsson;2014-05-04 19:27:17 -0400;Merge pull request #319 from rantav/history_db_mysql_fixes
MySQL fixes to the history db
==
==================
8baebbb0;Dale Roberts;2014-05-02 09:31:27 +1000;Minor refactoring of Worker to allow easier subclassing

==

luigi/worker.py
==================
ff4f6b01;Ran Tavory;2014-05-01 23:52:11 +0300;Add String column types in the history db a length - as required by mysql dialect

==

luigi/db_task_history.py
==================
ff7294e8;Erik Bernhardsson;2014-04-23 23:43:06 +0000;Fixed an issue introduced in 6330e9d0332e6152996292a39c42f752b9288c96
- Previous commit introduced a bug that would cause tasks not to be exposed if they changed name after creation
- Added a new unit test for this case
- Ended up removing a lot of the code introduced in the previous commit and replaced it with a much simpler mechanism
- Removed some unit tests for unregister() since I decided that method wasn't a good idea to have

==

luigi/task.py
luigi/util.py
test/cmdline_test.py
test/decorator_test.py
test/set_task_name_test.py
==================
780b6862;Elias Freider;2014-04-23 17:35:12 +0200;Make nolock default when using luigi.build

==

luigi/interface.py
==================
315d5536;Elias Freider;2014-04-23 17:23:15 +0200;Make --lock default to True. Add --nolock to provide lockless functionality when needed

==

luigi/interface.py
==================
1bd1cd9d;Uldis Barbans;2014-04-16 16:08:57 +0200;Merge pull request #313 from spotify/ulzha/bugfixes
fix build problems/bugs:
==
==================
0dad234f;Uldis Barbans;2014-04-16 15:09:37 +0200;conditionally skip redshift_test.py for lack of s3 stuff

==

luigi/mock.py
test/_s3_test.py
test/redshift_test.py
==================
867667dd;Uldis Barbans;2014-04-16 13:39:05 +0200;fix File.copy failure across filesystems
os.rename doesn't work across different filesystems.

==

luigi/file.py
==================
4d01ae36;Erik Bernhardsson;2014-04-15 11:50:28 -0400;Merge pull request #306 from spotify/ulzha/dependency-events
add dependency events
==
==================
8b13063c;Erik Bernhardsson;2014-04-13 23:14:02 -0400;Merge pull request #312 from mortardata/cngan_add_redshift_manifest_task
added a task to create a manifest file for redshift copy tasks
==
==================
439f1b48;Chris Ngan;2014-04-11 11:27:07 -0400;added a task to create a manifest file for redshift copy tasks

==

luigi/contrib/redshift.py
test/redshift_test.py
==================
25002c3a;Erik Bernhardsson;2014-04-10 11:50:18 -0400;Merge pull request #310 from erikbern/doc-deeplinks
Added deep links to the example workflow and API overview
==
==================
27164ee8;Erik Bernhardsson;2014-04-10 10:28:54 -0400;Added deep links to the example workflow and API overview
These were a little tricky to find with the new documentation

==

README.rst
==================
8027a190;Erik Bernhardsson;2014-04-10 10:19:14 -0400;Merge pull request #301 from jcrobak/readme-md-rst-sphinx
Convert README.md to ReST and divide into several pages for sphinx
==
==================
6330e9d0;Erik Bernhardsson;2014-04-08 23:45:35 -0400;Merge pull request #305 from erikbern/task-register
fixes to the task register to support multiple tasks with the same name
==
==================
5a675598;Erik Bernhardsson;2014-04-01 09:17:15 -0400;fixes to the task register to support multiple tasks with the same name
This is needed in some cases where you have task wrappers and you wanted the wrapped task to be exposed over cmd line

==

luigi/task.py
luigi/util.py
test/cmdline_test.py
test/decorator_test.py
==================
c84d55d1;Erik Bernhardsson;2014-04-07 08:52:52 -0400;Merge pull request #308 from erikbern/ssh-timeout-fix
Fixed issue where unit tests would get stuck on an ssh timeout
==
==================
0400cb2d;Erik Bernhardsson;2014-04-07 08:52:37 -0400;Merge pull request #309 from erikbern/worker-timeout-fix
Fixed an hanging unit tests
==
==================
32aefdc1;Erik Bernhardsson;2014-04-07 00:15:37 -0400;Merge pull request #236 from adregner/fix-rename-list
fix renaming a list of HDFS files to a single dest
==
==================
f84011ca;Erik Bernhardsson;2014-04-07 00:08:00 -0400;Fixed an hanging unit tests
(At least one my computer)
urlib2.urlopen probably has weird defaults on my OS.
Maybe rpc.RemoteScheduler should read connect_timeout from config?

==

luigi/rpc.py
test/worker_test.py
==================
3c3b43d2;Erik Bernhardsson;2014-04-06 23:39:02 -0400;Fixed issue where unit tests would get stuck on an ssh timeout

==

luigi/contrib/ssh.py
test/test_ssh.py
==================
105ce651;Erik Bernhardsson;2014-04-06 11:57:56 -0400;Merge pull request #307 from jooon/master
Change automatic packaging to not use __package__
==
==================
1fd1e33c;Jon Åslund;2014-04-04 16:36:03 +0200;Change automatic packaging to not use __package__
* Fixes #285
* Don't rely on __package__. It does not exist for modules without
  imports or modules that has absolute_import
  http://legacy.python.org/dev/peps/pep-0366/
* Added unit tests to clearly describe what gets added. Still not
  intuitive to understand what gets added. We could make sure to add
  everything in a package "just to be safe", but then you might
  accidently add the entire universe of a namespaced package.

==

luigi/hadoop.py
test/create_packages_archive_root/module.py
test/create_packages_archive_root/package/__init__.py
test/create_packages_archive_root/package/submodule.py
test/create_packages_archive_root/package/submodule_with_absolute_import.py
test/create_packages_archive_root/package/submodule_without_imports.py
test/create_packages_archive_root/package/subpackage/__init__.py
test/create_packages_archive_root/package/subpackage/submodule.py
test/hadoop_test.py
==================
99c66074;Uldis Barbans;2014-04-04 12:31:24 +0200;add dependency events
This should enable nicely decoupled monitoring/management solutions, able to trace dependencies.

==

luigi/worker.py
test/test_event_callbacks.py
==================
106936f7;Joe Crobak;2014-03-24 01:23:36 +0000;Include content from README in index.rst
remove the old temporary api file.

==

doc/api.rst
doc/index.rst
==================
fc3ca0d9;Joe Crobak;2014-03-24 01:22:20 +0000;Convert README.md to README.rst
Break the content out into a number of smaller files. This makes
it easier to adopt to sphinx docs.

==

README.md
README.rst
doc/api_overview.rst
doc/central_scheduler.rst
doc/command_line.rst
doc/configuration.rst
doc/contributing.rst
doc/example_top_artists.rst
doc/execution_model.rst
doc/luigi_patterns.rst
doc/more_info.rst
doc/programmatic_execution.rst
==================
1c89c00d;Erik Bernhardsson;2014-03-27 11:49:41 -0400;Merge pull request #298 from erikbern/file-move
Another bug with relative paths and move()
==
==================
06aa0e54;Elias Freider;2014-03-27 16:18:48 +0100;Merge pull request #300 from spotify/alander/warn-on-wildcards
Warn when wildcards is used in paths
==
==================
8ba93d44;Jakob Alander;2014-03-27 09:57:07 +0100;Warn when wildcards is used in paths

==

luigi/target.py
==================
16070a9a;Erik Bernhardsson;2014-03-26 21:18:58 -0400;Another bug with relative paths and move()
Added a test and also made some existing tests a bit harder

==

luigi/file.py
test/file_test.py
==================
c5b3738e;Elias Freider;2014-03-26 11:32:13 +0100;Merge pull request #297 from jcrobak/sphinx-improvements
sphinx documentation improvements
==
==================
a0bafbea;Joe Crobak;2014-03-26 01:49:36 +0000;Add sphinx-apidoc generated autosummary docs
Document stubs provide documentation for the entire project.

==

doc/README.md
doc/api/luigi.contrib.rst
doc/api/luigi.rst
doc/conf.py
doc/index.rst
==================
3639f5d3;Joe Crobak;2014-03-20 01:46:47 +0000;Properly wordwrap the sphinx README.md

==

doc/README.md
==================
a2b7ccc4;Joe Crobak;2014-03-20 01:43:55 +0000;Switch to sphinx RTD theme.
Conditionally add the sphinx RTD theme if we're not on RTD.

==

doc/conf.py
==================
4df17b2c;Joe Crobak;2014-03-20 01:36:55 +0000;Fix RST syntax in docstrings.

==

luigi/hdfs.py
luigi/util.py
==================
c0602471;Andrew Regner;2014-03-22 11:26:40 -0400;warn that multiple renames is not atomic

==

luigi/hdfs.py
==================
359072ec;Joe Crobak;2014-03-20 01:36:05 +0000;Add package-level docstrings for sphinx docs

==

luigi/__init__.py
luigi/contrib/__init__.py
==================
513ed394;Erik Bernhardsson;2014-03-19 18:36:26 -0400;Merge pull request #295 from p5k6/return_stdout_stderr
have the track process return (stdout, stderr) tuple
==
==================
cedc012d;Josh Stanfield;2014-03-17 14:56:12 -0400;have the track process return (stdout, stderr), bubble this up to the hive module as well

==

luigi/hadoop.py
luigi/hive.py
==================
b2b98baa;Erik Bernhardsson;2014-03-19 10:38:41 -0400;Merge pull request #284 from kawaa/autoconfig-snakebite
Support for AutoConfigClient from snakebite.client
==
==================
d54fc7cb;Erik Bernhardsson;2014-03-19 10:35:32 -0400;Merge pull request #288 from JoeEnnever/upstream
Adds upstream dependencies option to visualizer
==
==================
01514d45;Elias Freider;2014-03-19 11:39:23 +0100;Merge pull request #276 from rantav/redshift
Add support for redshift.
==
==================
1865fdf6;Erik Bernhardsson;2014-03-15 17:56:59 -0400;Merge pull request #293 from JonNelson/fix_date_hour_param
- fix serialization of DataHourParameter when the value is None
==
==================
41c046c4;Jon Nelson;2014-03-14 21:42:33 -0500;- fix serialization of DataHourParameter when the value is None

==

luigi/parameter.py
==================
720562a0;ulzha;2014-03-13 22:05:02 +0100;Merge pull request #287 from spotify/uldis/ancestors
fix HdfsClient.mkdir to create ancestors
==
==================
22034f01;Uldis Barbans;2014-03-13 15:03:00 +0000;leave HdfsClientCdh3.mkdir behavior intact

==

luigi/hdfs.py
==================
116e6074;Elias Freider;2014-03-12 11:52:00 +0100;Merge pull request #283 from rantav/mysql
Add basic testing for the mysql target
==
==================
9d9c2b3d;Erik Bernhardsson;2014-03-11 19:48:16 -0400;Merge pull request #291 from a1k0n/master
Move n_reduce_tasks hadoop config logic into JobTask
==
==================
60205916;Erik Bernhardsson;2014-03-11 17:19:27 -0400;Merge pull request #292 from jmeagher/partition-exists-fix
Fix the partition exists check so it matches the table exists code above...
==
==================
cc016d7c;John Meagher;2014-03-11 16:47:26 -0400;Fix the partition exists check so it matches the table exists code above.  Without this the check will always fail if the partition doesn't exist yet due to the underlying command returning a non-zero result

==

luigi/hive.py
==================
9e75826c;Andy Sloane;2014-03-11 15:56:41 +0000;Move n_reduce_tasks hadoop config logic into JobTask
This fixes a (somewhat severe) bug where non-streaming jobs (i.e., jobs
in jars) would have their hadoop config set to 0 reduce tasks.

==

luigi/hadoop.py
==================
f7babe46;Joe Ennever;2014-03-05 21:45:01 +0000;Add test, fixes from test
Inverse dependency wasn't being added if we'd already seen it

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
4244a5dd;Joe Ennever;2014-03-04 18:18:58 +0000;Adds upstream dependencies option to visualizer
Uses new api call /api/inverse_dep_graph/<task_id>, which returns
the same data types as  /api/dep_graph, except the "deps" field
is inverted.

E.g. If A requires B, the data returned is
{
  "B()": {
     deps: ["A()"]
  }
}

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
08e14c50;Uldis Barbans;2014-03-04 11:33:04 +0000;fix HdfsClient.mkdir to create ancestors

==

luigi/hdfs.py
test/_hdfs_test.py
==================
193e3ce1;Ran Tavory;2014-03-03 14:11:47 +0200;Use postgres as the Target for both Redshift and Postgres (only add an attribute use_db_timestamps). And rename postgreslike to rdbms

==

luigi/contrib/postgreslike.py
luigi/contrib/rdbms.py
luigi/contrib/redshift.py
luigi/postgres.py
==================
984c395e;Ran Tavory;2014-02-23 22:33:26 +0200;Remove the doc that describes the setup. Setup is automated now

==

test/_mysqldb_test.py
==================
bb3255cb;Ran Tavory;2014-02-23 12:54:42 +0200;Add basic testing for the mysql target

==

test/_mysqldb_test.py
==================
72cfda89;Adam Kawa;2014-02-22 02:52:34 +0000;Support for AutoConfigClient from snakebite.client

==

luigi/hdfs.py
test/_snakebite_test.py
==================
ac3f4525;Erik Bernhardsson;2014-02-21 17:53:39 -0500;Merge pull request #278 from rantav/mysql
Add support for a MySQL target.
==
==================
e32fa132;Erik Bernhardsson;2014-02-20 21:11:04 -0500;Merge pull request #282 from MarkRoddy/master
Point to Configuration File via Environment Variable
==
==================
e6c932c6;Mark Roddy;2014-02-20 16:22:17 -0500;add another configuration path if a specific configuration file is set

==

luigi/configuration.py
==================
acc8b067;Erik Bernhardsson;2014-02-19 16:04:23 -0500;Merge pull request #281 from p5k6/hiverc_config
add config value for default hiverc file
==
==================
9d5a91f9;Erik Bernhardsson;2014-02-19 16:02:14 -0500;Merge pull request #280 from onlynone/master
Fix luigid when called with --background and without --logdir
==
==================
f309161e;p5k6;2014-02-19 11:49:58 -0700;add config value for default hiverc file

==

luigi/hive.py
==================
83add4c6;Steven Willis;2014-02-19 14:16:23 -0500;Fix luigid when called with --background and without --logdir

==

luigi/process.py
==================
5b804e55;Erik Bernhardsson;2014-02-18 10:14:13 -0500;Merge pull request #274 from edwardnewett/master
Support for Apache Spark
==
==================
00e73bed;Erik Bernhardsson;2014-02-14 06:14:48 -0500;Merge pull request #279 from jcrobak/target-docs
Update docstrings for luigi.Target
==
==================
1b0ad939;Joe Crobak;2014-02-14 02:06:41 +0000;Update docstrings for luigi.Target
Also add it to the api reference.

==

doc/api.rst
luigi/target.py
==================
98aacdc0;Ran Tavory;2014-02-13 19:21:03 +0200;Add support for a MySQL target.
In this commit there's just the Target time. There's no CopyTask similar to the postgres implementation b/c it's still not needed. Not a big deal adding it later though, they are conceptually the same.
With the current code you could define at output() method which returns a MySqlTarget and on this output you can touch() to mark the task as completed. Luigi will play along and invoke the exists() method to check whether the task is completed or not - like any other target type

==

luigi/contrib/mysqldb.py
==================
8704821f;Edward Newett;2014-02-11 14:15:31 -0500;Fix type
Change-Id: I8dfbdf0ab2b6f0a07a13ae169eba8d14553a4920

==

test/spark_test.py
==================
0c9fbf6a;Edward Newett;2014-02-11 14:15:23 -0500;Add Spark example code
Change-Id: Iea8110bbe0a7bb77c89c733579290c45e386b982

==

examples/spark_als.py
==================
9249d68b;Ran Tavory;2014-02-11 15:49:50 +0200;Add support for redshift.
Create a common class for redshift and postgres (since they are similar).
In the future postres should more to contrib as well.
Create both a Redshift target and an S3CopyTask

==

luigi/contrib/postgreslike.py
luigi/contrib/redshift.py
luigi/postgres.py
==================
f1a03389;Erik Bernhardsson;2014-02-11 12:29:13 -0500;Merge pull request #277 from cannonpr/master
Update hdfs.py
==
==================
0b95b6e0;Edward Newett;2014-02-11 11:46:06 -0500;Move spark support to contrib
Change-Id: Idf9267c3467bf8c704ab94bc76066762c94dc35f

==

luigi/contrib/spark.py
test/spark_test.py
==================
c7805f80;Erik Bernhardsson;2014-02-11 04:51:51 -0500;Merge pull request #272 from jcrobak/sphinx
Sphinx docs
==
==================
ee014a50;Edward Newett;2014-02-10 18:15:20 -0500;Support for Apache Spark
This patch adds basic support for launching a
Spark application on YARN in standalone mode.

- support for env specific config through client.cfg
- simple status tracking / error handling
- kills the yarn app on ctrl+c

Change-Id: Ia1b488eef74c2bade31c9c3fc38b8e508d6cee64

==

luigi/spark.py
test/spark_test.py
==================
ecd4f7d5;Joe Crobak;2014-02-08 16:06:39 +0000;Add sphinx documentation for the api.

==

doc/api.rst
doc/conf.py
doc/index.rst
==================
f523a003;Joe Crobak;2014-02-08 16:06:00 +0000;Update documentation for luigi.parameter.

==

luigi/parameter.py
==================
d12023f7;Joe Crobak;2014-02-08 14:33:29 +0000;Update documentation for luigi.task.

==

luigi/task.py
==================
3a4589e6;Erik Bernhardsson;2014-02-09 08:03:43 -0500;Merge pull request #273 from rantav/top-artists-fix
Fix the top_artists example
==
==================
4816ee7e;Ran Tavory;2014-02-09 12:54:40 +0200;Fix the top_artists example

==

examples/top_artists.py
==================
cac83ea2;Erik Bernhardsson;2014-02-08 14:46:27 -0500;Merge pull request #271 from jcrobak/dont-email-none
Don't try to mail errors when missing config.
==
==================
5df0a2da;Joe Crobak;2014-02-08 14:31:25 +0000;Barebones sphinx setup.
The index page isn't very exciting, yet.

==

doc/.gitignore
doc/Makefile
doc/README.md
doc/conf.py
doc/index.rst
doc/settings.py
==================
08e5af24;Joe Crobak;2014-02-07 20:05:41 +0000;Don't try to mail errors when missing config.

==

luigi/notifications.py
test/parameter_test.py
test/worker_test.py
==================
78bf663b;Erik Bernhardsson;2014-02-05 14:09:43 -0500;Merge pull request #269 from jeffknupp/master
Add missing information about the first example in README.md; clean up example code
==
==================
11eb06b3;Jeff Knupp;2014-02-05 13:31:32 -0500;Clean up example: use context manager when opening files (already done elsewhere in the file), use  rather than %s, remove trailing spaces on a number of lines, break lines at under 80 characters

==

examples/top_artists.py
==================
b2508115;Petros Rizos;2014-02-05 18:19:30 +0000;Update hdfs.py
Minimum viable change to allow setting an override to HDFS tmp dir in luigi.
==

luigi/hdfs.py
==================
62a30cdf;Jeff Knupp;2014-02-05 13:11:19 -0500;Add missing information about the first example in README.md

==

README.md
==================
c5f93a8a;Erik Bernhardsson;2014-02-03 00:45:23 -0500;bumped version to 1.0.13 and uploaded to pypi

==

setup.py
==================
2e5f6835;Erik Bernhardsson;2014-01-31 06:31:17 -0800;Merge pull request #264 from daleroberts/master
Fix incorrect hadoop stat msg match
==
==================
ae9dd104;Dale Roberts;2014-01-24 13:25:43 +1100;Fix incorrect hadoop msg match when stat'ing file

==

luigi/hdfs.py
==================
2be8935e;Erik Bernhardsson;2014-01-27 09:59:06 -0800;Merge pull request #262 from onlynone/master
Document how insignificant parameters work
==
==================
4d141b31;Steven Willis;2014-01-21 11:39:56 -0500;Document how insignificant parameters work
 * Document how two Tasks with the same params are identical
 * Document how significant=False changes the signature

==

README.md
luigi/parameter.py
==================
71d8ac18;Erik Bernhardsson;2014-01-20 04:10:40 -0800;Merge pull request #261 from miku/fix/empty-options
luigid: allow empty state-path and logdir for development
==
==================
58b83f42;Martin Czygan;2014-01-20 09:05:24 +0100;luigid: allow empty state-path and logdir for development

==

bin/luigid
==================
c90b656f;Erik Bernhardsson;2014-01-18 14:41:40 -0800;Merge pull request #260 from campanja/improve_s3
Add copy, rename and list methods to S3Client.
==
==================
f4e651b8;Konstantin Tcepliaev;2014-01-17 16:06:02 +0100;Added copy, rename and list methods to S3Client.

==

luigi/s3.py
==================
a33756c7;Erik Bernhardsson;2014-01-15 17:20:59 -0800;Merge pull request #259 from rocha/list-from-config
Add support for is_list to default_from_config.
==
==================
5fafacfe;Carlos Andrés Rocha;2014-01-15 17:30:17 -0500;Add support for is_list to default_from_config.
Parse multiple values from the config file if is_list is True for a
parameter. For example:

[foo]
bar = one
      two
      three

==

luigi/parameter.py
test/parameter_test.py
==================
640a56f3;Erik Bernhardsson;2014-01-15 08:42:50 -0800;Merge pull request #257 from onlynone/master
Allow setting of server logdir and state path
==
==================
4defeb74;Erik Bernhardsson;2014-01-15 08:42:13 -0800;Merge pull request #258 from mikepii/mapreduce_py_version
Make MapReduce python executable configurable
==
==================
d54a15a2;Steven Willis;2014-01-15 10:44:33 -0500;Allow setting of server logdir and state path

==

README.md
bin/luigid
luigi/configuration.py
luigi/process.py
==================
cc1be636;Mike Placentra;2014-01-15 10:28:38 -0500;Make MapReduce python executable configurable

==

luigi/hadoop.py
==================
59d95d46;Elias Freider;2014-01-13 03:11:22 -0800;Merge pull request #252 from sisidra/master
Fix partial HdfsTarget read - close stream and send SIGPIPE
==
==================
a12d5a09;Martins Kalvans;2013-12-20 14:06:04 +0100;Fix partial HdfsTarget read - close stream & send SIGPIPE

==

luigi/format.py
test/test_sigpipe.py
==================
b582a178;Erik Bernhardsson;2014-01-09 07:30:50 -0800;Merge pull request #254 from erikbern/execution-model-docs
Docs about execution model
==
==================
cb39f36e;Erik Bernhardsson;2014-01-09 07:57:30 -0500;Docs about execution model

==

README.md
==================
1974e3e5;Erik Bernhardsson;2013-12-22 11:21:59 -0800;Merge pull request #233 from baconz/python-daemon-docs
Python daemon docs
==
==================
49905b53;Lorrin Nelson;2013-12-10 19:01:45 -0800;Add steps for running unit tests to README.md.

==

README.md
test/requirements.txt
==================
4c0ad46a;Erik Bernhardsson;2013-12-19 11:07:34 -0800;Merge pull request #251 from Multifarious/time_delta_parameter
Add TimeDeltaParameter for supplying datetime.timedelta values
==
==================
d089d244;Ezra Epstein;2013-11-12 16:37:12 -0800;add TimeDeltaParameter; accepts ISO 8601 durations and n (week|day|hour|second)[s]

==

luigi/__init__.py
luigi/parameter.py
test/parameter_test.py
==================
18514c5e;Erik Bernhardsson;2013-12-19 05:35:20 -0800;Merge pull request #245 from JonNelson/use_tempfile_mktemp
Use tempfile mktemp instead of hard-coding (or relying on the user to configure something in a config file)
==
==================
471c7f47;Erik Bernhardsson;2013-12-19 05:34:45 -0800;Merge pull request #242 from daveFNbuck/master
Capture sigterm to kill hadoop jobs when worker is terminated
==
==================
76dfb513;Erik Bernhardsson;2013-12-18 12:09:51 -0800;Merge pull request #243 from JonNelson/improve_popen_usage
use best practices when using subprocess.Popen.  Also fix a bug in hdfs.listdir.
==
==================
5b5bd089;Erik Bernhardsson;2013-12-11 15:39:10 -0800;Merge pull request #250 from adregner/hdfs-lsr-apache1
fix hdfs recursive listing with apache1 syntax
==
==================
ae78b68f;Andrew Regner;2013-12-11 14:28:28 -0500;fix hdfs recursive listing with apache1 syntax

==

luigi/hdfs.py
==================
1b1d0b47;Dave Buchfuhrer;2013-12-10 14:21:45 -0800;Generalizes exit code for captured signals

==

luigi/hadoop.py
==================
23bcb61e;Jon Nelson;2013-10-28 21:32:05 -0500;deprecate core.tmp-dir and use tempfile.mktemp instead

==

luigi/hadoop.py
==================
21c5f7d6;Jon Nelson;2013-12-07 18:03:16 -0600;- whenever using subprocess.Popen, use close_fds=True - make sure to catch errors in hdfs listdir   (and make some minor improvements there) - add one FIXME question

==

luigi/format.py
luigi/hadoop.py
luigi/hdfs.py
test/hadoop_test.py
==================
c740fd9a;Elias Freider;2013-12-09 07:32:46 -0800;Merge pull request #241 from spotify/freider/hooks
Support for events and callbacks
==
==================
a1cfc5dc;Erik Bernhardsson;2013-12-08 08:54:24 -0800;Merge pull request #217 from mbruggmann/mbruggmann/sparkey
Sparkey log file export task.
==
==================
d0bf15d5;Marc Bruggmann;2013-11-03 14:42:11 +0100;Sparkey log file export task.
Change-Id: I79f8a8f84dc942a6e636b1921db85ab3856bfba9

==

luigi/contrib/sparkey.py
==================
fe7c6f14;Erik Bernhardsson;2013-12-08 00:35:43 -0800;Merge pull request #237 from a1k0n/master
Make write_history not crash on non-streaming jobs
==
==================
dffbed23;Erik Bernhardsson;2013-12-08 00:01:29 -0800;Merge pull request #248 from erikbern/functools-cleanup
Fixed typo + started using functools.wraps decorator
==
==================
c3d1bc85;Erik Bernhardsson;2013-12-07 22:18:44 -0500;Fixed typo + started using functools.wraps decorator
Ironically, I had to wrap functools.wraps, so essentially we end up with a decorator that wraps a wrapped wrapper decorator

==

luigi/util.py
test/decorator_test.py
==================
2f38ebf1;Erik Bernhardsson;2013-12-07 19:00:19 -0800;Merge pull request #247 from JonNelson/fix_spelling_error
- fix spelling error, add FIXME regarding functools.update_wrapper
==
==================
f6141b17;Erik Bernhardsson;2013-12-07 18:58:54 -0800;Merge pull request #244 from JonNelson/fix_setup
Flesh out the MANIFEST.in file and add the 'license' field to setup.py
==
==================
bf92e09e;Jon Nelson;2013-12-07 19:00:08 -0600;- fix spelling error, add FIXME regarding functools.update_wrapper

==

luigi/util.py
==================
81c96ac3;Jon Nelson;2013-12-07 18:01:37 -0600;- include tests, examples, luigi/templates/*.html, and LICENSE - add license field to setup.py

==

MANIFEST.in
setup.py
==================
5f179e23;Dave Buchfuhrer;2013-12-06 12:50:44 -0800;Capture sigterm to kill hadoop jobs when worker is terminated

==

luigi/hadoop.py
==================
0595759e;Elias Freider;2013-12-06 13:35:24 +0100;Moving _event_callbacks away from module global scope. Fix typo

==

luigi/task.py
luigi/worker.py
==================
e495f81e;Elias Freider;2013-12-05 09:35:51 +0100;Changing event constants into strings

==

luigi/worker.py
==================
b565d3b6;Elias Freider;2013-12-05 09:31:27 +0100;Fix incorrect event documentation in readme

==

README.md
==================
6ac1a721;Elias Freider;2013-12-02 21:02:38 +0100;Support for events and callbacks

==

README.md
luigi/__init__.py
luigi/task.py
luigi/worker.py
test/test_event_callbacks.py
==================
cf92ec17;Erik Bernhardsson;2013-12-01 16:24:44 -0800;Merge pull request #240 from rantav/postgres-port-take2
Allow specifying a postgres port.
==
==================
53a17f1e;Ran Tavory;2013-12-01 14:26:21 +0200;Allow specifying a postgres port. By calling PostgresTarget('host:port') string. So you can call with just a 'host' or with a 'host:port'. The default port remains 5432 as determind by the module psycopg2

==

luigi/postgres.py
==================
302c5272;Erik Bernhardsson;2013-11-28 09:09:29 -0800;Merge pull request #238 from spotify/example_fix
Adjust Top10Artists to output expected tab-separated data
==
==================
9a457565;Elias Freider;2013-11-28 11:42:45 +0100;Adjust Top10Artists to output expected tab-separated data

==

examples/top_artists.py
==================
4c8ef5cf;Andy Sloane;2013-11-26 21:41:13 +0000;Make write_history not crash on non-streaming jobs

==

luigi/hadoop.py
==================
97da1393;Erik Bernhardsson;2013-11-26 07:33:16 -0800;Merge pull request #231 from erikbern/delegates-fix
Fixed a bug in @delegates and fixed the unit tests to catch it
==
==================
a11f57b7;Erik Bernhardsson;2013-11-25 20:19:44 -0800;Merge pull request #221 from ddaniels888/commandline_logging_conf
Add a command line argument to pass in the logging configuration file
==
==================
e7bc25a3;Erik Bernhardsson;2013-11-25 23:17:30 -0500;1.0.12

==

setup.py
==================
0ec3f358;Erik Bernhardsson;2013-11-20 19:55:04 -0500;Fixed a bug in @delegates and fixed the unit tests to catch it

==

luigi/util.py
test/decorator_test.py
==================
3cf7bf9d;Andrew Regner;2013-11-25 14:07:28 -0500;fix renaming a list of HDFS files to a single dest

==

luigi/hdfs.py
==================
ec89a665;Seth Madison;2013-11-23 09:27:43 -0500;Adding requirements for daemonizing luigid to README

==

README.md
==================
06c92c7d;Erik Bernhardsson;2013-11-18 12:42:23 -0800;Merge pull request #230 from Multifarious/doc-multiple-outputs
Clarify README.md wording for Tasks with multiple output Targets.
==
==================
757e6ef6;Lorrin Nelson;2013-11-18 12:01:22 -0800;Clarify README.md wording for Tasks with multiple output Targets.
Based on luigi-user post https://groups.google.com/d/msg/luigi-user/YOCf9fJcqUE/Po2q0z0TV9AJ

==

README.md
==================
29701dee;Erik Bernhardsson;2013-11-18 07:50:36 -0800;Merge pull request #229 from rantav/cleanups
Some very small cleanups: Remove unused imports, break long lines...
==
==================
e616d1fb;Ran Tavory;2013-11-18 11:16:56 +0200;Some very small cleanups: Remove unused imports, break long lines, add newline at end of file. Smallish things..

==

examples/ssh_remote_execution.py
examples/wordcount.py
examples/wordcount_hadoop.py
==================
dc08c118;Erik Bernhardsson;2013-11-15 10:53:59 -0800;Merge pull request #225 from jimjh/worker-wait
Let worker wait for tasks running on other workers to complete.
==
==================
287aebb1;David Whiting;2013-11-15 02:15:34 -0800;Merge pull request #224 from spotify/uldis/history
luigi-history configuration option for writing stuff to Hadoop job outpu...
==
==================
8f75e2f6;Jim Lim;2013-11-14 10:49:11 -0800;Let worker wait for running tasks to complete.
If

- running tasks is non-empty, then another worker is running my tasks
- n_pending_tasks is non-zero, then I have something to do after she is done

And I shall wait for `wait_interval` seconds (with random jitter).

This adds the following configuration options:

- worker-keep-alive [boolean]
- worker-wait-interval [int]

==

luigi/worker.py
test/worker_test.py
==================
67f11a7d;Uldis Barbans;2013-11-14 18:45:16 +0100;luigi-history configuration option for writing stuff to Hadoop job output directory
Specifically for tracking the job ID in a configuration where no history is stored in the output directory by Hadoop.

==

README.md
luigi/hadoop.py
==================
71e2f1fa;Jim Lim;2013-11-14 09:38:16 -0800;Refactor worker#run to prepare fix for #222
Break up worker#run into smaller methods and give each a meaningful
name so it's easier to figure out what it's doing and allow code reuse.

Collapse duplicate if constructs.

==

luigi/worker.py
==================
c2a92fb0;Erik Bernhardsson;2013-11-13 14:00:32 -0800;Merge pull request #220 from alanbbr/master
Add snakebite support to improve HDFS operation performance
==
==================
67777bb0;Doug Daniels;2013-11-07 17:57:03 -0500;Add a command line argument to pass in the logging configuration file

==

luigi/interface.py
==================
7276deec;Erik Bernhardsson;2013-11-07 06:22:24 -0800;Merge pull request #218 from erikbern/decorator-fixup
Refactored luigi.util and deprecated Copy, Derived etc
==
==================
be88a318;Erik Bernhardsson;2013-11-04 18:17:42 -0500;Replacing inheritance with decorators Replacing inheritance with decorators in luigi.util
- Added docstring to @inherits (thanks, alexbw) and deprecated the Derived class
- Added a @requires decorator
- Added some helper method for tasks using @inherits
- Added a @copies decorator and deprecated the Copy class
- Added a @delegates decorator and deprecated the CompositionTask class

==

luigi/task.py
luigi/util.py
test/copy_test.py
test/decorator_test.py
==================
979479b7;Alan Brenner;2013-11-05 09:21:42 -0500;Add snakebite support to improve HDFS operation performance

==

luigi/hdfs.py
test/_hdfs_test.py
==================
08453d89;Elias Freider;2013-11-05 04:57:51 -0800;Merge pull request #219 from jakobalander/master
Disabling gzip compressions since it breaks the browser
==
==================
f47a064f;Jakob Alander;2013-11-05 10:18:49 +0100;Disabling gzip compressions since it breaks the browser
Change-Id: Ia2c1a7964ab6df674ece5a67994c79508aa396b4
Reviewed-on: https://gerrit.spotify.net/gerrit/87762
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Lars Albertsson <lalle@spotify.com>

==

luigi/server.py
==================
cffc24f2;Erik Bernhardsson;2013-10-29 13:23:36 -0700;Merge pull request #157 from gf-atebbe/logging
Issue #137
==
==================
9c8b6586;Erik Bernhardsson;2013-10-29 13:22:49 -0700;Merge pull request #187 from mortardata/cmiller_s3_open_r
Updated S3Target to allow open('r') for an S3 path.
==
==================
35cac24a;Adam Tebbe;2013-08-02 12:41:33 -0400;Issue #137: Adding command line parameters to global config so that logging is configurable

==

luigi/interface.py
test/cmdline_test.py
==================
a41684c8;David Whiting;2013-10-21 09:16:20 -0700;Merge pull request #209 from jimjh/allow-boto-config
Enable support for boto config in S3Client
==
==================
89243973;Erik Bernhardsson;2013-10-21 09:00:07 -0700;Merge pull request #207 from dattalab/inherit_decorator
WIP: An inheritance decorator
==
==================
51ec3c48;Alex Wiltschko;2013-10-17 21:07:30 -0400;An inheritance decorator
Method and practice for instantiating classes that are inherited from

More tests, and ability to nullify parameters

Added better naming to common_params, and an assertion and test to boot

Python 2.6 compatible unit tests

==

luigi/util.py
test/decorator_test.py
==================
d6426ff6;David Whiting;2013-10-21 01:30:51 -0700;Merge pull request #205 from JonNelson/logging
Don't use string interpolating when logging, let the logging framework do that.
==
==================
37be360a;David Whiting;2013-10-21 01:30:18 -0700;Merge pull request #204 from JonNelson/master
Subprocess exceptions in format that are ultimately caused by format consumer/production should not mask original exception
==
==================
93e87635;Jiunn Haur Lim;2013-10-20 18:29:18 -0700;enable support for boto config in S3Client

==

luigi/s3.py
test/_s3_test.py
==================
972fe5ba;Erik Bernhardsson;2013-10-20 19:40:01 -0700;Merge pull request #210 from grubino/master
example assumed that hdfs will write flat files.
==
==================
a004ec12;Greg Rubino;2013-10-20 22:16:17 -0400;example assumed that hdfs will write flat files.

==

examples/top_artists.py
==================
0cdb56b8;Jon Nelson;2013-10-09 16:03:45 -0500;- fix all cases of    logging.foo(format_string % args) - fix logging calls from logger.foo(format_string % args) into   logger.foo(format_string, *args) - and make a small optimization to error line accrual in   run_and_track_hadoop_job.py

==

luigi/configuration.py
luigi/db_task_history.py
luigi/hadoop.py
luigi/hive.py
luigi/notifications.py
luigi/postgres.py
luigi/rpc.py
luigi/s3.py
luigi/scheduler.py
luigi/worker.py
test/customized_run_test.py
test/worker_test.py
==================
ba9e3c0f;Jon Nelson;2013-10-07 19:43:15 -0500;- don't turn exceptions that occur that might ultimately cause a pipe   error into *just* a pipe error.

==

luigi/format.py
==================
73b006d6;David Whiting;2013-10-15 08:30:45 -0700;Merge pull request #196 from davidxia/master
Added missing import to interface.py
==
==================
e50a27d3;David Whiting;2013-10-15 08:29:03 -0700;Merge pull request #195 from miku/issue-188
make luigid state file path configurable
==
==================
085b8da2;David Whiting;2013-10-15 08:24:45 -0700;Merge pull request #191 from sisidra/master
Add compression (scp -C) for RemoteTarget get/put
==
==================
1837267f;David Whiting;2013-10-15 08:19:33 -0700;Merge pull request #186 from erikbern/validate-dep-error
fixed bug in depdency validation
==
==================
c806657f;David Whiting;2013-10-15 08:18:44 -0700;Merge pull request #200 from edwardnewett/master
Issue #199 - move reducer initializing to base class
==
==================
ddd8f89c;Edward Newett;2013-10-10 11:01:51 -0400;Issue #199 - move reducer initializing to base class
Change-Id: I54bc142b4f17789a7bc4c06e50b4a87b12149091

==

luigi/hadoop.py
==================
0e5632ab;David Xia;2013-10-09 12:01:28 -0400;Added missing import to interface.py

==

luigi/interface.py
==================
49b8be64;Doug Daniels;2013-10-08 19:13:42 -0400;Add iteration of s3 files

==

luigi/s3.py
test/_s3_test.py
==================
4a9fba8f;Martin Czygan;2013-10-08 16:58:08 +0200;make luigid state file path configurable
Use `state-path` option of the [scheduler] section to adjust
the state path file location.

Addresses [#188](https://github.com/spotify/luigi/issues/188).

==

luigi/scheduler.py
luigi/server.py
==================
1d2ca82e;David Whiting;2013-10-07 10:41:46 -0700;Merge pull request #185 from jcdavis/master
Improve handling of bad task name parameter
==
==================
fcd2f511;Martins Kalvans;2013-10-07 08:35:22 +0200;Add compression (scp -C) for RemoteTarget get/put

==

luigi/contrib/ssh.py
==================
b4b0ed1f;redcat9;2013-09-30 17:29:45 -0400;Add ability to read from s3.

==

luigi/s3.py
test/_s3_test.py
==================
4e5b7af5;David Whiting;2013-09-30 13:37:20 -0400;Renamed s3_test.py to _s3_test.py to follow the convention for naming integration tests which cannot be run by Travis.

==

test/_s3_test.py
==================
e91e7865;David Whiting;2013-09-30 10:33:53 -0700;Merge pull request #178 from mortardata/s3
Add S3 client and target
==
==================
2513a70e;Erik Bernhardsson;2013-09-30 12:22:36 -0400;fixed bug in dependency validation
error messages should be a lot more helpful now

==

luigi/worker.py
==================
d12de041;Jackson Davis;2013-09-30 06:26:02 +0000;review fixes

==

luigi/interface.py
==================
c79f16bc;Elias Freider;2013-09-27 01:06:44 -0700;Merge pull request #184 from sisidra/master
Some minor cleanup and naming refactoring
==
==================
a2ba1057;Jackson Davis;2013-09-26 23:55:59 +0000;list tasks in sorted order

==

luigi/interface.py
==================
222c3466;Jackson Davis;2013-09-26 23:03:15 +0000;Suggested task names in the event of typos

==

luigi/interface.py
==================
42a3638e;Martins Kalvans;2013-09-26 17:11:30 +0200;Some minor cleanup and naming refactoring

==

luigi/contrib/ssh.py
test/_test_ssh.py
==================
7bfd14e2;Elias Freider;2013-09-26 07:38:48 -0700;Merge pull request #182 from sisidra/master
Add support for writing on RemoteTarget
==
==================
d7ac6320;Martins Kalvans;2013-09-26 11:09:17 +0200;Add put & get functions for RemoteTarget

==

luigi/contrib/ssh.py
test/_test_ssh.py
==================
a03b770a;Doug Daniels;2013-09-18 19:40:03 -0400;moto only works with python2.7+, so disable moto-based tests if it cannot import

==

test/s3_test.py
==================
6f6bd5f2;Doug Daniels;2013-09-18 18:53:12 -0400;Add test dependencies for travis

==

.travis.yml
==================
db7a3c08;Doug Daniels;2013-09-18 18:29:40 -0400;Add S3 client and target

==

luigi/s3.py
test/s3_test.py
==================
352c9094;Martins Kalvans;2013-09-24 17:24:22 +0200;Add support for writing on RemoteTarget

==

luigi/contrib/ssh.py
test/_test_ssh.py
==================
0f0e8069;David Whiting;2013-09-24 06:01:15 -0700;Merge pull request #174 from erikbern/running-tasks-info
When you want to run tasks but they are currently run by other workers, ...
==
==================
213da7b8;David Whiting;2013-09-24 05:57:17 -0700;Merge pull request #181 from spotify/freider/potential_deadlock_fix
Wraps ioloop fetcher/launcher for unit tests in a function.
==
==================
9741d304;Elias Freider;2013-09-24 13:52:05 +0200;Wraps ioloop fetcher for unit tests in a function.
Otherwise, the ioloop instance is fetched in the main loop
but launched in a separate thread, which seems to cause problems.
Hopefully this fixes sporadic deadlocks in unit tests

==

luigi/server.py
==================
725172e3;Erik Bernhardsson;2013-09-24 11:01:17 +0200;Verbose output when multiple workers try running the same task(s)
Not fully backwards compatible: if you update the scheduler before the worker, you will have problems
The other way is fine though (updating the worker before the scheduler)

Also removed support for fallback to an older way of calling the scheduler - this was fixed in the scheduler in July 2013 so it should not be a problem.

==

luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
test/central_planner_test.py
test/customized_run_test.py
==================
ebdbbecf;Elias Freider;2013-09-24 01:49:42 -0700;Merge pull request #165 from spotify/freider/remote_execution
Adds utilities for working over SSH connections
==
==================
f57ab1c7;Elias Freider;2013-08-12 17:43:22 +0200;Adds utilities for working over SSH connections
Includes RemoteContext for setting up tunnels and executing commands over SSH
and RemoteTarget for reading remote files (writing not yet implemented)

==

examples/ssh_remote_execution.py
luigi/contrib/__init__.py
luigi/contrib/ssh.py
setup.py
test/_test_ssh.py
test/test_ssh.py
==================
7cf789db;David Whiting;2013-09-23 23:45:26 -0700;Merge pull request #180 from tyro89/master
tweak locking and add simple test.
==
==================
0739890f;Erik Selin;2013-09-23 18:55:01 -0400;tweak locking and add simple test.

==

luigi/interface.py
luigi/lock.py
test/lock_test.py
==================
46c4d1d4;Erik Bernhardsson;2013-09-19 13:28:59 -0700;Merge pull request #176 from JonNelson/master
add bzip2 format support
==
==================
f4a899c0;Erik Bernhardsson;2013-09-19 13:28:38 -0700;Merge pull request #170 from odise/set_sender_via_config
"From: Luigi" to sender (which is configurable).
==
==================
ce941591;Jon Nelson;2013-09-16 19:39:08 -0500;add bzip2 format support

==

luigi/format.py
test/file_test.py
==================
9af25d2f;Erik Bernhardsson;2013-09-12 10:30:44 -0700;Merge pull request #175 from gward/master
README: fix scattered grammar, punctuation errors.
==
==================
99a8e18d;Greg Ward;2013-09-12 12:17:44 -0400;README: fix scattered grammar, punctuation errors.

==

README.md
==================
f8f63a4c;Uldis Barbans;2013-09-05 15:44:43 +0200;allow more flexibility for the subprocess in InputPipeProcessWrapper

==

luigi/format.py
==================
adb67cb5;David Whiting;2013-08-29 08:00:56 -0700;Merge pull request #171 from a1k0n/master
Fix missing comma in dpkg dependencies
==
==================
2117ffee;David Whiting;2013-08-29 07:55:12 -0700;Merge pull request #172 from miku/minor/floatparameter
make FloatParameter accessible just as the others
==
==================
8f56863c;Martin Czygan;2013-08-29 15:56:22 +0200;make FloatParameter accessible just as the others

==

luigi/__init__.py
==================
c2149b2a;Andy Sloane;2013-08-29 08:22:24 -0500;Fix missing comma in dpkg dependencies

==

debian/control
==================
814eb6c6;David Whiting;2013-08-28 08:32:17 -0700;Merge pull request #169 from a1k0n/master
Support map-only streaming jobs
==
==================
4f7b3586;Jan Nabbefeld;2013-08-28 15:29:41 +0200;"From: Luigi" to sender (which is configurable).

==

luigi/notifications.py
==================
0600e653;Andy Sloane;2013-08-26 10:04:47 -0500;Support map-only streaming jobs
If the number of reducers is set to 0, Hadoop won't even run the reduce
phase of the job.  So if there is no reducer() method defined in the
JobTask, we run a map-only job and the mapper writes output directly
instead of serializing the key/value.

==

luigi/hadoop.py
test/hadoop_test.py
==================
f15d4ef8;David Whiting;2013-08-23 05:40:50 -0700;Merge pull request #168 from spotify/freider/file_wrapper
Wrap file in python object to allow run-time extensions by Format classes
==
==================
ceff1fa3;David Whiting;2013-08-23 05:38:11 -0700;Merge pull request #166 from spotify/freider/mock_dependency
Adds dependencies on the mock library from pypi/debian
==
==================
53d755b6;David Whiting;2013-08-23 05:36:45 -0700;Merge pull request #159 from JoeEnnever/master
Fixes visualizer for taskids with _ and numbers in the name
==
==================
65bef6ef;David Whiting;2013-08-23 05:35:36 -0700;Merge pull request #155 from alanbbr/master
directories ending in .egg work
==
==================
fbcb1c67;Elias Freider;2013-08-23 13:50:29 +0200;Wrap file in python object to allow run-time extensions by Format classes

==

luigi/file.py
luigi/format.py
test/file_test.py
==================
a6ec1c7d;David Whiting;2013-08-16 06:46:23 -0700;Merge pull request #119 from spotify/lallea/testability
Improve OO and remove code smell, hdfs layer.  Mend HDFS tests.
==
==================
ec3dd893;David Whiting;2013-08-14 06:01:38 -0700;Merge pull request #164 from anyman/master
Improvements to the task visualizer
==
==================
599f2bf0;Elias Freider;2013-08-12 17:59:13 +0200;Adds dependencies on the mock library from pypi/debian

==

.travis.yml
debian/control
tox.ini
==================
95fbc98e;Elias Freider;2013-08-12 16:37:57 +0200;Adjust indentation in setup.py

==

setup.py
==================
0595d42d;Lars Albertsson;2013-08-12 15:40:07 +0200;Fix merge issues in _hdfs_test.

==

test/_hdfs_test.py
==================
66cd0ca9;Lars Albertsson;2013-08-12 15:32:22 +0200;Revert changes in hdfs.py.

==

luigi/hdfs.py
==================
7d181de6;Lars Albertsson;2013-07-04 13:21:51 +0200;Improve OO and remove code smell, hdfs layer.  Mend HDFS tests.

==

.gitignore
luigi/hdfs.py
test/_hdfs_test.py
test/cmdline_test.py
==================
d6911ae6;Erik Bernhardsson;2013-08-08 09:30:05 -0400;Removed a spurious traceback from the PyPi installation by bundling README.md

==

MANIFEST.in
setup.py
==================
d42465ab;Erik Bernhardsson;2013-08-07 19:51:52 -0400;Static files should work now in PyPi.
Bumped version number even more.
Improved the formatting
Check it out: https://pypi.python.org/pypi/luigi

==

MANIFEST.in
setup.py
==================
a49044d1;Erik Bernhardsson;2013-08-07 11:53:52 -0700;Merge pull request #152 from gf-atebbe/cmmaster
Apache HiveCommandClient 
==
==================
74de35b5;Erik Bernhardsson;2013-08-07 14:47:38 -0400;bumped the version number and uploaded to pypi

==

setup.py
==================
5d578b52;Erik Bernhardsson;2013-08-07 11:19:20 -0700;Merge pull request #163 from jcrobak/config-email
Allow configuration of smtp for notifications.
==
==================
b4955169;Anders Nyman;2013-08-07 14:16:53 -0400;Adding gzip support to application calls

==

luigi/server.py
==================
e661fd32;Anders Nyman;2013-08-07 14:05:39 -0400;Moving upstream code to do iterative graph traversal

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
1e1fe0d0;Anders Nyman;2013-07-31 13:37:33 -0400;Removing upstream_status from serialization info

==

luigi/scheduler.py
test/scheduler_visualisation_test.py
==================
fe05974c;Joe Crobak;2013-08-07 14:20:47 +0000;Allow configuration of smtp for notifications.
Defaults are all the same as before, but you can now
specify ssl, login, server host, etc.

==

luigi/notifications.py
==================
0c65c495;Erik Bernhardsson;2013-08-07 08:55:42 -0700;Merge pull request #162 from JoeEnnever/templatefix
Fixes templates, reverse_url doesn't work
==
==================
039156ab;Joe Ennever;2013-08-07 15:00:25 +0000;Fixes templates, reverse_url doesn't work

==

luigi/templates/recent.html
luigi/templates/show.html
==================
b39960da;Alan Brenner;2013-08-07 10:45:16 -0400;only fail if given an egg file, not a directory ending in .egg

==

luigi/hadoop.py
==================
7f34e372;Erik Bernhardsson;2013-08-07 06:17:55 -0700;Merge pull request #110 from spotify/neville/scalding
Add Scalding support
==
==================
1f2d3cf2;Neville Li;2013-07-01 01:03:01 +0000;Add Scalding support
Change-Id: I5c3ef04d7cc2db8cfb5944875bbeecb95b5d86e0

==

luigi/hadoop.py
luigi/scalding.py
test/hadoop_test.py
==================
52f58adf;Joe Ennever;2013-08-06 15:35:24 +0000;Fixes visualizer for taskids with _ and numbers in the name

==

luigi/static/visualiser/js/visualiserApp.js
==================
8c54bae3;David Whiting;2013-08-06 06:25:32 -0700;Merge pull request #158 from miku/feature/filecopy
added File.copy
==
==================
c722b9f8;Martin Czygan;2013-08-06 10:41:11 +0200;added File.copy
Use case: when a file, e.g. from an ExternalTask lives
on a read-only filesystem, you cannot `move` it.

One unittest included.

==

luigi/file.py
test/file_test.py
==================
df543511;Erik Bernhardsson;2013-08-05 18:18:25 -0700;Merge pull request #151 from JoeEnnever/db_fix
Adds unit tests for db_task_history, bug fixes
==
==================
00306793;David Whiting;2013-08-02 01:55:57 -0700;Merge pull request #156 from spotify/freider/server_log_spooling
Server logs with timestamp archived in daily files
==
==================
ef8e1f58;Elias Freider;2013-08-01 21:42:09 +0200;Server logs with timestamp archived in daily files

==

bin/luigid
luigi/process.py
luigi/scheduler.py
luigi/server.py
==================
ce6ac951;Adam Tebbe;2013-07-17 14:40:03 -0400;Adding a manifest file for distutils so that bin/luigid is included in the source tarball that gets built Hadoop binary path can now be specified in config.  Sets are converted to tuples in Task class. Additional unit tests in the hdfs module and a new hive client command class supporting the Apache release of Hive, which returns a non-zero exit status if tables and partitions dont exist

==

MANIFEST.in
README.md
luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hdfs.py
luigi/hive.py
luigi/parameter.py
luigi/task.py
test/_hdfs_test.py
test/hive_test.py
==================
40f835ed;Joe Ennever;2013-07-31 19:28:26 +0000;Adds unit tests for db_task_history, bug fixes
Uses sqlite3 in memory mode for db.
If sqlalchemy can't be imported, skips the test rather than failing.

==

luigi/db_task_history.py
test/db_task_history_test.py
==================
7795d559;David Whiting;2013-07-31 09:06:34 -0700;Merge pull request #149 from spotify/freider/broken_param_split
Improve scheduler-side parameter parsing
==
==================
726a4dc4;Elias Freider;2013-07-31 15:28:22 +0200;Improve parameter parsing so it doesn't break the scheduler on weird parameter values
Adds failing unit test exposing broken parameter split

==

luigi/scheduler.py
test/central_planner_test.py
==================
5759918d;David Whiting;2013-07-31 08:38:30 -0700;Merge pull request #148 from spotify/freider/worker_add_refactor
Refactor Worker.add
==
==================
7bd15168;Elias Freider;2013-07-31 16:14:40 +0200;Remove __del__ on worker as it's undeterministic

==

luigi/worker.py
==================
6299a938;Elias Freider;2013-07-31 12:08:33 +0200;Flatten recursive add into an explicit list-based stack

==

luigi/worker.py
test/recursion_test.py
==================
47bd513f;Elias Freider;2013-07-31 00:30:00 +0200;Refactor Worker.add
Refactored the Worker.add method to make it more readable. Breaks out
some of the email/error logic for across the module.

==

luigi/interface.py
luigi/notifications.py
luigi/rpc.py
luigi/worker.py
test/fib_test.py
test/instance_test.py
test/instance_wrap_test.py
test/recursion_test.py
test/scheduler_visualisation_test.py
test/task_history_test.py
test/worker_test.py
==================
6048f2b2;Erik Bernhardsson;2013-07-30 13:44:39 -0700;Merge pull request #147 from spotify/freider/ping_retry
Retry if scheduler ping fails
==
==================
e598258b;Elias Freider;2013-07-30 22:40:08 +0200;Additional test for new Worker.stop method

==

test/worker_test.py
==================
0e35ec15;Elias Freider;2013-07-30 22:22:36 +0200;Retry if ping of scheduler fails
* Makes ping interval configurable
* Also adds accessible stop() method to stop workers' keep-alive-threads

==

luigi/worker.py
test/worker_test.py
==================
67323992;Erik Bernhardsson;2013-07-29 15:00:33 -0700;Merge pull request #146 from anyman/master
Revert "Changing HadoopJobRunner to use move_dir
==
==================
4ffa28f4;Anders Nyman;2013-07-29 16:06:23 -0400;Revert "Changing HadoopJobRunner to use move_dir when moving results to final output since move_dir is atomic"
This creates issues as well since we will have an empty output dir that will trigger other jobs to run.

This reverts commit daa6e6368706759622e60db98c0ec73c7198fc0c.

==

luigi/hadoop.py
luigi/mock.py
==================
13ff0788;Erik Bernhardsson;2013-07-29 12:47:30 -0700;Merge pull request #145 from anyman/master
Changing HadoopJobRunner to use move_dir
==
==================
daa6e636;Anders Nyman;2013-07-29 15:35:55 -0400;Changing HadoopJobRunner to use move_dir when moving results to final output since move_dir is atomic

==

luigi/hadoop.py
luigi/mock.py
==================
15d44cbd;Erik Bernhardsson;2013-07-26 11:10:44 -0700;Merge pull request #142 from erikbern/task-history-refactoring
Refactored the task history support added by JoeEnnever
==
==================
5675b228;Erik Bernhardsson;2013-07-23 20:45:44 -0400;Refactored the task history support added by jennever@foursquare.com

==

luigi/db_task_history.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/task_history.py
test/task_history_test.py
==================
691cace7;Erik Bernhardsson;2013-07-26 10:38:25 -0700;Merge pull request #144 from JoeEnnever/vizfix
Fixes visualizing a task graph with missing tasks
==
==================
18f6c73b;Joe Ennever;2013-07-26 16:39:05 +0000;Fixes visualizing a task graph with missing tasks
They show up as UNKNOWN (like luigi-grep). Prints out a warning message
when this occurs, though it can be quite noisy.

Fixes https://github.com/spotify/luigi/issues/122

==

luigi/scheduler.py
luigi/task_status.py
==================
8691421a;Erik Bernhardsson;2013-07-25 21:22:09 -0400;Minor fix about triggering many tasks

==

README.md
==================
efda6b5a;Erik Bernhardsson;2013-07-24 20:10:09 -0400;Minor fixes in readme

==

README.md
examples/wordcount.py
==================
08f88ac2;Erik Bernhardsson;2013-07-24 11:23:39 -0700;Merge pull request #143 from erikbern/new-doc
Rewrote README.md and added the examples from the PyData 2013 preso
==
==================
2cfacb64;Erik Bernhardsson;2013-03-19 22:21:09 -0700;Rewrote README.md and added the examples from the PyData 2013 preso by Elias
RFC: let me know if this makes sense.

Updated pictures to use the new visualizer, except the big splashy dep graph which I'll do later.

Removed some crap in examples/ and doc/ and added some more random stuff to README.md

==

README.md
doc/aggregate_artists.png
doc/fib.png
doc/fib_zoomed.png
doc/user_recs.png
doc/user_recs_graph.png
doc/web_server.png
doc/wordcount.png
doc/wordcount_hadoop.png
doc/wordcount_hadoop_failed.png
doc/wordcount_more.png
examples/generate_input.py
examples/top_artists.py
==================
cbd407a0;Elias Freider;2013-07-23 05:21:43 -0700;Merge pull request #140 from wouterdebie/master
Add-fix tornado bug
==
==================
36a6e266;Wouter de Bie;2013-07-23 14:13:35 +0200;Add-fix tornado bug
Only load tornado dependent classes when tornado is available.

==

luigi/task_history.py
==================
02431dac;Elias Freider;2013-07-23 03:01:00 -0700;Merge pull request #139 from ulzha/master
allow running without Tornado
==
==================
1828da4a;Uldis Barbans;2013-07-23 11:45:07 +0200;allow running without Tornado

==

luigi/task_history.py
==================
4295705a;Erik Bernhardsson;2013-07-21 09:16:15 -0700;Merge pull request #136 from erikbern/rpc-cleanup
Cleanup in the RPC mechanism for forwards compatibility + a bunch more u...
==
==================
d4b5cfd3;Erik Bernhardsson;2013-07-21 09:08:08 -0700;Merge pull request #135 from ulzha/master
support dependency introduction through inheritance
==
==================
8dbd1a5d;Erik Bernhardsson;2013-07-21 09:06:20 -0700;Merge pull request #121 from vivshri/master
Fixing file existence check to make it compatible with various hadoop releases and distributions 
==
==================
65f758ba;Erik Bernhardsson;2013-07-19 14:18:10 -0400;Cleanup in the RPC mechanism for forwards compatibility + a bunch more unit tests

==

luigi/rpc.py
luigi/server.py
test/remote_scheduler_test.py
test/rpc_test.py
test/server_test.py
==================
6f349ed2;Uldis Barbans;2013-07-18 16:23:34 +0200;support dependency introduction through inheritance
Facilitates task composition through inheritance, as I desired for e.g. a generic Hive partition creation task, which would besides input require also table creation.

==

luigi/task.py
==================
a7ca0c7c;Erik Bernhardsson;2013-07-18 05:30:05 -0700;Merge pull request #133 from miku/minor/floatparameter
added Parameter class to accept float values
==
==================
3afa87f5;Martin Czygan;2013-07-18 13:57:58 +0200;added Parameter class to accept float values

==

luigi/parameter.py
==================
cbdcb44f;Erik Bernhardsson;2013-07-16 19:31:31 -0700;Merge pull request #131 from spotify/neville/isdir
fix LocalFileSystem.isdir
==
==================
343b1518;Erik Bernhardsson;2013-07-16 19:30:48 -0700;Merge pull request #132 from erikbern/task-history
Task history
==
==================
3a12b619;Erik Bernhardsson;2013-07-16 22:19:12 -0400;Merge branch 'task_history' of git://github.com/JoeEnnever/luigi into JoeEnnever-task_history
Conflicts:
	test/customized_run_test.py

==
==================
76ffa635;Neville Li;2013-07-17 02:08:01 +0000;fix LocalFileSystem.isdir

==

luigi/file.py
==================
1d8d6f7b;David Whiting;2013-07-16 02:24:35 -0700;Merge pull request #129 from erikbern/serialize-params
Support optional serialize() method on Parameter
==
==================
2b2803f8;Erik Bernhardsson;2013-07-15 18:55:56 -0400;Support optional serialize() method on Parameter

==

luigi/parameter.py
luigi/task.py
test/date_hour_test.py
==================
cf3b1a82;Erik Bernhardsson;2013-07-14 17:43:38 -0700;Merge pull request #127 from erikbern/queue-pool
[hadoop scheduler] switching between schedulers using hadoop_scheduler config parameter Edit
==
==================
d938a5ed;Erik Bernhardsson;2013-07-14 20:37:06 -0400;Merge branch 'master' of git://github.com/kawaa/luigi into kawaa-master
Conflicts:
	luigi/hadoop.py
	luigi/hive.py

==
==================
954fc18e;Adam Kawa;2013-07-11 14:47:32 +0000;[hadoop scheduler] switching between schedulers using hadoop_scheduler config parameter

==

luigi/hadoop.py
luigi/hive.py
==================
29307b7e;vivshri;2013-07-13 12:49:35 -0400;Updating code to run in both CHD3/4 and Hortonworks current releases
Updated code after the review
==

luigi/hdfs.py
==================
e3531f84;vivshri;2013-07-11 23:30:22 -0400;Updating code to run in both CHD3/4 and Hortonworks current releases
hadoop fs -ls -d is not compatible with releases other than CDH4. This update should work in all versions.
==

luigi/hdfs.py
==================
643a4535;Erik Bernhardsson;2013-07-11 06:01:48 -0700;Merge pull request #120 from kawaa/master
[job conf] add support for job queue parameter (Capacity Scheduler)
==
==================
bc40e3d9;Adam Kawa;2013-07-11 14:47:32 +0000;[job conf] add support for job queue parameter (for Capacity Scheduler)

==

luigi/hadoop.py
luigi/hive.py
==================
e8630550;Joe Ennever;2013-05-10 20:01:28 +0000;Task history, implementation of https://github.com/spotify/luigi/issues/51
All the tables are added as per the RFC, though currently
only Task, TaskEvent, and TaskParameters is being used right now.

Task history is added by the scheduler, history viewer
available through /history/

==

.gitignore
.travis.yml
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/task.py
luigi/task_history.py
luigi/task_status.py
luigi/templates/header.html
luigi/templates/recent.html
luigi/templates/show.html
luigi/worker.py
test/customized_run_test.py
==================
3723d013;Erik Bernhardsson;2013-07-08 20:40:35 -0700;Merge pull request #118 from gf-atebbe/master
Add Apache 1.x HDFS support
==
==================
bfa8fdb5;Adam Tebbe;2013-07-08 10:47:46 -0400;Adding support to the HDFS module for the Apache 1.x release of Hadoop and fixing tests of that module which were failing

==

README.md
luigi/hdfs.py
test/_hdfs_test.py
==================
75177d9e;Erik Bernhardsson;2013-07-08 09:58:26 -0700;Merge pull request #117 from jcrobak/nicer-default-from-config
Make default_from_config less strict.
==
==================
fa2acb92;Erik Bernhardsson;2013-07-08 09:57:55 -0700;Merge pull request #116 from dj4b1n/master
Added WorkerSchedulerFactory to interface.py to make worker/scheduler customization more complete and easier to integrate
==
==================
d02e9be6;Joe Crobak;2013-07-08 13:57:03 +0000;Make default_from_config less strict.
If the section/name specified in default_from_config isn't found,
then has_default returns False. This makes default_from_config
easier to use in tests or if you are trying to run an unrelated
Task.

==

luigi/parameter.py
test/parameter_test.py
==================
6e1c980b;Danielle Jabin;2013-07-05 16:23:03 +0200;Added WorkerSchedulerFactory to interface.py to make worker/scheduler customization more complete and easier to integrate

==

luigi/interface.py
test/customized_run_test.py
==================
3aaaec95;Erik Bernhardsson;2013-07-04 12:25:27 -0700;Merge pull request #115 from VisualDNA/tooltips_for_graph
Add tooltips with parameters to dependency graph.
==
==================
583a2922;Wojtek Wajerowicz;2013-06-19 17:19:25 +0100;Add tooltips with parameters to dependency graph.
Display only task name on the dependency graph.

==

luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/lib/jquery-ui/css/images/animated-overlay.gif
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_flat_0_aaaaaa_40x100.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_flat_75_ffffff_40x100.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_glass_55_fbf9ee_1x400.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_glass_65_ffffff_1x400.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_glass_75_dadada_1x400.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_glass_75_e6e6e6_1x400.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_glass_95_fef1ec_1x400.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-bg_highlight-soft_75_cccccc_1x100.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_222222_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_2e83ff_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_454545_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_888888_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/images/ui-icons_cd0a0a_256x240.png
luigi/static/visualiser/lib/jquery-ui/css/jquery-ui-1.10.3.custom.min.css
luigi/static/visualiser/lib/jquery-ui/js/jquery-ui-1.10.3.custom.min.js
==================
d09484ca;Erik Bernhardsson;2013-07-04 09:01:06 -0700;Merge pull request #111 from VisualDNA/list_done_tasks
List done tasks in visualizer
==
==================
60057c23;Benjamin Hawkes-Lewis;2013-06-19 11:35:42 +0100;List done tasks in visualizer
List done tasks in visualizer as well as upstream failed and failed.

Show "Dependency graph" button for done tasks

Show "Dependency graph" not "Show error trace" button for done tasks in
task list.

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
74281325;Erik Bernhardsson;2013-07-03 16:40:03 -0700;Merge pull request #109 from VisualDNA/order_tasks_by_most_recent
Changed ordering of tasks in the task list to be most recently submitted...
==
==================
4e94a39a;Erik Bernhardsson;2013-07-03 16:39:31 -0700;Merge pull request #108 from VisualDNA/display_both_buttons
Made it so that the error button will only show if there was an error on task list
==
==================
1e2713cb;Erik Bernhardsson;2013-07-03 16:35:51 -0700;Merge pull request #107 from VisualDNA/error_on_bad_search
Added an error message when searching for a task that doesn't exist
==
==================
c8cb5c82;Daniel Byrd;2013-06-19 16:21:05 +0100;Changed ordering of tasks in the task list to be most recently submitted first (within each grouped list of tasks)

==

luigi/static/visualiser/js/visualiserApp.js
==================
c7b6b510;ssavage;2013-06-19 13:38:50 +0100;Made it so that the error button will only show if there was an error

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
e01125d9;Daniel Byrd;2013-06-19 13:34:16 +0100;Added an error message when searching for a task that doesn't exist

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/visualiserApp.js
==================
c1b5a58c;Erik Bernhardsson;2013-07-03 13:03:45 -0700;Merge pull request #106 from jcrobak/config
Switch RawConfigParser -> ConfigParser.
==
==================
d3165135;Joe Crobak;2013-07-03 19:50:43 +0000;Switch RawConfigParser -> ConfigParser.
Unsure how to unit test, but I did test it locally.

==

luigi/configuration.py
==================
e8d83a08;Erik Bernhardsson;2013-07-02 14:10:30 -0400;Merge branch '1-scheduled-tasks' of git://github.com/VisualDNA/luigi into VisualDNA-1-scheduled-tasks
Conflicts:
	luigi/static/visualiser/index.html
	luigi/static/visualiser/js/luigi.js
	luigi/static/visualiser/js/visualiserApp.js

==
==================
9f940755;Erik Bernhardsson;2013-07-02 10:49:57 -0700;Merge pull request #102 from VisualDNA/1-task-list-squashed
Added list of running tasks to the task list of the UI. 
==
==================
8414c834;ssavage;2013-06-19 14:52:58 +0100;Added pending tasks - note this feature would be better with pagination on tasks

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
f75d3b1b;ssavage;2013-06-19 11:38:41 +0100;Modified index for running task section
Modified luigi.js

Implemented running tasks, but also implemented done tasks

Removed the done list, so now just has running list

Made it so dependency graph button shows instead of error button (would be nice to have both really for all tasks)

==

luigi/static/visualiser/index.html
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
==================
1106198b;Erik Bernhardsson;2013-06-26 08:30:12 -0700;Merge pull request #97 from dj4b1n/master
Addition for worker/scheduler customization (pull request #90): updated _run_task in worker.py to return status so that the status can be used (i.e. sent to scheduler) in the custom worker/scheduler as necessary
==
==================
f23a113d;Danielle Jabin;2013-06-26 16:53:10 +0200;Addition for worker/scheduler customization (pull request #90): updated _run_task in worker.py to return status so that the status can be used (i.e. sent to scheduler) in the custom worker/scheduler as necessary

==

luigi/worker.py
==================
2feb6e80;Erik Bernhardsson;2013-06-25 15:52:19 -0700;Merge pull request #95 from erikbern/luigiconfigparser
added LuigiConfigParser in interface.py for backwards compatibility
==
==================
221f2f4e;Erik Bernhardsson;2013-06-24 13:53:02 -0400;added LuigiConfigParser in interface.py for backwards compatibility

==

luigi/interface.py
==================
07c6a571;Erik Bernhardsson;2013-06-20 11:05:37 -0700;Merge pull request #90 from dj4b1n/master
Added scheduler and worker parameters to run, build, and Interface.run in interface.py
==
==================
d7b890a9;Erik Bernhardsson;2013-06-20 11:05:21 -0700;Merge pull request #93 from erikbern/task-args-kwargs-2
Fixed some issues with my previous commit
==
==================
0de75269;Erik Bernhardsson;2013-06-20 07:05:44 -0700;Merge pull request #92 from VisualDNA/dependency-graph-legend-with-firefox-fixes
Dependency graph legend with firefox fixes
==
==================
8e98be63;Erik Bernhardsson;2013-06-20 10:04:11 -0400;Fixed some issues with my previous commit
- .args clashed with HadoopJarJob's .args
- clone didn't work if a Task had global params (why did we add global params? We should remove them)

==

luigi/task.py
test/clone_test.py
==================
9346ad36;Miles Tillinger;2013-06-20 14:30:14 +0100;Added task status legend to dependency graph Fixed graph width in Firefox

==

luigi/static/visualiser/js/graph.js
==================
201e380e;Erik Bernhardsson;2013-06-20 04:34:49 -0700;Merge pull request #91 from VisualDNA/support-multiple-emails-for-alerts
Allow multiple comma separated email addresses for error-email in client...
==
==================
7aa5c206;Miles Tillinger;2013-06-19 17:11:45 +0100;Allow multiple comma separated email addresses for error-email in client.cfg

==

luigi/notifications.py
==================
86efffdb;Elias Freider;2013-06-20 00:32:41 -0700;Merge pull request #89 from erikbern/task-args-kwargs
Set .args and .kwargs on a Task (useful sometimes)
==
==================
0f620210;Danielle Jabin;2013-06-19 18:04:07 +0200;Added customizable scheduler and worker parameters to interface (run, build, and Interface.run) and a customized_run_test

==

luigi/interface.py
test/customized_run_test.py
==================
1cbe2c4e;Erik Bernhardsson;2013-06-18 10:14:26 -0400;Utility method to clone tasks. Also set .args and .kwargs on a Task (useful sometimes)

==

luigi/task.py
test/clone_test.py
==================
3ac41bcc;Erik Bernhardsson;2013-06-12 23:43:53 -0700;Merge pull request #87 from freyes/d64b2aa26648bb514c51c0aa76c9627078bde081
Add tox support to run test suite
==
==================
e0c46a89;Erik Bernhardsson;2013-06-12 23:43:15 -0700;Merge pull request #88 from freyes/upstream
Remove pep8 warnings from luigi.worker module
==
==================
05b4b418;Erik Bernhardsson;2013-06-12 23:42:30 -0700;Merge pull request #86 from spotify/lallea/custom_scheduler
Support custom scheduler and API responder.  
==
==================
19186d8b;Felipe Reyes;2013-06-12 23:11:34 -0400;Remove pep8 warnings from luigi.worker module
Still has some warnings, but they are long messages (>80)

==

luigi/worker.py
==================
d64b2aa2;Felipe Reyes;2013-06-12 22:51:23 -0400;Added tox.ini with the smae configuration used by travis
This let developers run the test suite using tox locally before pushing changes

==

tox.ini
==================
b4d68863;Lars Albertsson;2013-06-13 01:06:09 +0200;Support custom scheduler and RPC responder.  Factor out code smell in luigi.server.  Revive remote scheduler test.  Add test-generated files to .gitignore.

==

.gitignore
luigi/server.py
test/remote_scheduler_test.py
==================
eaa3f470;Erik Bernhardsson;2013-06-12 15:18:54 -0700;Merge pull request #85 from jcrobak/luigi-grep-fix-unknown
Classify tasks not found as 'UNKNOWN'
==
==================
361b58de;Joe Crobak;2013-06-12 21:18:13 +0000;Classify tasks not found as 'UNKNOWN'
Fixes an exception we've been seeing in certain situations.

==

bin/luigi-grep.py
==================
6bad4211;Erik Bernhardsson;2013-06-07 09:53:38 -0700;Merge pull request #84 from rathboma/master
Now we pass the hive client to hive targets in the constructor
==
==================
898dac27;Erik Bernhardsson;2013-06-07 08:43:51 -0700;Merge pull request #83 from jcrobak/config-defaults
Luigi parameters with defaults from config.
==
==================
f4eefbfa;matthew;2013-06-06 14:38:04 -0400;Hive targets have customizable clients
- deprecated old methods
- no deprecate client

==

luigi/hive.py
==================
240f6b40;Joe Crobak;2013-06-05 17:36:58 +0000;Luigi parameters with defaults from config.
Allow default for a parameter to be specified in a config file.
The config is lazily loaded, so it's not evaluated on parsing
(useful in the case of calling LuigiConfigParser.add_config_path
to add additional configs at runtime).

Also,
* move config into its own module
* a test utility to override configs for testing.

==

examples/terasort.py
luigi/__init__.py
luigi/configuration.py
luigi/hadoop.py
luigi/hdfs.py
luigi/hive.py
luigi/interface.py
luigi/parameter.py
luigi/postgres.py
luigi/server.py
luigi/webhdfs.py
luigi/worker.py
test/helpers.py
test/parameter_test.py
==================
5097ad2d;Erik Bernhardsson;2013-05-30 18:32:15 -0700;Merge pull request #82 from jcrobak/mockfile-fs
Make MockFile a FileSystemTarget, add FileSystem.
==
==================
10f5ab4b;Joe Crobak;2013-05-30 21:55:38 +0000;Make MockFile a FileSystemTarget, add FileSystem.
Barebones "FileSystem" implementation for MockFile. Some semantics
don't 100% match hadoop fs, but this is a good start for testing.

==

luigi/mock.py
test/mock_test.py
==================
e1cc8711;Erik Bernhardsson;2013-05-29 07:55:06 -0700;Merge pull request #81 from spotify/freider/visualiser_relative_paths
Changed to using relative paths for API calls
==
==================
34851a61;Elias Freider;2013-05-29 16:44:25 +0200;Changed to using relative paths for API calls. Useful if luigi entry-point root is changed to something other than /

==

luigi/static/visualiser/index.html
==================
bf34da6b;David Whiting;2013-05-29 13:17:02 +0200;Added recursive scan to setup.py to get round limitations is python's packaging

==

debian/control
setup.py
==================
4351cea0;Elias Freider;2013-05-29 04:10:14 -0700;Merge pull request #80 from DavW/new-visualiser
New visualiser to display failing tasks and dependency graphs
==
==================
1979abca;David Whiting;2013-05-29 12:11:57 +0200;Added root path handler to redirect / to /static/visualiser/index.html

==

luigi/server.py
==================
1fd16ecf;David Whiting;2013-05-28 16:03:31 +0200;Visualiser now fetched error traces from luigi. Failed nodes in graph are clickable for a traceback. Ships with mock data for testing UI in isolation

==

luigi/rpc.py
luigi/scheduler.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/visualiserApp.js
luigi/static/visualiser/lib/bootstrap/css/bootstrap.css
luigi/static/visualiser/lib/bootstrap/css/bootstrap.min.css
luigi/static/visualiser/lib/bootstrap/js/bootstrap.js
luigi/static/visualiser/lib/bootstrap/js/bootstrap.min.js
luigi/static/visualiser/mockdata/dep_graph
luigi/static/visualiser/mockdata/fetch_error
luigi/static/visualiser/mockdata/task_list
test/scheduler_visualisation_test.py
==================
63c07b8c;David Whiting;2013-05-28 13:56:06 +0200;Killed old visualiser and fixed 2.7-dependent tests

==

README.md
debian/control
luigi/server.py
luigi/static/SVGPan.js
luigi/static/header.html
luigi/static/jquery-1.7.1.min.js
test/scheduler_visualisation_test.py
==================
b37bd2cb;David Whiting;2013-05-24 14:48:38 +0200;New hand-written layout engine more suited to directed acyclic graphs (like dependency graphs). Backend unit tests now use scheduler directly instead of RPC.

==

luigi/server.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/test/graph_test.js
luigi/static/visualiser/js/visualiserApp.js
luigi/static/visualiser/lib/bootstrap/css/bootstrap.css
luigi/static/visualiser/lib/bootstrap/css/bootstrap.min.css
luigi/static/visualiser/lib/bootstrap/img/glyphicons-halflings-white.png
luigi/static/visualiser/lib/bootstrap/img/glyphicons-halflings.png
luigi/static/visualiser/lib/jquery-1.10.0.min.js
luigi/static/visualiser/lib/mustache.js
luigi/static/visualiser/test.html
test/scheduler_visualisation_test.py
==================
663a012f;David Whiting;2013-05-21 15:12:04 +0200;New luigi task status and graph visualiser (squashed for cleaner history, including commits by lallea, Anders Nyman and Uldis Barbans)

==

.gitignore
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/static/visualiser/index.html
luigi/static/visualiser/js/graph.js
luigi/static/visualiser/js/luigi.js
luigi/static/visualiser/js/tasklist.js
test/remote_scheduler_test.py
==================
bb936131;Erik Bernhardsson;2013-05-23 11:47:06 -0700;Merge pull request #79 from jcrobak/webhdfs-fixes
Fix relative paths in webhdfs.
==
==================
1422e076;Joe Crobak;2013-05-23 15:37:50 +0000;Fix relative paths in webhdfs.
This fixes relative paths in webhdfs by prepending
the users home dir whenever the path is relative.

==

luigi/webhdfs.py
test/_webhdfs_test.py
==================
f6b55319;Erik Bernhardsson;2013-05-22 16:06:19 -0700;Merge pull request #76 from JoeEnnever/hive_fix
Fixes MetastoreClient.table_exists for partitions
==
==================
b26946a7;Erik Bernhardsson;2013-05-22 16:05:59 -0700;Merge pull request #78 from rathboma/master
Minor change -- debug output for hive targets
==
==================
4f42d5b3;matthew;2013-05-22 17:44:18 -0500;better logging output for hive targets

==

luigi/hive.py
==================
457a6c45;Joe Ennever;2013-05-22 16:02:36 +0000;Fixes MetastoreClient.table_exists for partitions

==

luigi/hive.py
==================
df85526b;Elias Freider;2013-05-22 07:27:10 -0700;Merge pull request #75 from spotify/freider/mkdir_exists_handling
Fixes handling already existing files in hdfs.mkdir
==
==================
a7457c29;Elias Freider;2013-05-22 16:18:52 +0200;Fixes errors in handling already existing files on . Also adds unit test to test this functionality

==

luigi/hdfs.py
luigi/hive.py
luigi/target.py
test/_hdfs_test.py
==================
f67dc6dc;Elias Freider;2013-05-22 06:31:46 -0700;Merge pull request #74 from jcrobak/mock-sb-context-man
Add context manager for Mock.open().
==
==================
ab8ac88f;Joe Crobak;2013-05-21 17:14:17 +0000;Add context manager for Mock.open().
The HdfsTarget's support this, so it makes sense to add to mocks
for compatibility.

Also snuck in a change to gitignore for some MacOS files.

==

.gitignore
luigi/mock.py
test/mock_test.py
==================
c088fb88;Erik Bernhardsson;2013-05-17 06:22:06 -0700;Merge pull request #70 from spotify/freider/auto_create_parent
HiveQueryTask automatically creates parent directory of output if it doesn't exist
==
==================
60bfe2eb;Erik Bernhardsson;2013-05-16 14:49:12 -0700;Merge pull request #73 from JoeEnnever/tracking_callback
Adds callback when new tracking_url is found
==
==================
71331068;Joe Ennever;2013-05-16 20:38:27 +0000;Adds callback when new tracking_url is found
Will be used for the TaskHadoopJob table, but I thought it would be
useful separately as well.

==

luigi/hadoop.py
==================
69ecbade;Elias Freider;2013-05-13 15:54:09 +0200;HiveQueryTask automatically creates parent directory of output if it doesn't exist.
Previously, an INSERT OVERWRITE would fail if the parent directory didn't exist.
As part of this, I started working on a more generic file system abstraction for the local
file system in addition to the existing one for HDFS (HdfsClient)

==

luigi/file.py
luigi/hdfs.py
luigi/hive.py
luigi/target.py
test/file_test.py
test/hive_test.py
test/target_test.py
==================
d2b6da5c;Erik Bernhardsson;2013-05-14 05:51:01 -0700;Merge pull request #71 from jcrobak/luigi-grep
luigi grep utility.
==
==================
291fcef8;Joe Crobak;2013-05-13 18:21:13 +0000;luigi grep utility.
Utility to search the luigi API using a prefix or a status.

==

bin/luigi-grep.py
==================
1cedf60d;Erik Bernhardsson;2013-05-10 06:19:47 -0700;Merge pull request #68 from erikbern/travis-ci
added travis-ci support
==
==================
56180e41;Erik Bernhardsson;2013-05-10 01:24:26 +0200;added travis-ci support

==

.travis.yml
==================
810ebc02;Erik Bernhardsson;2013-05-09 16:32:41 -0700;Merge pull request #67 from rathboma/master
Sorry -- missing colon :-(
==
==================
8c9a4430;matthew;2013-05-09 13:10:07 -0500;typo

==

luigi/hive.py
==================
f0a1ba0a;Erik Bernhardsson;2013-05-09 05:51:26 -0700;Merge pull request #64 from erikbern/kill-interrupted-hadoop-jobs
If the user interrupts the job, kill it
==
==================
70da6e0a;Elias Freider;2013-05-09 03:20:36 -0700;Merge pull request #57 from rathboma/master
Added a flag to HivePartitionTarget to prevent failure if a table doesn't exist
==
==================
71e01152;Elias Freider;2013-05-08 09:03:09 -0700;Merge pull request #65 from jcrobak/fix-mixedup-db-table
Some of the db/table calls were reversed.
==
==================
709928cc;Joe Crobak;2013-05-08 15:39:47 +0000;Some of the db/table calls were reversed.

==

luigi/hive.py
==================
614c6e6e;Erik Bernhardsson;2013-05-08 15:37:58 +0000;If the user interrupts the job, kill it

==

luigi/hadoop.py
==================
f911d472;matthew;2013-05-06 11:42:57 -0500;failure setting for missing tables on partition target
- resolved merge issues

==

luigi/hive.py
==================
7e9cbee9;Elias Freider;2013-05-07 02:10:46 -0700;Merge pull request #48 from JoeEnnever/hive
Refactor hive functions into client, add thrift client
==
==================
15945dcb;Joe Ennever;2013-04-15 20:16:17 +0000;Refactor hive functions into client, add thrift client
HiveClient interface for:
  - table_location
  - table_schema
  - table_exists
Implementation using `hive` invocations, and the thrift metastore
client.

Note: this changes the table_location function to take a dict instead of
a partition string

==

luigi/hive.py
==================
5f190cb1;Elias Freider;2013-05-06 08:29:34 -0700;Merge pull request #45 from jcrobak/hive-hiveconfs
Add support for common hive params.
==
==================
0030e672;Wouter de Bie;2013-05-03 14:22:19 +0300;Cleanup .gitconfig
.gitconfig contained a git merge failure
==

.gitignore
==================
235f0772;Wouter de Bie;2013-05-03 14:21:06 +0300;Update LICENSE

==

LICENSE
==================
3625597d;Erik Bernhardsson;2013-05-03 01:34:52 -0700;Merge pull request #55 from spotify/freider/auto_create_dirs
Create log dir and pid dir if they don't exist.
==
==================
b09b0e61;Elias Freider;2013-05-02 18:57:56 +0200;Create log dir and pid dir if they don't exist. Also remove spotify specific user reference in debian init

==

debian/luigi-server.init
luigi/process.py
==================
45f2228b;Erik Bernhardsson;2013-05-02 15:31:51 +0000;debian init file for luigi-server

==

debian/luigi-server.init
==================
89233421;Elias Freider;2013-05-02 08:05:49 -0700;Merge pull request #54 from jcrobak/patch-1
Add #luigi and luigi-user to readme
==
==================
c4dcd0a4;Joe Crobak;2013-05-02 11:58:20 -0300;Add #luigi and luigi-user to readme

==

README.md
==================
4677adea;Erik Bernhardsson;2013-05-02 13:17:36 +0000;Fixed .install files for Debian

==

debian/luigi-server.install
debian/luigi.install
==================
17b7cb5d;Erik Bernhardsson;2013-05-02 13:12:35 +0000;Remoted legacy debian rules stuff

==

debian/rules
==================
43758aec;Erik Bernhardsson;2013-05-02 13:11:37 +0000;Added directories to install luigi-server

==

debian/luigi-server.install
==================
d118e3f3;Erik Bernhardsson;2013-05-02 12:54:32 +0000;Added a debian pkg for the server

==

debian/control
setup.py
==================
53c0fb1e;Erik Bernhardsson;2013-05-02 12:45:04 +0000;Experimental Debianization

==

debian/changelog
debian/compat
debian/control
debian/rules
==================
d12265d0;Elias Freider;2013-03-26 18:04:28 +0100;Replace clear_table with more generic init_copy overridable method
Change-Id: Ia65a5029931f37dd98615166e53e4c62f0bd9301
Reviewed-on: https://gerrit.spotify.net/gerrit/46046
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

Conflicts:
	luigi/postgres.py

==

luigi/postgres.py
test/_postgres_test.py
==================
b158073c;Adam Kawa;2013-04-13 17:31:53 +0000;adding skip_trash option to remove method
Change-Id: I068f7b55230f14fc38c9a11957fd5387e33a2d8a
Reviewed-on: https://gerrit.spotify.net/gerrit/49220
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

Conflicts:
	luigi/hdfs.py

==

luigi/hdfs.py
test/_hdfs_test.py
==================
c9c413a1;Elias Freider;2013-05-02 01:53:06 -0700;Merge pull request #44 from jcrobak/fix-hive-errors
Raise exception when hive commands fail.
==
==================
2df2ba31;Erik Bernhardsson;2013-05-01 16:04:00 -0700;Merge pull request #53 from danmbyrd/master
small bug in last commit
==
==================
1557d0e0;Daniel Byrd;2013-05-01 16:16:55 +0100;NOJIRA fixed copying of atomic paths with trailing slash

==

luigi/hadoop_jar.py
==================
823659c6;Erik Bernhardsson;2013-05-01 07:26:27 -0700;Merge pull request #52 from danmbyrd/master
Made hadoop_jar fix_paths able to handle trailing slashes
==
==================
9e3583ae;Daniel Byrd;2013-05-01 14:22:21 +0100;Made hadoop_jar fix_paths able to handle trailing slashes

==

luigi/hadoop_jar.py
==================
252331c3;Erik Bernhardsson;2013-04-25 19:00:40 -0400;Fixed a potential deadlock if there's too much data on stdout
https://github.com/spotify/luigi/pull/34

==

luigi/hadoop.py
==================
72a24e65;Erik Bernhardsson;2013-04-25 17:20:55 +0000;Fixed README.md issue for pypi
See https://github.com/spotify/luigi/issues/46

==

setup.py
==================
59472ffd;Joe Crobak;2013-04-25 14:28:34 +0000;Add support for common hive params.
Motivation was to set the job name on the jobtracker UI,
but this also exposes a few other common params.

==

luigi/hive.py
==================
96b4a508;Erik Bernhardsson;2013-04-23 15:07:00 +0000;Fixed tracking progress to stdout
Change-Id: I5b983026d8d29dfdf41de08a4506a6dea05bc615
Reviewed-on: https://gerrit.spotify.net/gerrit/51236
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
test/hadoop_test.py
==================
00bcb9ac;Joe Crobak;2013-04-24 21:11:39 +0000;Raise exception when hive commands fail.
Previously, they were silently failing. Also,
seems that the exceptions are written to stderr,
so include that in the exception.

==

luigi/hive.py
test/_hive_test.py
==================
9661d21a;Erik Bernhardsson;2013-04-22 16:51:44 -0700;Merge pull request #43 from erikbern/hadoop-exceptions
fixed an issue with a unit test when running in Spotify's environment
==
==================
f135f596;Erik Bernhardsson;2013-04-22 19:50:55 -0400;fixed an issue with a unit test when running in Spotify's environment

==

test/hadoop_test.py
==================
b7056ab3;David Whiting;2013-04-17 11:00:35 +0200;Added close and rename to MockFile
Change-Id: Ie4a53ed80606d5f697a5d8d8ffd9c44fd7c87769
Reviewed-on: https://gerrit.spotify.net/gerrit/49890
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/mock.py
==================
632b2231;Elias Freider;2013-04-22 13:35:11 -0700;Merge pull request #42 from erikbern/hadoop-exceptions
Fixed issue with printing the exception
==
==================
1b356bab;Erik Bernhardsson;2013-04-22 13:14:26 -0400;Fixed issue with printing the exception
We didn't catch it if some issue happened in the constructor of Runner (like if you forgot to import some module)

Also added a bunch of unit tests to run mrrunner.py and verify it works.

==

luigi/hadoop.py
luigi/mrrunner.py
test/hadoop_test.py
==================
288f1ff0;Erik Bernhardsson;2013-04-19 08:56:44 -0700;Merge pull request #41 from JoeEnnever/hadoopfix
Fixes on_failure super call.
==
==================
41664461;Joe Ennever;2013-04-19 14:46:04 +0000;Fixes on_failure super call.
Wasn't passing exception parameter

==

luigi/hadoop.py
==================
29386a68;Neville Li;2013-04-18 09:17:55 -0700;Merge pull request #40 from erikbern/more-verbose-param-excs
slightly more verbose parameter exceptions
==
==================
ff8f7d7c;Erik Bernhardsson;2013-04-18 11:44:53 -0400;slightly more verbose parameter exceptions

==

luigi/task.py
==================
2f0e710c;Erik Bernhardsson;2013-04-18 06:56:50 -0700;Merge pull request #39 from erikbern/broken-task-exceptions
Helpful exceptions for broken tasks
==
==================
f4bad7f2;Erik Bernhardsson;2013-04-17 18:14:09 -0400;Ran into a very confusing problem when trying to build broken tasks. Added some helpful exceptions to prevent it in the future

==

luigi/task.py
luigi/worker.py
test/worker_task_test.py
==================
3dadee0a;Erik Bernhardsson;2013-04-16 10:17:23 -0700;Merge pull request #38 from jcrobak/webhdfs
WebHDFS support for luigi.

Merging this for now, since it doesn't interfere with existing code. Next step would be to integrate it somehow.
==
==================
28cd1932;Erik Bernhardsson;2013-04-15 20:12:24 -0700;Merge pull request #34 from JoeEnnever/emails
Include subprocess out,err in run_and_track_hadoop_job
==
==================
531c3290;Joe Crobak;2013-04-12 14:30:30 +0000;WebHDFS support for luigi.
Doesn't have full target support yet (put() seems broken),
but at least has the ability speed up exists() check.

==

luigi/webhdfs.py
test/_webhdfs_test.py
==================
142f8910;Adam Kawa;2013-04-10 12:57:52 +0000;adding hdfs put, get and getmerge methods
Change-Id: I9f905a391475435f0fc698368e3137d6cdbe7851
Reviewed-on: https://gerrit.spotify.net/gerrit/48531
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hdfs.py
test/_hdfs_test.py
==================
67b031f7;Adam Kawa;2013-04-10 11:06:58 +0000;return stdout from call_check and use it in count() method
Change-Id: I9990e960582ad58e3e348ddc23a5c4ba05235346
Reviewed-on: https://gerrit.spotify.net/gerrit/48449
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hdfs.py
==================
32fb5675;Erik Bernhardsson;2013-04-07 17:55:03 +0000;fixed bug with combiner and extra_files
Change-Id: I021d4cb5a2a49326e60c6179cf76106a33ea7497
Reviewed-on: https://gerrit.spotify.net/gerrit/47669
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
==================
be03b7af;Erik Bernhardsson;2013-04-15 14:28:53 -0700;Merge pull request #36 from jcrobak/fix-hive
Fix luigi.hive
==
==================
4bfb6803;Joe Crobak;2013-04-15 20:14:40 +0000;Fix luigi.hive
I was lazy with my returns. Also update the tests to catch this one.

==

luigi/hive.py
test/hive_test.py
==================
d7f9eb00;Elias Freider;2013-04-12 04:55:40 -0700;Merge pull request #35 from dopuskh3/master
Fix a tiny typo in a log line
==
==================
9fd10c9e;Francois Visconte;2013-04-12 11:50:43 +0200;Fix a log typo.
Double 'is' removed.

==

luigi/worker.py
==================
c63b894d;Joe Ennever;2013-04-11 21:28:30 +0000;Just write to file, print it out after
Refactored to be less indented
Added test

==

luigi/hadoop.py
test/hadoop_test.py
==================
2ca9c733;Joe Ennever;2013-04-10 21:52:12 +0000;Include subprocess out,err in run_track_hadoop_job

==

luigi/hadoop.py
test/hadoop_test.py
==================
508f7f2b;Erik Bernhardsson;2013-04-10 10:55:45 -0700;Merge pull request #33 from JoeEnnever/serverconfig
Makes scheduler configurable, no retry failed task
==
==================
26dd3675;Joe Ennever;2013-04-09 21:58:46 +0000;Makes scheduler configurable, no retry failed task
luigi.server.RPCHandler passes arguments from luigi.interface.get_config
to the scheduler it creates.

Passing a negative retry_delay to CentralPlannerScheduler will cause
tasks to never be retried, until a new luigi invocation. This is needed
for our very long running pipelines. A task that continually fails uses
up cluster resources and luigi worker processes.

==

luigi/scheduler.py
luigi/server.py
==================
2d2df6df;Elias Freider;2013-04-03 17:26:29 +0200;Renamed _repr_reader/writer and created an alternative reader/writer using pickle
Change-Id: If3c1873dad874bf3c7f3f50ea1dff9dd47dbaf8d
Reviewed-on: https://gerrit.spotify.net/gerrit/47106
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: David Whiting <davw@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
==================
cbe34d37;Elias Freider;2013-03-13 15:37:31 -0400;Use LocalJobRunner for MapReduce if there are non-HdfsTarget outputs
Change-Id: Ie406af4a5e479dc4bb7ff8c6ecb8469713b3fe99
Reviewed-on: https://gerrit.spotify.net/gerrit/44957
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
==================
5103711b;Adam Kawa;2013-04-03 10:43:32 +0000;adding copy command
Change-Id: I0898a0e273d5e567a2fd947731200788f451484f
Reviewed-on: https://gerrit.spotify.net/gerrit/46993
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

Conflicts:
	luigi/hdfs.py

==

luigi/hdfs.py
==================
2c02d52c;Elias Freider;2013-04-05 04:58:53 -0700;Merge pull request #32 from jcrobak/abcmeta
introduce ABCMeta for Target and Task.
==
==================
8cf0979b;Joe Crobak;2013-04-02 21:48:22 +0000;introduce ABCMeta for Target and Task.
Task's metaclass inherits ABCMeta and Target uses ABCMeta as its
metaclass. This lets you define abstract targets and tasks that
can't be instantiated directly.

I have a few simple tests to demonstrate the expected usage and
to make sure that things still work ok.

Open question: Does it make sense for Target.open() to exist? It
only seems to be applicable to HDFS and File Targets (maybe an
OpenableTarget interface?). Or should we leave it without the
@abstractmethod annotation.

==

luigi/hive.py
luigi/postgres.py
luigi/target.py
luigi/task.py
test/subtask_test.py
test/target_test.py
==================
4794b6f6;Erik Bernhardsson;2013-04-02 14:06:34 -0700;Merge pull request #31 from jcrobak/fix-url-tracking
Fix failure tracking for non-streaming jobs.
==
==================
b4d4be84;Joe Crobak;2013-04-01 20:23:13 +0000;Fix failure tracking for non-streaming jobs.
* move the @staticmethods to luigi.hadoop namespace.
* refactor all uses of those functions.
* clean up some random lint errors and imports.

==

luigi/hadoop.py
luigi/hadoop_jar.py
luigi/hive.py
==================
b744d896;Erik Bernhardsson;2013-04-02 06:05:19 -0700;Merge pull request #20 from jcrobak/hive-script
separate functions for hive script/cmd.
==
==================
04f10e2e;jco;2013-03-11 18:44:51 +0100;Add final execution hooks to luigi, as well as batched counter increments
Change-Id: I6aba342a446a8b039ac6fcd7379cfce9f859f659
Reviewed-on: https://gerrit.spotify.net/gerrit/43537
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

Conflicts:
	.gitignore
	luigi/hadoop.py

==

.gitignore
luigi/hadoop.py
==================
b687e4eb;Erik Bernhardsson;2013-03-28 02:14:09 +0000;fixed bug with LocalTarget and is_tmp where files were created at instantiation
https://github.com/spotify/luigi/issues/29

Change-Id: Ibc6ad08a1084605c549ed00be90d84d8d3c700de
Reviewed-on: https://gerrit.spotify.net/gerrit/46388
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/file.py
test/file_test.py
==================
65de9f0a;Erik Bernhardsson;2013-03-21 16:29:24 -0700;convenience method for delegating jobs to subtasks
Change-Id: Icfb1a6aa136954c962c0621bba70fcf813811c0f
Reviewed-on: https://gerrit.spotify.net/gerrit/45426
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/util.py
test/subtask_test.py
==================
c8f3ee2d;Elias Freider;2013-03-20 14:00:34 -0700;Fix incompatibility with latest graphviz svg format
Change-Id: I8a0f0d31166e273384de6809ba2a784bcf079903
Reviewed-on: https://gerrit.spotify.net/gerrit/45144
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/server.py
==================
ad2eefaa;Elias Freider;2013-03-21 14:18:28 -0700;Merge pull request #27 from jcrobak/better-error-msg
Give better message in case of missing param.
==
==================
ff7952be;Joe Crobak;2013-03-21 20:12:13 +0000;Give better message in case of missing param.
We've had a number of user trip up because you have to specify
e.g. --foo-bar rather than --foo_bar. So I think this'll help
avoid the common confusion.

Example error message looks like:

luigi.parameter.MissingParameterException: No value for
'date_interval' (--date-interval) submitted and no default value
has been assigned.

==

luigi/parameter.py
==================
81eac687;Elias Freider;2013-03-13 15:29:50 -0400;Improved log messages for interface/worker execution
Change-Id: I0aa2670b66aeb6d795da9cb85466b4e838dae4ab
Reviewed-on: https://gerrit.spotify.net/gerrit/44958
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/interface.py
luigi/worker.py
==================
5bb748e8;Elias Freider;2013-03-13 14:42:15 -0400;Fix file transactionality issue when using the with keyword on LocalTarget
Change-Id: Ib60adbf71bdc507104b9757b117f9f2a8f867d4f
Reviewed-on: https://gerrit.spotify.net/gerrit/44956
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/file.py
test/file_test.py
==================
a8b05f9b;Erik Bernhardsson;2013-03-06 03:18:26 +0000;New test that sets up a server in the background etc.
Trying to find a bug, but it's impossible. At least we have some new tests :)

Change-Id: I7a3fa8c1fb6716acb943a5dd533fcef81d8a7d57
Reviewed-on: https://gerrit.spotify.net/gerrit/42836
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

Conflicts:

	debian/control

==

luigi/server.py
test/remote_scheduler_test.py
==================
2b3f7705;Elias Freider;2013-03-03 14:43:01 +0100;Using hadoop fs -ls -d for testing file existence, instead of hadoop fs -test -e which is semi-broken
Added unit test to test connection errors which would previously have been seen as file non-existence
Improved exception messages from other hadoop cli calls

Change-Id: I5a0e37023777663cfdca74d95eeeb4f19b865b61
Reviewed-on: https://gerrit.spotify.net/gerrit/42362
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

Conflicts:

	luigi/hdfs.py

==

luigi/hdfs.py
test/_hdfs_test.py
==================
7d381fde;Elias Freider;2013-03-18 16:42:04 -0700;Merge pull request #22 from JoeEnnever/master
postgres.CopyToTable refactor
==
==================
f65e0f23;Joe Ennever;2013-03-12 14:29:20 +0000;Refactor of how CopyToTable copies data into pg
- New method copy(self, cursor, tmp_file) that calls
  cursor.copy_from, to allow subclasses to overwrite
- Overridable column separator for the tmp_file, instead
  of always using \t

==

luigi/postgres.py
==================
8a932c13;Erik Bernhardsson;2013-03-17 16:51:46 -0700;Merge pull request #25 from erikbern/master
Updated introduction
==
==================
231a8b1d;Erik Bernhardsson;2013-03-16 18:54:22 -0700;Update README.md
Rewrote introduction

TODO: right now the image link refers to /erikbern/luigi, fix this if/when the PR is merged

==

README.md
doc/user_recs_graph.png
==================
276647fe;Erik Bernhardsson;2013-03-14 13:20:56 -0700;Merge pull request #23 from jcrobak/add-skip-trash
add skip_trash option to remove.
==
==================
4a953fc0;Joe Crobak;2013-03-14 19:48:11 +0000;add skip_trash option to remove.
Add the ability to pass -skipTrash to hadoop fs -rm command line.

==

luigi/hdfs.py
==================
b14d1de4;David Whiting;2013-03-13 16:44:11 +0100;Moved hdfs operations into HdfsClient class, added aliases so they can be used as module methods as before.
Change-Id: I972e45e595ab3af035d7c66034d40791b15b2b75
Reviewed-on: https://gerrit.spotify.net/gerrit/43945
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

Conflicts:

	luigi/hdfs.py

==

luigi/hdfs.py
==================
4974a3d9;Erik Bernhardsson;2013-03-12 16:51:44 +0000;Better error message if requires() returns non-Tasks
Change-Id: Ieaf0f450dd3708772ffcd2f39700200058a3c301
Reviewed-on: https://gerrit.spotify.net/gerrit/43770
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/file.py
luigi/worker.py
==================
d06fd73b;Erik Bernhardsson;2013-03-13 09:52:35 -0700;Merge pull request #21 from bitly/port_param
add scheduler_port param
==
==================
25ca876f;Dan Frank;2013-03-13 10:37:50 -0400;add scheduler_port param

==

luigi/interface.py
==================
abddb5d4;Elias Freider;2013-03-12 14:16:46 -0400;Fixed a couple of hive-related bugs
* Fixed incorrect order of arguments in ExternalHiveTask
* Using dictionary parameters broke with instance cache since dict is
not hashable

==

luigi/hive.py
luigi/task.py
==================
ecba927a;Joe Crobak;2013-03-11 17:47:34 +0000;separate functions for hive script/cmd.
Expose a new function for running commands stored in a file
rather than as a string.

==

luigi/hive.py
test/hive_test.py
==================
da20852f;Elias Freider;2013-03-07 15:14:37 -0800;Merge pull request #16 from JoeEnnever/master
Hive task definition
==
==================
5bf20af0;Joe Ennever;2013-03-07 18:55:21 +0000;Fixes indentation error

==

luigi/hive.py
==================
4dc1f08e;Joe Ennever;2013-03-06 17:38:04 +0000;Applied freider's change, fix whitespace, refactor
Added partition_spec and table_location as static methods,
changes 2 spaces to 4 spaces for indenting.

==

luigi/hive.py
==================
e62c40ff;Anders Nyman;2013-02-27 14:56:00 +0100;Making it possible to configure the local tmp directory for hadoop jobs
Change-Id: I9a47b733d2a8d3f874c1c96800362d6a38e27a94
Reviewed-on: https://gerrit.spotify.net/gerrit/41637
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/hadoop.py
==================
f81fba75;Elias Freider;2013-02-12 18:12:36 +0100;Added pseudo-random sort of lines when running in local mode
Change-Id: Ie6e6191b6812901201ae424168bc77642ab80063
Reviewed-on: https://gerrit.spotify.net/gerrit/39928
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
==================
c6c717b3;erikbern@spotify.com;2013-02-15 17:29:19 +0000;respect KeyboardInterrupt
Change-Id: Ib4295320d6444cff9fb471ee54c126781b6ff387
Reviewed-on: https://gerrit.spotify.net/gerrit/40747
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/worker.py
==================
1b171f45;erikbern@spotify.com;2013-01-30 19:14:50 +0000;include task failures in traceback, increased timeout, fixed bug with <10 tasks
Change-Id: I522e5e2abcee83be18073d826fb305c94fb79fd6
Reviewed-on: https://gerrit.spotify.net/gerrit/38213
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
==================
1e7cf36f;Anders Nyman;2013-02-14 16:55:16 +0100;Adding support for showing the modification time when listing files
Change-Id: I2cb4a79fda63d58bfe2cdcf3c6cb13a0d491292e
Reviewed-on: https://gerrit.spotify.net/gerrit/40283
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hdfs.py
==================
1217ac30;Elias Freider;2013-02-12 01:22:50 +0100;Replace deprecated jobconf by -D. Make repr_reader/repr_writer overridable. Fix lint warnings
Change-Id: I02f2be494e450758b1b2863b8cb1bd7535532a2d
Reviewed-on: https://gerrit.spotify.net/gerrit/39783
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/hadoop.py
luigi/mrrunner.py
==================
7432ca9a;Elias Freider;2013-02-07 22:37:20 +0000;Accept strings instead of tuples for column names when not using column types
Change-Id: If117b3d7b09cd75d4c2138cac949ce13167d2fcc
Reviewed-on: https://gerrit.spotify.net/gerrit/39440
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/postgres.py
==================
31ce02f3;Elias Freider;2013-01-28 00:06:38 +0100;Simple postgres integration using psycopg2. Not suitable for too large data sets. We should implement a similar task with sqoop functionality for exporting large data sets from hadoop. psycopg2 shouldn't be a dependency for luigi unless you use this functionality, so imports are try-except guarded
Change-Id: I038495614259688ab3554964d298bf2c572b3fee
Reviewed-on: https://gerrit.spotify.net/gerrit/37669
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/postgres.py
test/_postgres_test.py
==================
172281fd;Elias Freider;2013-02-19 14:01:31 -0800;Merge pull request #17 from jcrobak/getvariants
Add variants of config.get for int/bool/float.
==
==================
a4ae2be3;Joe Crobak;2013-02-19 19:54:26 +0000;Add variants of config.get for int/bool/float.
I was having issues with get and converting to a bool, so I thought
it might be a good idea to bubble up this functionality from from
RawCOnfigParser.

==

luigi/interface.py
==================
e626bdaf;Joe Ennever;2013-02-18 15:30:00 +0000;Some more fixes to hive commands.
Summary:
* Adds ability to retrieve paths for tables.
* extract out hive_cmd() function.
* fix a syntax error.

Notes:
* I think having the new hive_cmd() should make the targets fairly
  easy to unit test. We can discuss if you'd like.

==

luigi/hive.py
==================
4d2424a6;Joe Ennever;2013-02-07 23:59:03 +0000;Hive task definition
HiveQueryTasks run a query in Hive. Their output is a HiveTableTarget
or a HiveTablePartitionTarget, depending on the query. HiveTableTask
is an ExternalTask that checks if a particular table/partition exists.

==

luigi/hive.py
==================
734d85d5;Erik Bernhardsson;2013-01-29 09:52:33 -0800;Merge pull request #15 from jcrobak/fix-hadoop-jar-output
Fix hadoop_jar arg handling.
==
==================
558d614d;Joe Crobak;2013-01-28 22:31:04 +0000;Fix hadoop_jar arg handling.
* HadoopJar was only doing Target-> path coercion if atomic output
  was enabled. This fixes it to always do it.

==

examples/terasort.py
luigi/hadoop_jar.py
==================
d276d0eb;Elias Freider;2013-01-21 11:04:45 +0100;Added method for adding config overrides
Change-Id: I98ebad8f962e6e0eb59fe2fb17c2cc88c15994f8
Reviewed-on: https://gerrit.spotify.net/gerrit/36770
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/interface.py
==================
b2dbfad1;Johan Lundstroem;2013-01-22 11:49:13 +0100;improved write access functionality to work as intended with newer versions of Hadoop
Change-Id: Iaa94963d3eef1f6ee37ab6f77757c18843ba12c0
Reviewed-on: https://gerrit.spotify.net/gerrit/36944
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hdfs.py
==================
341d6a9f;Elias Freider;2013-01-17 15:02:40 +0000;Cleanup. Adding PlainDir format for HdfsTarget * Avoid double logging when running several interfaces * Don't send error emails during in unit tests
Change-Id: Id12dd4b77bed111f8c0dd3f4f1519ff00f731924
Reviewed-on: https://gerrit.spotify.net/gerrit/36456
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/format.py
luigi/hdfs.py
luigi/interface.py
luigi/notifications.py
luigi/worker.py
test/_hdfs_test.py
test/central_planner_test.py
test/hadoop_test.py
test/instance_test.py
test/instance_wrap_test.py
test/parameter_test.py
test/util_test.py
test/worker_test.py
test/wrap_test.py
==================
a4a976e6;erikbern;2013-01-15 17:21:41 -0800;Merge pull request #10 from jcrobak/setuptools
Support setuptools
==
==================
d1a6571b;Joe Crobak;2013-01-15 20:46:08 +0000;Support setuptools
Fall back to distutil if setuptools isn't around. Useful for
bundling as an egg with bdist_egg, for example.

==

.gitignore
setup.py
==================
e721152b;Elias Freider;2013-01-12 15:21:53 +0100;Improve notification emails
- Retry with a delay after connection errors when talking to central scheduler.
- Instead of exit(1) on failure during scheduling, send an error email and continue.
- Some minor refactoring of notification code and some python style cleanup.
- Adjusted unit tests

Change-Id: I9f8a3caf2a37e34b2cd05028aa5c02d226006fe0
Reviewed-on: https://gerrit.spotify.net/gerrit/35787
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/__init__.py
luigi/interface.py
luigi/notifications.py
luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
test/parameter_test.py
test/worker_test.py
==================
d1c5beae;Elias Freider;2013-01-10 13:18:08 +0100;Don't register external tasks
Change-Id: I3e90c3bbcc16bdf2bbe8a4d5a60256ffef9f8a73
Reviewed-on: https://gerrit.spotify.net/gerrit/35494
TC-Compile-And-Test: Team City <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/task.py
test/cmdline_test.py
==================
f85d7f84;Erik Bernhardsson;2012-12-25 09:12:01 -0500;Autoexpose tasks, no need to run luigi.expose any longer
Change-Id: I16fde24982a49163497d47091e972e1dde85368d
Reviewed-on: https://gerrit.spotify.net/gerrit/34706
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

README.md
examples/foo.py
examples/wordcount.py
examples/wordcount_hadoop.py
luigi/interface.py
luigi/task.py
test/cmdline_test.py
test/date_interval_test.py
test/fib_test.py
test/parameter_test.py
test/recursion_test.py
==================
e20e5e16;erikbern;2013-01-09 10:11:01 -0800;Merge pull request #9 from jcrobak/java-support
new hadoop_jvm module for java/scala hadoop jobs.
==
==================
8103fd9a;Joe Crobak;2013-01-08 15:47:56 +0000;more review feedback.
* atomic file renames.
* more docs.
* cleaned up example args.

==

examples/terasort.py
luigi/hadoop_jar.py
==================
dc9c8b20;Joe Crobak;2013-01-07 18:51:55 +0000;Updates from review.
* renames hadoop_jvm -> hadoop_jar, and JvmHadoop* to HadoopJar*.
* remove NamedHdfsTarget
* New example for terasort/teragen.

==

examples/terasort.py
luigi/hadoop_jar.py
luigi/hdfs.py
==================
e5f6e852;Joe Crobak;2013-01-03 20:57:51 +0000;new hadoop_jvm module for java/scala hadoop jobs.
* new JvmJobTask and extracted some common functionality from
  HadoopJobTask into BaseHadoopJobTask
* moved jobconf logic into the BaseHadoopJobTask
* bare-bones JvmHadoopJobRunner and extracted common functionality
  from HadoopJobRunner into static methods (submitting/tracking a
  job).

==

luigi/hadoop.py
luigi/hadoop_jvm.py
luigi/hdfs.py
==================
107b8794;erikbern;2013-01-04 08:47:12 -0800;Merge pull request #7 from jcrobak/cdh3-support
make hdfs cdh3 compatible
==
==================
c642a9ec;Joe Crobak;2013-01-04 16:00:58 +0000;make hadoop version a config option.
Use different commands for cdh3 and cdh4.

==

.gitignore
luigi/hdfs.py
==================
61935be3;erikbern;2013-01-03 09:32:17 -0800;Merge pull request #8 from jcrobak/tmpfile-fix
consolidate tmpfile logic
==
==================
eff41ec3;erikbern;2013-01-03 09:29:30 -0800;Merge pull request #6 from jcrobak/luigid-exec
make luigid executable
==
==================
0ff57df8;Joe Crobak;2013-01-03 15:42:08 +0000;make hdfs cdh3 compatible

==

luigi/hdfs.py
==================
86b301ee;Joe Crobak;2013-01-03 15:38:56 +0000;consolidate tmpfile logic
Also use tempfile so that "/tmp" isn't hard-coded.

==

luigi/hdfs.py
==================
ceb79359;Joe Crobak;2013-01-03 01:43:40 +0000;make luigid executable

==

bin/luigid
==================
2854817f;erikbern@spotify.com;2013-01-03 14:01:59 +0000;Fixed problem in previous commit (sorry, forgot that the HDFS tests are not run automatically)
Change-Id: Id4363d7ac0d7de45ac16e80b7ef9d7f133f6dbef

==

luigi/format.py
==================
489cbc0a;erikbern@spotify.com;2013-01-03 13:26:09 +0000;Adding dummy __enter__ method should hopefully fix a Python 2.7 problem
Change-Id: If28b1e41ceb2e95f770c5c7c226da93c9ea3d156
Reviewed-on: https://gerrit.spotify.net/gerrit/34887
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/format.py
==================
d1f1bd8b;Anders Nyman;2012-12-22 16:09:54 +0000;Commented out broken test
Change-Id: Ib3f6242b5ecce61f4754090667776c423a22228a
Reviewed-on: https://gerrit.spotify.net/gerrit/34699
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

test/worker_test.py
==================
63eb73e8;Anders Nyman;2012-12-22 15:15:38 +0000;Allowing non-boolean returns from the complete method. This should fix endsongsource and a few other sources
Change-Id: I31d8ef1161534c8f03c9fffb92afa391d0d0ea7c
Reviewed-on: https://gerrit.spotify.net/gerrit/34698
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/worker.py
==================
14a18297;Elias Freider;2012-12-20 09:50:59 +0100;Refactored notification emails. Crashes in complete() doesn't abort the entire scheduling process anymore.
Change-Id: I40f7a30bdf34fecbc6457f6911942b36e48997be
Reviewed-on: https://gerrit.spotify.net/gerrit/34538
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/notifications.py
luigi/rpc.py
luigi/scheduler.py
luigi/util.py
luigi/worker.py
test/worker_test.py
==================
9d384542;Elias Freider;2012-12-18 11:16:12 +0100;More randomness in workers
Change-Id: I82154491576fa724d87ef30668f015f1c58fa93a
Reviewed-on: https://gerrit.spotify.net/gerrit/34115
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/worker.py
==================
77fde223;erikbern@spotify.com;2012-12-08 17:16:55 +0000;removed @luigi.expose from all tests
Using luigi.expose (and therefore the global state) lead to problems with unit tests when they were executed in certain order. This didn't manifest itself on TeamCity, but on my laptop etc.

Replaced with luigi.build in some places where we weren't testing cmdline integration

Change-Id: I6b7a3cc3d81eec94c56057d6df9cbc4ab57f7a14
Reviewed-on: https://gerrit.spotify.net/gerrit/33015
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/interface.py
test/copy_test.py
test/factorial_test.py
test/fib_test.py
test/hadoop_test.py
test/parameter_test.py
test/recursion_test.py
test/wrap_test.py
==================
e1298c31;erikbern@spotify.com;2012-12-10 04:03:47 +0000;added some more comments and exception handling to hdfs.exists, because i've got pwned by the same behavior twice now
Change-Id: Ica0c309b63361a256fb16e3fc24a2d564e89eb9e
Reviewed-on: https://gerrit.spotify.net/gerrit/33046
Reviewed-by: Elias Freider <freider@spotify.com>
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hdfs.py
==================
68bf30c2;erikbern@spotify.com;2012-12-10 14:50:46 +0000;re-enable the visualizer
Change-Id: I7cac8408fbe3ff9c7688e04cbf7d20893bb4d54c
Reviewed-on: https://gerrit.spotify.net/gerrit/33156
Reviewed-by: Elias Freider <freider@spotify.com>

==

bin/luigid
==================
96731b5e;erikbern@spotify.com;2012-12-03 17:54:59 +0000;Cleanup tmp directory + slightly improved exception fetching
Change-Id: Iba7a562750cd105c6cbaf41c696250347134ca90
Reviewed-on: https://gerrit.spotify.net/gerrit/32252
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
==================
d2df854a;Elias Freider;2012-12-06 19:23:08 +0100;Add equality operator for DateInterval to allow defaults. Added unit test that broke previous build
Change-Id: I919b8aec66e1f4878458379ee4f8b23e06a8ba0a
Reviewed-on: https://gerrit.spotify.net/gerrit/32793
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/date_interval.py
test/date_interval_test.py
==================
c177f0ae;erikbern@spotify.com;2012-12-07 22:33:04 +0000;Fixed problem with tests caused by the global register. Only occurred if tests executed in a certain order
Change-Id: Ib691f4fd6bcf46f9d0f63c6a9a4917b8fb10e152
Reviewed-on: https://gerrit.spotify.net/gerrit/33003
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

test/wrap_test.py
==================
9f6c33f5;erikbern@spotify.com;2012-12-07 22:15:34 +0000;Prevent infinite recursion in InputPipeProcessWrapper/OutputPipeProcessWrapper
http://users.cs.cf.ac.uk/J.P.Giddy/python/gotcha/getattr.html

Change-Id: Ia690ba3b52f5f33320e654d85bb4d519c59d5c29
Reviewed-on: https://gerrit.spotify.net/gerrit/33000
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/format.py
==================
79387751;erikbern@spotify.com;2012-12-07 15:54:54 +0000;Added bin/luigid and fixed some minor issues with README.md
Change-Id: I8f04cbf91e7408f9a3aacd6e3397dd64d4d9d8c3
Reviewed-on: https://gerrit.spotify.net/gerrit/32969
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
bin/luigid
examples/generate_input.py
==================
51e04ff1;erikbern;2012-12-07 13:45:13 -0800;Merge pull request #2 from jcrobak/more-liberal-hdfs-paths
be less scrict about hdfs paths.
==
==================
a1feddc4;Joe Crobak;2012-12-07 18:23:30 +0000;be less scrict about hdfs paths.
urlsplit the HDFS path so that fully-specified urls,
e.g. "s3n://" and "hdfs://namenode:port/foo/bar" work.

==

luigi/hdfs.py
==================
00c882d9;erikbern@spotify.com;2012-12-01 02:43:58 +0000;Raise exception when reading file fails and user doesn't explicitly close() the file
Change-Id: I44cc457b3741a327a893bf1ebd8a9f7e7f26c5e7
Reviewed-on: https://gerrit.spotify.net/gerrit/32069
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/format.py
==================
f0a0938d;Elias Freider;2012-11-29 11:24:32 +0100;Fix broken unit tests
Change-Id: Ifedfafd4679e29ca9710a788a8138f5db43aa80e
Reviewed-on: https://gerrit.spotify.net/gerrit/31672
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

test/central_planner_test.py
==================
9286015d;Elias Freider;2012-11-29 10:59:21 +0100;Change to prune every 10 seconds instead of doing it on each call
Change-Id: I20b723326096f771ea6dffc59fb50ae7745b8ce5
Reviewed-on: https://gerrit.spotify.net/gerrit/31664
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

luigi/scheduler.py
luigi/server.py
==================
b6d0cf7c;erikbern@spotify.com;2012-11-28 16:34:31 +0000;Fallback from simplejson to json.
This solves some weird build error I had that was triggered by seemingly unrelated things.

Change-Id: I04c43e4ea575605a7a9dcbe170ea6524d8602171
Reviewed-on: https://gerrit.spotify.net/gerrit/31577
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/worker.py
==================
9d4a88fd;Anders Nyman;2012-11-28 15:05:00 +0000;Changed lock dir to be a Parameter and not a BooleanParameter as it is not boolean and this broken the locking
Change-Id: Ia99e3dcb5c534a39b7fe8284a73cd08b076e6599
Reviewed-on: https://gerrit.spotify.net/gerrit/31547
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

luigi/interface.py
==================
dc610a0d;erikbern@spotify.com;2012-11-26 17:28:01 +0000;fixed exception for relative file paths and added unit test
Change-Id: Ica17d7139f1f47df6f2cb9d3c8a842b434d3f99d
Reviewed-on: https://gerrit.spotify.net/gerrit/31063
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/file.py
test/file_test.py
==================
054c8ec0;Elias Freider;2012-11-20 17:48:06 +0100;Improve formatting of error emails and logging
Change-Id: Id40e73280c4a7a7d506f1eda3dea8a50b4061f11
Reviewed-on: https://gerrit.spotify.net/gerrit/30288
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/interface.py
luigi/task.py
luigi/worker.py
==================
802b3878;erikbern@spotify.com;2012-11-14 04:34:05 +0000;Added comparator for DateInterval classes
The lack of this lead to pretty deep problems because it messed up the task instance cache.
I.e. MyTask(date_interval.Year(2012)) wasn't equal to MyTask(date_interval.Year(2012))

Also comparators for date intervals are probably pretty useful in their own right

Change-Id: I70d1e54c550db99e35a571e5c6dd6879dc0baedd
Reviewed-on: https://gerrit.spotify.net/gerrit/29314
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/date_interval.py
test/date_interval_test.py
test/instance_test.py
==================
b59386e5;Johan Lundstroem;2012-11-20 18:36:20 +0100;Update README.md
Fixed a small typo in the wordcount example.
==

README.md
==================
0a38634d;erikbern@spotify.com;2012-11-02 21:16:27 +0000;New function luigi.build that doesn't require cmd line interaction + refactored existing cmd line stuff a bit
(This is the second attempt, and I think this is a lot cleaner. Feel free to disagree.)

Change-Id: I50c70c0a49a426fb74db83ea27968c4ca2aee9c3
Reviewed-on: https://gerrit.spotify.net/gerrit/27885
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/__init__.py
luigi/interface.py
luigi/parameter.py
test/fib_test.py
==================
89117b47;erikbern@spotify.com;2012-10-25 21:59:13 +0000;removed support for expose_main, added deprecation warning and unittest for it, also added alternate way of doing it
Change-Id: Ic89619c53f7524fc452b505752c107daaeb86538
Reviewed-on: https://gerrit.spotify.net/gerrit/26908
Reviewed-by: Elias Freider <freider@spotify.com>
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>

Conflicts:

	README.md

==

README.md
examples/generate_input.py
examples/wordcount.py
luigi/interface.py
test/cmdline_main_test.py
==================
204ca979;erikbern@spotify.com;2012-10-24 21:19:44 +0000;print traceback to stderr. it makes debugging 100x easier
Change-Id: I000148a81fb6699c7b037c8416871ce51703ad60
Reviewed-on: https://gerrit.spotify.net/gerrit/26746
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/worker.py
==================
471f0117;Erik Bernhardsson;2012-10-21 15:03:23 -0400;added the whole README.md to the long description

==

setup.py
==================
88bd9662;Erik Bernhardsson;2012-10-21 14:55:55 -0400;long description

==

setup.py
==================
7de8faa9;Fabian Alenius;2012-10-16 09:41:34 +0000;Hadoop jobs should fail if output already exists.
Change-Id: I218b7ececef556b24edc20c48ccaea2fcfaa22ec
Reviewed-on: https://gerrit.spotify.net/gerrit/25502
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

luigi/hadoop.py
test/hadoop_test.py
==================
5816bd64;koda@spotify.com;2012-10-15 15:42:30 +0000;Actually call on_success/failure when a task is done.
Change-Id: I3899c6a12d9de645998c8f38097af93a1f980a04
Reviewed-on: https://gerrit.spotify.net/gerrit/25424
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/worker.py
==================
c431bec0;Erik Bernhardsson;2012-10-09 10:18:10 -0400;Added support for significant/insignificant parameters to prevent running the same task with insignificant changes to parameters
(This was freider's commit, but I had to modify it to apply to open-source)

==

luigi/hadoop.py
luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
ec994a28;erikbern@spotify.com;2012-10-05 11:05:15 +0000;fixed some problems with extra_files
Change-Id: I192e2b63c63ce7601fc800dacf55d30958170dd6
Reviewed-on: https://gerrit.spotify.net/gerrit/24573
Reviewed-by: Elias Freider <freider@spotify.com>
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>

==

luigi/hadoop.py
==================
dbe95f04;Elias Freider;2012-10-03 12:34:13 +0900;Changed config mechanism. Catch errors during scheduling phase and email them. Exit on error in scheduling
Change-Id: I2324f073b594fb82b2d63b54f77c52bb83d26210
Reviewed-on: https://gerrit.spotify.net/gerrit/24257
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
luigi/interface.py
luigi/util.py
luigi/worker.py
test/parameter_test.py
test/test.py
==================
99e97038;erikbern@spotify.com;2012-10-03 13:19:21 +0000;Support for static files and directories (recursively) using -files. Removed -cacheFile and -cacheArchive support
Change-Id: I48bf23851641a9610c870d20d6814c672737f9be
Reviewed-on: https://gerrit.spotify.net/gerrit/24346
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
luigi/mrrunner.py
==================
7bc18682;Chris Johnson;2012-10-02 10:59:22 +0000;Added explicit support for distributed cache files and archives
Change-Id: I54a6496869114f1f64da3af5ed7ac1edc8d3850b
Reviewed-on: https://gerrit.spotify.net/gerrit/24164
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
==================
8266ab4d;Erik Bernhardsson;2012-09-21 05:07:32 -0400;fixed image links in README.md

==

README.md
==================
23451422;Erik Bernhardsson;2012-09-20 13:09:40 -0400;added luigi/static to setup.py

==

setup.py
==================
d8762ec7;Erik Bernhardsson;2012-09-20 13:07:10 -0400;added back non-spotify setup.py

==

setup.py
==================
2657cdb5;Erik Bernhardsson;2012-09-20 13:03:53 -0400;trying to fix python syntax highlighting (attempt #2)

==

README.md
==================
1e68d6ae;Erik Bernhardsson;2012-09-20 12:56:10 -0400;trying to fix python syntax highlighting (attempt #1)

==

README.md
==================
06f8a5d9;Erik Bernhardsson;2012-09-20 12:51:35 -0400;trying to get the images in README to work (attempt #2)

==

README.md
==================
fc2f5792;Erik Bernhardsson;2012-09-20 12:49:49 -0400;trying to get the images in README to work

==

README.md
==================
0c1d95db;Erik Bernhardsson;2012-09-20 10:53:00 -0400;copyright cleanup + removed spotify stuff
Change-Id: I8d6148fd0002b0a41a6394daabcc107cf0a76fbe
Reviewed-on: https://gerrit.spotify.net/gerrit/23204
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/format.py
luigi/mrrunner.py
luigi/worker.py
test/_hdfs_test.py
test/central_planner_test.py
test/copy_test.py
test/date_interval_test.py
test/factorial_test.py
test/fib_test.py
test/file_test.py
test/hadoop_test.py
test/instance_test.py
test/instance_wrap_test.py
test/mock_test.py
test/namespace_test.py
test/namespace_test_helper.py
test/optparse_test.py
test/parameter_test.py
test/recursion_test.py
test/remote.py
test/test.py
test/util_test.py
test/worker_test.py
test/wrap_test.py
==================
b8d2f91b;erikbern@spotify.com;2012-09-20 13:10:45 +0000;fixed hadoop example
Change-Id: I0efe53498da24f31b8fed9ae11206fe362080dd0
Reviewed-on: https://gerrit.spotify.net/gerrit/23171
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

examples/wordcount_hadoop.py
==================
33713909;Elias Freider;2012-09-20 13:07:56 +0000;Using new luigi email list
Change-Id: I4875e9168965ef8030981e98ac625170d9953063
Reviewed-on: https://gerrit.spotify.net/gerrit/23168
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
==================
8d94ca37;Erik Bernhardsson;2012-09-20 07:32:35 -0400;more readme stuff
Change-Id: Ibefb087e7f56b1f61db36b0e7290e39d13f4a021
Reviewed-on: https://gerrit.spotify.net/gerrit/23129
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
==================
7fe67985;Elias Freider;2012-09-20 11:37:51 +0200;Colored logo
Change-Id: Ie649861b0f0cdcb685f8e4a458aaa902b3762c4d
Reviewed-on: https://gerrit.spotify.net/gerrit/23106
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

doc/luigi.png
==================
4ed7f828;Erik Bernhardsson;2012-09-19 19:16:38 -0400;new logo + some readme stuff
Change-Id: I3aaa2a71cfc9454e95b9ffb2728a25b2929c0d14
Reviewed-on: https://gerrit.spotify.net/gerrit/23066
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

README.md
doc/luigi.png
==================
025868f1;Elias Freider;2012-09-19 16:40:33 +0000;Cleaned up and fixed a variable mixup
Change-Id: Ib62eb29e289883bcb1ea8ba66ac0a748f4e95e6e
Reviewed-on: https://gerrit.spotify.net/gerrit/23044
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
luigi/interface.py
==================
4e42a27d;Elias Freider;2012-09-19 08:36:37 +0000;Added debug logging of task complete() check. Changed string representations of status to constant in a couple of places
Change-Id: Ic8a2f2d2bfd360cd707bc4b7aec6e906e845234e
Reviewed-on: https://gerrit.spotify.net/gerrit/22916
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/worker.py
==================
5b794fab;Elias Freider;2012-09-19 08:24:29 +0000;Added log_mirror option to MockFile
Change-Id: Ic2834a99f7f44b651346c624d54974e837e90d5b
Reviewed-on: https://gerrit.spotify.net/gerrit/22912
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/mock.py
==================
570ba8df;Erik Bernhardsson;2012-09-18 09:48:10 -0400;added (c) and apache license. should we add it to the test/ stuff as well?
Change-Id: If0cf63b1aff46d11a2e1585ffb355f92f08228d4
Reviewed-on: https://gerrit.spotify.net/gerrit/22789
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

LICENSE
README.md
luigi/__init__.py
luigi/date_interval.py
luigi/file.py
luigi/format.py
luigi/hadoop.py
luigi/hdfs.py
luigi/interface.py
luigi/lock.py
luigi/mock.py
luigi/mrrunner.py
luigi/parameter.py
luigi/process.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
luigi/util.py
luigi/worker.py
==================
65944c30;Nicholas Harteau;2012-09-18 05:20:17 -0400;fix some grammar
Change-Id: Ieadda40fdaa375139dd6cd37092787ecee521dd2
Reviewed-on: https://gerrit.spotify.net/gerrit/22730
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
==================
c7e8d169;Erik Bernhardsson;2012-09-17 14:15:40 -0400;more doc
Change-Id: Idb8eb6bca69d0cb5071d41e2e12511d81835dc2f
Reviewed-on: https://gerrit.spotify.net/gerrit/22671
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
doc/wordcount_more.png
==================
75cac4b0;Erik Bernhardsson;2012-09-17 07:31:45 -0400;more pics in the doc
Change-Id: Ia2c47bb2991c25806f4881c460f602fd61363294
Reviewed-on: https://gerrit.spotify.net/gerrit/22587
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
doc/fib.png
doc/fib_zoomed.png
doc/wordcount.png
doc/wordcount_hadoop.png
doc/wordcount_hadoop_failed.png
==================
aa2b18ae;erikbern@spotify.com;2012-09-14 03:15:39 +0000;more doc
Change-Id: I41022ffa05d9703b0ec2483698a653be7a89f929
Reviewed-on: https://gerrit.spotify.net/gerrit/22571
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
doc/luigi.png
examples/generate_input.py
examples/wordcount.py
examples/wordcount_hadoop.py
==================
c62e20ba;Erik Bernhardsson;2012-09-14 13:23:19 +0000;fix for optparse interaction
Change-Id: I7f5f92d67c1ce4c49709562dc638d4db1d0aa54e
Reviewed-on: https://gerrit.spotify.net/gerrit/22439
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/interface.py
==================
9617dc7e;erikbern@spotify.com;2012-09-13 21:55:57 +0000;fix for derived classes when using global params
Change-Id: Ic7c982b8a169edd9190564791fdc96c0f2020016
Reviewed-on: https://gerrit.spotify.net/gerrit/22345
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/util.py
test/util_test.py
==================
36efb244;erikbern@spotify.com;2012-09-13 21:16:24 +0000;fixed streaming_jar bug in hadoop.py
Change-Id: I29f671cf291692f66796e029caef9b9914797185
Reviewed-on: https://gerrit.spotify.net/gerrit/22340
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
==================
a87124bb;erikbern@spotify.com;2012-09-04 04:33:26 +0000;support for global parameters
Change-Id: I240107b9e47c31d48c6e057d3bc8757de7feb1dc
Reviewed-on: https://gerrit.spotify.net/gerrit/21215
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
luigi/interface.py
luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
70ad0f8b;erikbern@spotify.com;2012-09-12 05:48:52 +0000;more markdown doc
Change-Id: If6d0eb2af73f9891796908869837f8720a036dbc
Reviewed-on: https://gerrit.spotify.net/gerrit/22041
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
luigi.png
==================
3c41f0de;Fabian Alenius;2012-09-10 09:09:23 +0000;Put hadoop tmp files in /tmp/luigi/
Change-Id: Ic218ad099610ae69071f74fce0f07b8908c2248a
Reviewed-on: https://gerrit.spotify.net/gerrit/21739
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
==================
c783bdc1;Erik Bernhardsson;2012-08-24 11:32:03 -0400;initial readme stuff, very confusing, RFC
Change-Id: I1ea8135e63ca8ad793b518bb2bf698437fc45a58
Reviewed-on: https://gerrit.spotify.net/gerrit/20539
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

README.md
==================
b62cbe73;Elias Freider;2012-09-03 11:51:50 +0200;Added assertion that no colon characters are used in hdfs paths
Change-Id: I1bde4ada3226dd6ce62dae95463bee492697c5c1
Reviewed-on: https://gerrit.spotify.net/gerrit/21176
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/hdfs.py
==================
d69a904f;Elias Freider;2012-08-31 18:12:33 +0200;Dont remove tasks that are added after removal mark
Change-Id: I325ebd10e32050e344024819e4b4c61f4c01218b
Reviewed-on: https://gerrit.spotify.net/gerrit/21147
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/scheduler.py
==================
158da964;erikbern@spotify.com;2012-08-30 01:15:15 +0000;more robust exception fetching by passing hex data back through the tasktracker
Change-Id: Iaecb5adf2dceb7e7e49bff7c173ce7338cdb83c8
Reviewed-on: https://gerrit.spotify.net/gerrit/20935
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/hadoop.py
luigi/mrrunner.py
==================
9c34037e;Elias Freider;2012-05-04 13:51:24 +0000;First working rambo free map reduce framework for luigi
Change-Id: Ie78dcb36ef679379db8b12425ce5350af4111067
Reviewed-on: https://gerrit.spotify.net/gerrit/19593
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hadoop.py
luigi/interface.py
luigi/mock.py
luigi/mrrunner.py
luigi/task.py
test/hadoop_test.py
==================
66064e55;Erik Bernhardsson;2012-08-21 21:01:36 +0000;now derived classes can extend with more parameters if they want to. + unit test
Change-Id: I8fe6c2ade93f41fc3da6f2d5e3f04372985f9e5e
Reviewed-on: https://gerrit.spotify.net/gerrit/20188
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/util.py
test/util_test.py
==================
8cfda107;Erik Bernhardsson;2012-08-21 15:28:07 +0000;added better exceptions for broken parameters, added tests
Change-Id: Ia392f112de7d8b00298323e00ea859a9fa7f27e5
Reviewed-on: https://gerrit.spotify.net/gerrit/20163
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
fe9613d9;Elias Freider;2012-08-21 15:25:34 +0200;Complete tasks without workers were marked as broken
Change-Id: Ie2b0c5cba79782b76b283e706b298e98dfc5258c
Reviewed-on: https://gerrit.spotify.net/gerrit/20121
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/server.py
==================
d9bec6e3;Elias Freider;2012-08-20 16:19:57 +0200;Major refactor of scheduler API and rpc. Now atomically adds dependencies together with task to avoid some race conditions
Change-Id: I7628fcd19f01fd3efad0b43653e61d5abaed353f
Reviewed-on: https://gerrit.spotify.net/gerrit/19974
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

examples/foo.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/worker.py
test/central_planner_test.py
test/fib_test.py
test/instance_test.py
test/worker_test.py
==================
4ffabaff;Fabian Alenius;2012-08-14 22:09:18 +0000;Add --test to PigJobTask
Change-Id: I6b3d956e3d9a680d661bef4b56b8959936872aba
Reviewed-on: https://gerrit.spotify.net/gerrit/19587
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/file.py
==================
a5ce6118;Elias Freider;2012-08-15 15:26:10 +0200;Added additional debug information for unfulfilled dependencies error
Change-Id: I70e656aa54322b33497c7f1b6af3d4560dd482c5
Reviewed-on: https://gerrit.spotify.net/gerrit/19653
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/worker.py
==================
12acfc8d;Elias Freider;2012-08-15 11:04:23 +0200;Detect errors in hdfs.exists
Change-Id: Ibfb5b77b22c816d153733606103cfc3fa1c732fc
Reviewed-on: https://gerrit.spotify.net/gerrit/19614
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

luigi/hdfs.py
test/_hdfs_test.py
==================
b3c8e1e7;Erik Bernhardsson;2012-08-14 04:00:38 +0000;is_tmp support in LocalTarget
Change-Id: I97ed5474c2f1bdcbd24ff3184e17dcb912c0bf11
Reviewed-on: https://gerrit.spotify.net/gerrit/19415
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/file.py
test/file_test.py
==================
4353ecf5;Erik Bernhardsson;2012-08-14 00:03:45 +0000;messed up another thing in my last commit... fixing it and adding MORE test
Change-Id: Ib6a6d9cb3bc942a98d6283a7761b4a9e40c8bfd4
Reviewed-on: https://gerrit.spotify.net/gerrit/19410
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/task.py
test/parameter_test.py
==================
d0c2756b;Erik Bernhardsson;2012-08-10 22:28:51 +0000;added test for missing params
Change-Id: I008e365f3ef23c2aa7604351eb3e702e4e1123ab
Reviewed-on: https://gerrit.spotify.net/gerrit/19263
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

test/parameter_test.py
==================
994b2d0d;Fabian Alenius;2012-08-09 15:31:59 +0000;Added a move_dir function to HdfsTarget that should be atomic. JobTask and PigJobTask now uses them to ensure atomicity.
Change-Id: I5a09e879a1b7da0d1e5698320d7852835b5d2f83
Reviewed-on: https://gerrit.spotify.net/gerrit/19143
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

luigi/hdfs.py
==================
6d60dc87;Erik Bernhardsson;2012-08-08 14:09:02 +0000;this exception wasn't moved, my bad
Change-Id: I36aa3ec7a83160e7b5ab4bb7d5e09dc2616ed08e
Reviewed-on: https://gerrit.spotify.net/gerrit/19049
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/parameter.py
luigi/task.py
==================
adf92956;Daniel Andersson;2012-08-08 13:12:08 +0000;Fix test flag support: add keyword_only option for parameters.
There parameters cannot be set by positional arguments.

Change-Id: If05fcb593410e05f1a099af2ede425da28f93190
Reviewed-on: https://gerrit.spotify.net/gerrit/19039
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/parameter.py
luigi/task.py
==================
5c77d782;Fabian Alenius;2012-08-07 23:40:35 +0000;Added a test option to JobTask that samples data and then runs the job locally.
Change-Id: I5098e703d8ec5c58defb89190bf68ef4f503d40c
Reviewed-on: https://gerrit.spotify.net/gerrit/19006
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/file.py
==================
70d5b543;Erik Bernhardsson;2012-08-07 18:37:43 +0000;new wrap test (because i needed this pattern in rec-sys)
Change-Id: I8c0c1fb2bee26cdd17308141c15abffbc4c7b4bd
Reviewed-on: https://gerrit.spotify.net/gerrit/18987
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

test/instance_wrap_test.py
test/wrap_test.py
==================
d73a9dad;Erik Bernhardsson;2012-08-03 21:56:00 +0000;friday fun... better command line support for boolean parameters. also moved some parameter parsing code
Change-Id: Idc3e3c64193c09aa98e4d98f05a9fdd59cdea7b0
Reviewed-on: https://gerrit.spotify.net/gerrit/18701
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>

==

luigi/interface.py
luigi/parameter.py
luigi/task.py
test/parameter_test.py
==================
097055e0;Erik Bernhardsson;2012-08-03 19:09:20 +0000;moved get_params logic back
Change-Id: Ieed3b4e292075fb411d528b469985659dea4d3bb
Reviewed-on: https://gerrit.spotify.net/gerrit/18696
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/task.py
==================
39918478;Erik Bernhardsson;2012-08-02 15:36:16 +0000;Moved the non-Spotify HDFS parts into luigi.hdfs
Split up the HDFS tests too

Change-Id: I39ae819e657efb708320e667b59957b1c490856b
Reviewed-on: https://gerrit.spotify.net/gerrit/18586
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/hdfs.py
test/_hdfs_test.py
==================
cc783174;Elias Freider;2012-08-03 08:57:09 +0000;Fixed data validation when using is_list for subclasses of Parameter
Change-Id: Id428ee9cffa9f3a56a92e6f850b4bebcc88011ee
Reviewed-on: https://gerrit.spotify.net/gerrit/18621
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/task.py
test/parameter_test.py
==================
ee837fa6;Elias Freider;2012-08-03 08:41:32 +0000;Made date interval iterable
Change-Id: Id571c8615ed1763e52dfe8fb243b65b4a483192a
Reviewed-on: https://gerrit.spotify.net/gerrit/18617
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/date_interval.py
==================
8b5c8262;Elias Freider;2012-08-02 09:53:46 +0000;Refactored Task metaclass for better namespace support and parameter intialization. Added support for list parameters
Change-Id: Ib43edb4c76c12d14f3fad0ff896ac50e3ff07dba
Reviewed-on: https://gerrit.spotify.net/gerrit/18506
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/__init__.py
luigi/interface.py
luigi/parameter.py
luigi/task.py
test/namespace_test.py
test/namespace_test_helper.py
test/parameter_test.py
==================
49e9a38f;Erik Bernhardsson;2012-08-02 00:20:25 +0000;fixed broken test (made a stupid mistake first time)
Change-Id: I823b2759f5b169365b61992661a29ea8585b280c
Reviewed-on: https://gerrit.spotify.net/gerrit/18494
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

test/copy_test.py
==================
163ea8dd;Erik Bernhardsson;2012-08-02 00:08:26 +0000;fixed broken test
Change-Id: I91e9ad11767e69d472ee45ff0782ba8a2184ecb9
Reviewed-on: https://gerrit.spotify.net/gerrit/18493
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

test/copy_test.py
==================
c083da40;Erik Bernhardsson;2012-08-01 23:11:17 +0000;added a test to demonstrate task dependencies
Change-Id: I243eeb556cc4e20dad1386d3d4c5d5294a41cee1
Reviewed-on: https://gerrit.spotify.net/gerrit/18490
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

test/factorial_test.py
==================
298f7e2a;Erik Bernhardsson;2012-08-01 22:57:30 +0000;renamed Delegate to Derived because it makes more sense
Change-Id: I18b0d6ce9a78234ca821ae2b4c992cf55243ee03
Reviewed-on: https://gerrit.spotify.net/gerrit/18489
Reviewed-by: Erik Bernhardsson <erikbern@spotify.com>

==

luigi/util.py
test/wrap_test.py
==================
c72ae34b;Erik Bernhardsson;2012-08-01 03:00:10 +0000;Generic task-copy class (also implemented a Delegate helper class and rewrote the wrap test so it uses it)
Change-Id: Ic4a56db8c934be08e1b30e7fd814ca7aed55b582
Reviewed-on: https://gerrit.spotify.net/gerrit/18368
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/util.py
test/copy_test.py
test/wrap_test.py
==================
6245057e;Fabian Alenius;2012-07-31 12:53:30 +0000;Removed complete/1 from File.
Change-Id: Ifde773301d30189c40d0c4b90001b58fc8658d45
Reviewed-on: https://gerrit.spotify.net/gerrit/18320
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/file.py
==================
a64b9eba;Erik Bernhardsson;2012-07-30 23:41:10 +0000;sort list of tasks
Change-Id: I7c9a958edc85d6361c2038142433d977ab60284a
Reviewed-on: https://gerrit.spotify.net/gerrit/18275
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/interface.py
==================
6b6223d7;Fabian Alenius;2012-07-25 15:11:32 +0000;Added complete method to File object.
Change-Id: I31e95024371ebede73e2a6ea27091bc202789459
Reviewed-on: https://gerrit.spotify.net/gerrit/18030
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/file.py
==================
b361becb;Elias Freider;2012-07-17 11:18:10 +0200;Wrapper task now properly flattens requirements
Change-Id: I708050a2532c4b1b20df0784504aa3da5ac6cf36
Reviewed-on: https://gerrit.spotify.net/gerrit/17414
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/task.py
==================
9be4ddf4;Elias Freider;2012-07-17 10:40:35 +0200;Added WrapperTask to luigi top level classes
Change-Id: Iff5906b2dbb76677f035c29ca42763b01ae487ff
Reviewed-on: https://gerrit.spotify.net/gerrit/17410
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/__init__.py
==================
b4fc60cb;Elias Freider;2012-07-16 17:34:59 +0200;Added on_success interface. Better error messages on unfulfilled dependencies at runtime
Change-Id: I693f984b113ac68c7e2333067463a9e71c15218b
Reviewed-on: https://gerrit.spotify.net/gerrit/17353
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/task.py
luigi/worker.py
==================
8e704bb7;Elias Freider;2012-07-16 15:10:10 +0200;Accidentally referenced old name of renamed file
Change-Id: I608825cec81134f539c724cd83a2e208ecf7883d
Reviewed-on: https://gerrit.spotify.net/gerrit/17335
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/server.py
==================
2270d7b1;Elias Freider;2012-07-16 12:08:21 +0200;Rebased luigi state dump/load onto master
Change-Id: I8bc050aa165fd115de0fd90ed2052240afb30203
Reviewed-on: https://gerrit.spotify.net/gerrit/17311
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/process.py
luigi/scheduler.py
luigi/server.py
==================
7846bdef;Elias Freider;2012-07-12 14:20:08 +0200;Add foo example for multiple workers
Change-Id: I11046374591283bdf3c15f24629a374480b55164
Reviewed-on: https://gerrit.spotify.net/gerrit/17172
Reviewed-by: Anders Nyman <nyman@spotify.com>
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>

==

examples/foo.py
==================
12d1ce4d;Elias Freider;2012-07-13 15:47:25 +0200;Restart visualizers when they die. Still don't restart API instance
Change-Id: Id70bf25c2da10535350e3b4d52c6dbb33887ac27
Reviewed-on: https://gerrit.spotify.net/gerrit/17225
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/daemonizer.py
luigi/server.py
==================
6d253042;Anders Nyman;2012-07-13 12:35:42 +0200;Changed InputPipeProcessWrapper to not to garbage collection when a read() is called directly on the file. This should solve some problems when not kepping a reference to the input object.
Change-Id: I744d00e3ab48e56401323c32aab4ce0fb359cb8e
Reviewed-on: https://gerrit.spotify.net/gerrit/17196
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/format.py
==================
a3366b4e;Elias Freider;2012-07-13 10:49:27 +0200;Prevent random exiting processes from crashing the luigi master process
Change-Id: Iae1b993b0acf50f3bf47449f7aaed6ac8d6137f3
Reviewed-on: https://gerrit.spotify.net/gerrit/17173
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/daemonizer.py
luigi/worker.py
==================
2baddabf;Anders Nyman;2012-07-12 18:30:07 +0200;Switching to webhdfs for proxy based exists. This is expected to be better when forking processes
Change-Id: I12df21b7de78293a2d9fd8aa22cb6e23a09535a8
Reviewed-on: https://gerrit.spotify.net/gerrit/17136
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

test/_hdfs_test.py
==================
0051482d;Daniel Andersson;2012-07-12 14:02:45 +0000;Remove recently added /tmp for local files, since parent directories are not created.
Change-Id: I1dba61811e3023a7db3f23d82e1b5a301f369cba
Reviewed-on: https://gerrit.spotify.net/gerrit/17093
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/file.py
==================
c2962749;Elias Freider;2012-07-12 14:37:32 +0000;Reset random seed in worker processes to avoid conficts
Change-Id: If559b8f1cfdb6f934733e7a11f2fb0970ed530c9
Reviewed-on: https://gerrit.spotify.net/gerrit/17116
Reviewed-by: Daniel Andersson <koda@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/worker.py
==================
03e23434;Daniel Andersson;2012-07-12 10:30:07 +0000;Always produce temp output under /tmp.
This will help avoid accidental inclusion in globs.

Change-Id: I9c837900e2f7f812d998eb497e001757c4edd7d4
Reviewed-on: https://gerrit.spotify.net/gerrit/17046
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/file.py
==================
aef50abd;Elias Freider;2012-07-11 14:51:47 +0200;Refactorisations and fixes to enable multiple worker processes
Change-Id: I89eee63970124a5656e4a43603f6d9eff3d14dbf
Reviewed-on: https://gerrit.spotify.net/gerrit/17053
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/daemonizer.py
luigi/interface.py
luigi/mock.py
luigi/rpc.py
luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/central_planner_test.py
test/fib_test.py
test/instance_test.py
test/recursion_test.py
test/worker_test.py
==================
ccf61987;Anders Nyman;2012-07-11 15:37:23 +0200;Added support for formats to luigi.File. For this the format handling in spotify.luigi.hdfs was extracted for luigi.format
Change-Id: I35259799c1281d249b7298fdcddcb51633a4ff63
Reviewed-on: https://gerrit.spotify.net/gerrit/16975
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Anders Nyman <nyman@spotify.com>

==

luigi/file.py
luigi/format.py
test/file_test.py
==================
5a2aab6a;Erik Bernhardsson;2012-07-09 19:54:39 +0000;friendlier error msgs if the task doesn't exist
Change-Id: I9f53de6b4956dc4d4433e458d87e8c22a2f8f1a3
Reviewed-on: https://gerrit.spotify.net/gerrit/16793
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/interface.py
==================
2bc2cbf4;Elias Freider;2012-07-04 12:10:02 +0000;Fixed postgres import bug. Added __contains__ to DateInterval class for checking dates
Change-Id: I01152e88b83a148c5b209eccd420403471765262
Reviewed-on: https://gerrit.spotify.net/gerrit/16452
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Wouter de Bie <wouter@spotify.com>

==

luigi/date_interval.py
==================
a8a2955d;Anders Nyman;2012-07-02 16:28:36 +0000;Changing __path to path in order to enable running locally
Change-Id: I68eed585c963485c99dc80b0a6630084ae2e54a8
Reviewed-on: https://gerrit.spotify.net/gerrit/16284
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/file.py
==================
3d8dd690;Fabian Alenius;2012-07-02 16:21:52 +0000;Use logger instead of logging
Change-Id: I030f0ee55be20c3f47d2290a4837348462514f25
Reviewed-on: https://gerrit.spotify.net/gerrit/16283
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/worker.py
==================
f15e197b;Daniel Andersson;2012-06-15 15:01:45 +0000;Fix AI-175, by checking whether stdout is a tty.
Change-Id: I9a7929a6bf43f151fde6ccc6c6f7a073629c3b90
Reviewed-on: https://gerrit.spotify.net/gerrit/14489
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Wouter de Bie <wouter@spotify.com>

==

luigi/worker.py
==================
219caec4;Anders Nyman;2012-06-15 10:09:09 +0000;Increase retry delay to 15 minutes
Change-Id: I69392e6c7a9383b42794a4320b1b5000e7915a7c
Reviewed-on: https://gerrit.spotify.net/gerrit/14443
Reviewed-by: Fabian Alenius <fabian@spotify.com>

==

luigi/scheduler.py
==================
44d3ecbf;Daniel Andersson;2012-06-13 13:16:46 +0000;Merge branch 'freider/erroremail'
Change-Id: I3c26008577f00fbe549586279035ddcf35dfd9ec

==
==================
c60f53f3;Daniel Andersson;2012-06-13 13:13:37 +0000;Merge branch 'freider/erroremail'
Change-Id: I5ee75fc99096ea03df79384c6a5062660af51976

==
==================
223b9c7b;koda@spotify.com;2012-06-08 11:48:31 +0000;Add error email address configurability, and allow per-task overrides.
If there is a luigi config, it should contain an 'erroremail'
option. Also, support passing in task-specific overrides.

Change-Id: Ib679d54455a2333b5daf2b1d0cf11c834d905934
Reviewed-on: https://gerrit.spotify.net/gerrit/13689
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/interface.py
luigi/worker.py
==================
17c175e9;Pablo Barrera;2012-06-08 15:01:36 +0200;Adding reminder to update documentation
Change-Id: I98aa760032fa64759f83afc0adacc0aa7c46dbd7
Reviewed-on: https://gerrit.spotify.net/gerrit/13712
Reviewed-by: Daniel Andersson <koda@spotify.com>

==

luigi/interface.py
==================
6afe3fe1;Erik Bernhardsson;2012-06-08 23:19:09 +0000;atomic file class
Change-Id: I09361b3f917b7a0f466194b7f4a78a9478be37b6
Reviewed-on: https://gerrit.spotify.net/gerrit/13748
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/file.py
test/file_test.py
==================
66ec5a8e;William Lindström James;2012-06-08 09:26:59 +0000;Added glob_exists to HdfsTarget
Change-Id: I038cfc195d27904bd521fce177448b40c4f0534c
Reviewed-on: https://gerrit.spotify.net/gerrit/13651
Reviewed-by: Elias Freider <freider@spotify.com>

==

test/_hdfs_test.py
==================
a41f924c;Elias Freider;2012-05-31 16:53:26 +0000;Added externalize task wrapper to use for external dependencies
Change-Id: I3adb1a8bcb1dd9764f9e61decfddb62f907bda1b
Reviewed-on: https://gerrit.spotify.net/gerrit/13054
TC-Compile-And-Test: teamcity teamcity <teamcity@spotify.com>
Reviewed-by: Fabian Alenius <fabian@spotify.com>
Reviewed-by: Elias Freider <freider@spotify.com>

==

luigi/task.py
==================
ae293af7;Wouter de Bie;2012-05-22 17:32:21 +0000;Merge "Added multi-hourly"

==
==================
20add9da;Elias Freider;2012-05-21 20:35:14 +0000;First email test

==

luigi/interface.py
luigi/task.py
luigi/worker.py
==================
a2fc8da1;Pablo Barrera;2012-05-14 18:04:50 +0200;LocalTarget and File create folder while creating a new file
Change-Id: Ie8e2ba3bf18419ed11c40283799364b20e254753

==

luigi/file.py
==================
34d5057b;Fabian Alenius;2012-05-09 15:13:21 +0000;Fix opt-parse.

==

luigi/interface.py
==================
a255d436;Wouter de Bie;2012-05-07 17:54:28 +0200;Cleanup

==

test/_hdfs_test.py
test/date_interval_test.py
test/fib_test.py
test/instance_test.py
test/mock_test.py
test/optparse_test.py
test/recursion_test.py
test/test.py
test/worker_test.py
test/wrap_test.py
==================
b8ab86f3;Elias Freider;2012-05-07 08:38:49 +0000;Added experimental counter support and post-processing step to HadoopJobTask

==

examples/wordcount.py
==================
186a81c6;koda@spotify.com;2012-05-02 11:19:17 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
ac5a1a74;Elias Freider;2012-04-29 17:05:45 +0000;Fixed typo in parent folder creation and added unit test for it

==

test/_hdfs_test.py
==================
ec04f6b2;Elias Freider;2012-04-26 16:04:48 +0000;Added move() and rename()

==

test/_hdfs_test.py
==================
45d02dfc;Elias Freider;2012-04-26 15:45:28 +0000;Added support for None path

==

test/_hdfs_test.py
==================
5bfb3f02;Elias Freider;2012-04-26 15:37:11 +0000;Merge branch 'master' into stable

==
==================
6fa74d2b;Elias Freider;2012-04-26 15:36:42 +0000;Added (temporary?) support for is_tmp

==

test/_hdfs_test.py
==================
63d14f1b;Elias Freider;2012-04-26 14:35:24 +0000;Fixed unit tests

==

test/_hdfs_test.py
==================
e24beac5;Elias Freider;2012-04-26 14:11:50 +0000;Merge

==
==================
e7b598d3;Elias Freider;2012-04-26 13:08:18 +0000;Refactored a lot to support reading directories with multiple avro files

==

test/_hdfs_test.py
==================
0c385aef;Elias Freider;2012-04-25 16:08:55 +0000;More tests

==

test/_hdfs_test.py
==================
b3634c17;Elias Freider;2012-04-25 08:22:47 +0000;Removed hdfs tests from automatically run tests since hdfs isn't accessible from build server

==

test/_hdfs_test.py
==================
efe348ea;Elias Freider;2012-04-23 16:11:43 +0000;Added dir output support

==

test/hdfs_test.py
==================
1124297b;Elias Freider;2012-04-23 13:47:27 +0000;Refactored a bit

==

test/hdfs_test.py
==================
eef823ec;Elias Freider;2012-04-20 15:10:01 +0000;First hdfspath version

==

test/hdfs_test.py
==================
1f618918;Wouter de Bie;2012-04-14 18:03:04 +0000;Differentiate between forground and background color
Change-Id: I437cdd1e331ce3509377a4198706e7d1f73c6f21

==

luigi/server.py
==================
4b402194;Fabian Alenius;2012-04-10 12:01:44 +0000;Update log and pidfile locations.

==

luigi/daemonizer.py
==================
95305e54;Elias Freider;2012-04-04 11:07:33 +0200;Added content type detection to static file serveR

==

luigi/server.py
==================
b1c51a03;Elias Freider;2012-04-04 00:29:11 +0200;Autoupdate decorator wasn't working with positional arguments. Now using update method

==

luigi/scheduler.py
==================
5c2f9b98;Elias Freider;2012-04-03 19:18:24 +0000;Worker now only submits non-complete tasks. Might be a good idea to revert this and put the logic in the visualizer what to draw

==

luigi/rpc.py
luigi/scheduler.py
luigi/worker.py
==================
5c39eba2;Elias Freider;2012-04-03 17:07:23 +0000;Tasks that are complete are not submitted to scheduler

==

luigi/worker.py
==================
d5555960;Elias Freider;2012-04-03 16:17:38 +0000;Broken on newer pygraphviz for now

==

luigi/server.py
==================
79ad28af;Elias Freider;2012-04-03 15:09:16 +0000;exlaining comment

==

luigi/server.py
==================
af554e03;Elias Freider;2012-04-03 15:06:44 +0000;Fixed pygraphviz unicode bug

==

luigi/server.py
==================
95de3ae7;Elias Freider;2012-04-03 12:48:27 +0000;Fixed a couple of missing imports and string formatting

==

luigi/interface.py
luigi/worker.py
==================
ddcab239;Elias Freider;2012-04-03 14:18:34 +0200;Fixed RemoteScheduler references

==

luigi/worker.py
==================
5c9abb82;Elias Freider;2012-04-03 14:18:13 +0200;Fixed RemoteScheduler references

==

luigi/interface.py
==================
481230b0;Elias Freider;2012-04-03 12:06:39 +0000;A tiny bit of python 2.5 compatibility (not really)

==

luigi/daemonizer.py
==================
732f5315;Elias Freider;2012-04-03 13:51:23 +0200;Removed dependency on tornado.process

==

luigi/daemonizer.py
luigi/server.py
==================
9303334c;Elias Freider;2012-03-30 11:45:54 +0200;Decoupled visualizer server from graph API. Moved from cherrypy to tornado. Multiple visualizer processes. Moved CentralScheduler to scheduler.py. Fixed linting warnings.

==

luigi/__init__.py
luigi/central_planner.py
luigi/daemonizer.py
luigi/rpc.py
luigi/scheduler.py
luigi/server.py
luigi/static/header.html
luigi/worker.py
test/central_planner_test.py
test/worker_test.py
==================
fe35670d;Fabian Alenius;2012-03-29 14:12:19 +0000;Merge branch 'master' into stable

==
==================
0686d1ff;Fabian Alenius;2012-03-29 14:09:09 +0000;Merge branch 'master' into stable

==
==================
9cb34d7b;Elias Freider;2012-03-23 14:52:19 +0100;Ignore emacs backup files

==

.gitignore
==================
2684ecc4;Fabian Alenius;2012-03-23 10:58:03 +0000;Verify that config can be read.

==

luigi/interface.py
==================
737b548e;koda@spotify.com;2012-03-23 10:22:37 +0000;Update external with AddedPlaylists.

==

luigi/target.py
==================
96f13c0a;Fabian Alenius;2012-03-23 10:19:16 +0000;Get the scheduler from a config file.

==

luigi/interface.py
==================
993f0e78;Fabian Alenius;2012-03-23 10:18:11 +0000;Update warning message for external dependency.

==

luigi/worker.py
==================
36215cfe;Fabian Alenius;2012-03-20 16:35:18 +0000;Added more logging.

==

luigi/worker.py
==================
c56ca436;Fabian Alenius;2012-03-20 16:07:38 +0000;Remove logging filehandler. Add log message when scheduling task.

==

luigi/interface.py
luigi/worker.py
==================
cac259af;Fabian Alenius;2012-03-20 15:19:34 +0000;Added logging. Af warning is now issued when an external dependency is non-complete.

==

luigi/interface.py
luigi/worker.py
==================
808d02fa;Fabian Alenius;2012-03-20 11:03:58 +0000;Fixed so that running tasks can not be overriden to become pending by another worker. Also added a unit test for this.

==

luigi/central_planner.py
test/central_planner_test.py
==================
4ac98dc3;Fabian Alenius;2012-03-19 18:33:52 +0000;Fix worker_test.

==

test/worker_test.py
==================
4d16669b;Fabian Alenius;2012-03-19 17:33:03 +0000;Set number of threads to 1 to avoid concurrency problems.

==

luigi/server.py
==================
561019d3;Elias Freider;2012-03-15 10:38:31 +0000;Super strange merge

==
==================
08c0bc8e;Elias Freider;2012-03-12 13:34:22 +0000;Better error messaging on missing parameters

==

luigi/date_interval.py
luigi/task.py
==================
040fa4c5;Anders Nyman;2012-03-08 16:38:40 +0000;changes to make it work on shrek

==

luigi/interface.py
==================
2a5c6e32;Elias Freider;2012-03-08 08:46:24 +0000;More linting

==

luigi/target.py
==================
083105eb;Erik Bernhardsson;2012-03-07 17:19:02 -0500;todo comment

==

luigi/task.py
==================
f65d4cac;Erik Bernhardsson;2012-03-07 16:55:49 -0500;iso 8601

==

luigi/parameter.py
==================
5cbfcd5e;Elias Freider;2012-03-07 21:50:06 +0000;Prevent work-flow from dying on exception in run. Fixed linting warnings.

==

luigi/__init__.py
luigi/worker.py
==================
7e796b42;Elias Freider;2012-03-07 21:46:50 +0000;Added datetime backed datehour parameter

==

luigi/parameter.py
==================
5368ed75;Elias Freider;2012-03-07 19:45:39 +0000;Allow listing of hours for a date interval

==

luigi/date_interval.py
==================
7e63fa24;Elias Freider;2012-03-05 14:55:51 +0000;Fixed a lot of lint warnings. Added MissingParameterException when user doesn't supply parameter which doesn't have default. Changed so default arguments aren't parsed when using ArgParseInterface

==

luigi/interface.py
luigi/parameter.py
luigi/task.py
==================
f0f18004;Elias Freider;2012-02-27 11:47:31 +0000;Updated project book and documentation

==

.gitignore
==================
286929ba;Elias Freider;2012-02-20 14:26:43 +0000;scheduler-host option and default to showing text in svg view

==

luigi/interface.py
luigi/static/header.html
==================
3fd47d10;Fabian Alenius;2012-02-09 14:29:40 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
fee30a81;Erik Bernhardsson;2012-02-02 20:55:06 +0000;cleaned up Elias' code a bit

==

luigi/central_planner.py
luigi/server.py
luigi/static/header.html
luigi/static/header.html~
==================
868ed08b;Elias Freider;2012-02-02 12:50:33 +0100;Added javascript for zooming and panning in svg graphs

==

luigi/central_planner.py
luigi/server.py
luigi/static/SVGPan.js
luigi/static/header.html
luigi/static/header.html~
luigi/static/jquery-1.7.1.min.js
==================
da9e226a;Erik Bernhardsson;2012-01-31 16:28:22 +0000;use fdp when # nodes is too high

==

luigi/central_planner.py
==================
3258d770;Erik Bernhardsson;2012-01-31 05:39:08 +0000;proper daemonization

==

luigi/server.py
==================
71f82c49;Erik Bernhardsson;2012-01-31 05:06:50 +0000;removed spotify deb

==

test/fib_test.py
==================
db836417;Erik Bernhardsson;2012-01-31 05:06:39 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
f028d791;Erik Bernhardsson;2012-01-31 05:06:32 +0000;replace BaseHTTPServer with CherryPy

==

luigi/server.py
==================
d6271afb;Erik Bernhardsson;2012-01-26 01:05:13 +0000;added date interval param to init

==

luigi/__init__.py
==================
e90659b0;Erik Bernhardsson;2012-01-25 23:22:01 +0000;Merge commit 'a2347817ddec14ab7869816cb9e93cd9df1b978a'

==
==================
ac793446;Erik Bernhardsson;2012-01-25 23:21:56 +0000;Merge commit 'ec7823567269a64b14519211bfa325cd5c69229c'

==
==================
9d71cf7c;Erik Bernhardsson;2012-01-25 23:21:47 +0000;Merge commit 'fdaed4ea386ed465b9f32e21ed94a14a0d83e90e'

==
==================
ce70d443;Erik Bernhardsson;2012-01-25 23:00:12 +0000;temp stuff removed

==

luigi/task.py
==================
6bca31e4;Erik Bernhardsson;2012-01-25 22:59:58 +0000;bugfix for argparse

==

luigi/interface.py
==================
b5909da3;Erik Bernhardsson;2012-01-25 22:59:44 +0000;bugfix + test

==

luigi/central_planner.py
test/central_planner_test.py
==================
1548ad65;Erik Bernhardsson;2012-01-22 22:46:40 +0000;date interval, more methods and tests

==

luigi/date_interval.py
==================
12d01611;Erik Bernhardsson;2012-01-22 22:40:28 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
e3c76f72;Erik Bernhardsson;2012-01-22 22:35:27 +0000;date interval, more methods and tests
date interval, more methods and tests

==

luigi/date_interval.py
luigi/parameter.py
test/date_interval_test.py
==================
32e9f162;Erik Bernhardsson;2012-01-22 22:35:27 +0000;date interval, more methods and tests

==

luigi/date_interval.py
test/date_interval_test.py
==================
9e9764b7;Erik Bernhardsson;2012-01-20 01:35:56 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
693cdd7b;Erik Bernhardsson;2012-01-20 01:35:52 +0000;initial sketch of a date interval class (similar to spotify.builder2.period.Period)

==

luigi/parameter.py
test/date_interval_test.py
==================
28368965;Fabian Alenius;2012-01-18 17:11:36 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
75ef2af3;Erik Bernhardsson;2012-01-18 16:51:21 +0000;Merge branch 'master' of git.spotify.net:luigi

==
==================
e3cd4786;Erik Bernhardsson;2012-01-18 16:51:15 +0000;show tracebacks

==

luigi/worker.py
==================
389f20b4;Erik Bernhardsson;2012-01-18 16:51:03 +0000;svg instead of png

==

luigi/server.py
==================
cecbfe00;Erik Bernhardsson;2012-01-18 16:50:48 +0000;boolean param

==

luigi/__init__.py
luigi/parameter.py
==================
79762b3c;Erik Bernhardsson;2012-01-18 16:50:29 +0000;fixed incorrect order of params in the str repr of tasks

==

luigi/task.py
==================
a9fea138;Erik Bernhardsson;2012-01-10 22:08:55 +0000;cmdline help for lock

==

luigi/interface.py
==================
f75aa724;Erik Bernhardsson;2012-01-10 22:07:17 +0000;renamed daemon to lock

==

luigi/interface.py
luigi/lock.py
==================
5b8abb3a;Erik Bernhardsson;2012-01-10 22:03:00 +0000;moved ping from scheduler to worker

==

luigi/scheduler.py
luigi/worker.py
==================
b97c1b9a;Erik Bernhardsson;2012-01-10 22:02:46 +0000;added code not to run same process twice

==

luigi/interface.py
==================
39ea1635;Erik Bernhardsson;2012-01-10 22:02:32 +0000;added code not to run same process twice

==

luigi/daemon.py
==================
40573935;Erik Bernhardsson;2012-01-10 16:08:57 +0000;renamed client to worker, more tests

==

luigi/central_planner.py
luigi/scheduler.py
luigi/task.py
luigi/worker.py
test/central_planner_test.py
test/instance_test.py
test/worker_test.py
==================
7e31baa8;Erik Bernhardsson;2012-01-10 02:06:45 +0000;new test

==

luigi/worker.py
test/worker_test.py
==================
978a07fb;Erik Bernhardsson;2012-01-09 21:55:28 +0000;fixed broken test

==

test/worker_test.py
==================
668fac19;Erik Bernhardsson;2012-01-09 21:52:52 +0000;fixed broken stuff

==

luigi/worker.py
==================
b50b708e;Erik Bernhardsson;2012-01-09 21:51:37 +0000;worker test + fixed problem

==

luigi/central_planner.py
luigi/task.py
luigi/worker.py
test/worker_test.py
==================
e9a4efc7;Erik Bernhardsson;2012-01-09 21:31:55 +0000;added test

==

test/central_planner_test.py
==================
d1c2d08d;Erik Bernhardsson;2012-01-09 18:58:49 +0000;scaling + font size + proper line breaks

==

luigi/central_planner.py
==================
85641a3d;Erik Bernhardsson;2012-01-09 18:46:29 +0000;if tasks time out only change RUNNING to FAILED

==

luigi/central_planner.py
==================
4dd39307;Erik Bernhardsson;2012-01-05 15:29:13 +0000;forgot to commit scheduler changes

==

luigi/central_planner.py
==================
b78b2065;Erik Bernhardsson;2012-01-05 15:27:49 +0000;removed examples (add back another time)

==

examples/recursion_test.py
examples/test3.py
examples/test5_a.py
examples/test5_b.py
==================
8f96624f;Erik Bernhardsson;2012-01-05 15:23:56 +0000;more tests

==

test/central_planner_test.py
==================
7c67feca;Erik Bernhardsson;2012-01-05 13:22:53 +0000;removed dependencies on spotify.*

==

test/central_planner_test.py
test/instance_test.py
test/mock_test.py
test/recursion_test.py
test/test.py
test/wrap_test.py
==================
bb3ec4f3;Erik Bernhardsson;2012-01-05 13:13:25 +0000;tests for central planner

==

test/central_planner_test.py
==================
027d5e44;Erik Bernhardsson;2012-01-05 11:40:36 +0000;comments

==

luigi/server.py
==================
1d2a4ba4;Erik Bernhardsson;2012-01-05 11:30:10 +0000;autoupdate + get_work bugfix

==

luigi/central_planner.py
==================
c8943423;Erik Bernhardsson;2012-01-05 11:17:56 +0000;more documentation + TODO stuff

==

luigi/central_planner.py
luigi/scheduler.py
luigi/worker.py
==================
99dea669;Erik Bernhardsson;2012-01-04 23:48:54 +0000;various stuff

==

test/fib_test.py
test/instance_test.py
test/recursion_test.py
==================
763ba3a6;Erik Bernhardsson;2012-01-04 23:48:37 +0000;fixed problem with instance caching

==

luigi/task.py
==================
359f4172;Erik Bernhardsson;2012-01-04 17:37:21 +0000;major refactoring of scheduler/server code

==

luigi/__init__.py
luigi/central_planner.py
luigi/file.py
luigi/interface.py
luigi/scheduler.py
luigi/server.py
luigi/task.py
luigi/worker.py
==================
b4893074;Erik Bernhardsson;2012-01-04 13:49:23 +0000;refactoring scheduler code

==

luigi/interface.py
luigi/scheduler.py
luigi/server.py
test/fib_test.py
test/instance_test.py
test/recursion_test.py
==================
f98edb86;Erik Bernhardsson;2012-01-04 11:39:56 +0000;minor http stuff

==

luigi/scheduler.py
luigi/server.py
==================
4835e8f8;Erik Bernhardsson;2012-01-03 12:05:00 +0000;bugfixes related to the restructuring

==

luigi/__init__.py
==================
a6d59522;Erik Bernhardsson;2012-01-03 11:49:24 +0000;luigi-extra cleanup

==

luigi/__init__.py
==================
9abfed84;Erik Bernhardsson;2012-01-03 11:46:15 +0000;fixed tests

==

test/fib_test.py
test/instance_test.py
test/mock_test.py
test/optparse_test.py
test/recursion_test.py
test/wrap_test.py
==================
de513d2c;Erik Bernhardsson;2012-01-03 11:44:48 +0000;moved a bunch of files

==

luigi/__init__.py
luigi/file.py
luigi/interface.py
luigi/mock.py
luigi/parameter.py
luigi/scheduler.py
luigi/server.py
luigi/target.py
luigi/task.py
==================
ba3ceeef;Erik Bernhardsson;2011-12-27 11:20:31 +0000;added optparse tests

==

test/fib_test.py
==================
1288f08b;Erik Bernhardsson;2011-12-27 11:20:13 +0000;fixed argparse bug caught by unit tests

==

test/optparse_test.py
==================
52e04d30;Erik Bernhardsson;2011-12-14 18:02:08 +0000;more tests

==

test/fib_test.py
test/instance_test.py
test/recursion_test.py
test/remote.py
==================
a2f05519;Erik Bernhardsson;2011-12-13 17:57:37 +0000;caching task instances

==

test/instance_test.py
==================
c25879dd;Erik Bernhardsson;2011-11-24 01:21:34 +0000;recursion test

==

test/recursion_test.py
==================
39246822;Erik Bernhardsson;2011-11-24 01:16:29 +0000;moved to wrong directory + actually split it

==

test/recursion_test.py
==================
b3ac6ee5;Erik Bernhardsson;2011-11-24 01:14:28 +0000;moved recursion example into test

==

examples/recursion_test.py
==================
cddf6aab;Erik Bernhardsson;2011-11-24 01:12:53 +0000;removed crap

==

test/test_fib.py
==================
b3a4a00b;Erik Bernhardsson;2011-11-24 01:12:25 +0000;moved wrap example to test

==

test/wrap_test.py
==================
da0aa767;Erik Bernhardsson;2011-11-24 01:06:47 +0000;renamed file

==

test/wrap_test.py
==================
e97f5e31;Erik Bernhardsson;2011-11-24 00:35:47 +0000;remade the fibonacci stuff into a unit test

==

test/fib_test.py
test/test_fib.py
==================
f323e49e;Erik Bernhardsson;2011-11-24 00:19:42 +0000;MockFile class + unit tests

==

test/mock_test.py
test/test.py
==================
1319338b;Erik Bernhardsson;2011-11-23 23:15:31 +0000;renamed test examples

==

examples/test3.py
examples/test4.py
examples/test5_a.py
examples/test5_b.py
examples/test_fib.py
examples/test_wrap.py
==================
1f289391;Erik Bernhardsson;2011-11-23 19:25:49 +0000;renamed builder3 to luigi in the code

==

test/test3.py
test/test4.py
test/test5_a.py
test/test5_b.py
test/test_fib.py
test/test_wrap.py
==================
3111ec90;Erik Bernhardsson;2011-11-23 00:05:57 +0000;moved stuff to the right directory

==

__init__.py
file.py
interface.py
parameter.py
scheduler.py
server.py
task.py
==================
239e9de8;Erik Bernhardsson;2011-11-23 00:04:38 +0000;Revert "renamed builder3 to luigi in the code"
This reverts commit 5ed4ef3e92655c66c6144f66c6b792d778c60946.

==

test/test3.py
test/test4.py
test/test5_a.py
test/test5_b.py
test/test_fib.py
test/test_wrap.py
==================
61773dd6;Erik Bernhardsson;2011-11-23 00:03:47 +0000;Revert "put stuff in right place, think i screwed up the log after all"
This reverts commit b8ad858dfc995299453a5000eff6e4451662db57.

==

__init__.py
file.py
interface.py
parameter.py
scheduler.py
server.py
task.py
==================
ea72ebd6;Erik Bernhardsson;2011-11-22 23:59:58 +0000;put stuff in right place, think i screwed up the log after all

==

__init__.py
file.py
interface.py
parameter.py
scheduler.py
server.py
task.py
==================
999630bd;Erik Bernhardsson;2011-11-22 23:55:31 +0000;renamed builder3 to luigi in the code

==

test/test3.py
test/test4.py
test/test5_a.py
test/test5_b.py
test/test_fib.py
test/test_wrap.py
==================
07dee441;Erik Bernhardsson;2011-11-22 23:38:30 +0000;moved tests

==

test/test3.py
test/test4.py
test/test5_a.py
test/test5_b.py
test/test_fib.py
test/test_wrap.py
==================
9c84ece5;Erik Bernhardsson;2011-11-22 00:58:49 +0000;workaround for argparse bug + cleaner code

==

interface.py
task.py
==================
aecd2e9f;Erik Bernhardsson;2011-11-22 00:53:00 +0000;workaround for argparse bug + cleaner code

==

interface.py
task.py
==================
c9c2a142;Erik Bernhardsson;2011-11-21 16:00:07 +0000;parameter stuff

==

__init__.py
interface.py
parameter.py
==================
62a211d5;Erik Bernhardsson;2011-11-20 20:10:54 +0000;server stuff

==

scheduler.py
server.py
==================
d8e7d85a;Erik Bernhardsson;2011-11-20 19:51:05 +0000;added fib test + some input parsing

==

parameter.py
scheduler.py
task.py
==================
95fe33ef;Elias Freider;2011-11-18 16:09:51 -0500;Nasty merge

==
==================
5df59bf4;Erik Bernhardsson;2011-11-18 19:52:32 +0000;server drawing graphsgit add spotify/builder3/rule.py! though they look like shit...

==

rule.py
scheduler.py
server.py
==================
b8bc9188;Elias Freider;2011-11-18 14:52:01 -0500;Added ExternalTask class for adding external dependencies

==

__init__.py
scheduler.py
task.py
==================
4e3302be;Erik Bernhardsson;2011-11-18 18:16:51 +0000;removed target

==

__init__.py
rule.py
target.py
==================
6370bf6f;Erik Bernhardsson;2011-11-18 13:09:49 -0500;drawing png using graphviz

==

server.py
==================
aad3c2f4;Elias Freider;2011-11-18 13:03:53 -0500;Removed target. Renamed task.exists -> task.complete

==

__init__.py
scheduler.py
target.py
task.py
==================
2a6139f9;Elias Freider;2011-11-18 12:52:12 -0500;Renamed rule -> task

==

__init__.py
interface.py
scheduler.py
server.py
task.py
==================
5f02d4dd;Erik Bernhardsson;2011-11-18 12:38:41 -0500;syncing failed tasks + retry logic

==

scheduler.py
server.py
==================
a30feac3;Erik Bernhardsson;2011-11-18 12:18:59 -0500;json input + can-build param

==

scheduler.py
server.py
==================
77f9ca61;Erik Bernhardsson;2011-11-17 21:45:35 -0500;default values

==

interface.py
==================
08bc8de4;Erik Bernhardsson;2011-11-17 21:40:49 -0500;remote scheduler by default

==

__init__.py
interface.py
scheduler.py
==================
03130ecc;Erik Bernhardsson;2011-11-17 21:25:22 -0500;remote scheduler prototype

==

interface.py
scheduler.py
server.py
==================
35f25177;Erik Bernhardsson;2011-11-17 18:45:56 -0500;cmdline interface prototype

==

__init__.py
interface.py
parameter.py
rule.py
scheduler.py
task.py
==================
2c8a0059;Elias Freider;2011-11-17 17:49:57 -0500;requires now takes required steps, input() returns the output of those required steps

==

rule.py
scheduler.py
==================
8e16e534;Erik Bernhardsson;2011-11-17 17:10:27 -0500;works

==

rule.py
scheduler.py
==================
69f9796a;Elias Freider;2011-11-17 16:37:21 -0500;Flatten stuff

==

rule.py
==================
ab429f1f;Elias Freider;2011-11-17 21:30:27 +0000;Added flattener for structured data

==

rule.py
==================
1dbf31c5;Erik Bernhardsson;2011-11-17 16:26:31 -0500;Rule almost working

==

__init__.py
argument.py
parameter.py
rule.py
==================
056055f3;Erik Bernhardsson;2011-11-17 15:50:04 -0500;builder3 imported from conductor

==

__init__.py
argument.py
file.py
rule.py
scheduler.py
target.py
task.py
